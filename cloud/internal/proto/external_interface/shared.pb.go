// Copyright (c) 2018 Anki, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License in the file LICENSE.txt or at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// External interface for robot <-> app and robot <-> sdk communication

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: shared.proto

package Anki_Vector_external_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtocolVersionResponse_Result int32

const (
	ProtocolVersionResponse_UNSUPPORTED ProtocolVersionResponse_Result = 0
	ProtocolVersionResponse_SUCCESS     ProtocolVersionResponse_Result = 1
)

// Enum value maps for ProtocolVersionResponse_Result.
var (
	ProtocolVersionResponse_Result_name = map[int32]string{
		0: "UNSUPPORTED",
		1: "SUCCESS",
	}
	ProtocolVersionResponse_Result_value = map[string]int32{
		"UNSUPPORTED": 0,
		"SUCCESS":     1,
	}
)

func (x ProtocolVersionResponse_Result) Enum() *ProtocolVersionResponse_Result {
	p := new(ProtocolVersionResponse_Result)
	*p = x
	return p
}

func (x ProtocolVersionResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtocolVersionResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_proto_enumTypes[0].Descriptor()
}

func (ProtocolVersionResponse_Result) Type() protoreflect.EnumType {
	return &file_shared_proto_enumTypes[0]
}

func (x ProtocolVersionResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtocolVersionResponse_Result.Descriptor instead.
func (ProtocolVersionResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{1, 0}
}

type UserAuthenticationResponse_Code int32

const (
	UserAuthenticationResponse_UNAUTHORIZED UserAuthenticationResponse_Code = 0
	UserAuthenticationResponse_AUTHORIZED   UserAuthenticationResponse_Code = 1
)

// Enum value maps for UserAuthenticationResponse_Code.
var (
	UserAuthenticationResponse_Code_name = map[int32]string{
		0: "UNAUTHORIZED",
		1: "AUTHORIZED",
	}
	UserAuthenticationResponse_Code_value = map[string]int32{
		"UNAUTHORIZED": 0,
		"AUTHORIZED":   1,
	}
)

func (x UserAuthenticationResponse_Code) Enum() *UserAuthenticationResponse_Code {
	p := new(UserAuthenticationResponse_Code)
	*p = x
	return p
}

func (x UserAuthenticationResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserAuthenticationResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_proto_enumTypes[1].Descriptor()
}

func (UserAuthenticationResponse_Code) Type() protoreflect.EnumType {
	return &file_shared_proto_enumTypes[1]
}

func (x UserAuthenticationResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserAuthenticationResponse_Code.Descriptor instead.
func (UserAuthenticationResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{8, 0}
}

type ProtocolVersionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ClientVersion  int64                  `protobuf:"varint,1,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	MinHostVersion int64                  `protobuf:"varint,2,opt,name=min_host_version,json=minHostVersion,proto3" json:"min_host_version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProtocolVersionRequest) Reset() {
	*x = ProtocolVersionRequest{}
	mi := &file_shared_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtocolVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolVersionRequest) ProtoMessage() {}

func (x *ProtocolVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolVersionRequest.ProtoReflect.Descriptor instead.
func (*ProtocolVersionRequest) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{0}
}

func (x *ProtocolVersionRequest) GetClientVersion() int64 {
	if x != nil {
		return x.ClientVersion
	}
	return 0
}

func (x *ProtocolVersionRequest) GetMinHostVersion() int64 {
	if x != nil {
		return x.MinHostVersion
	}
	return 0
}

type ProtocolVersionResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Result        ProtocolVersionResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=Anki.Vector.external_interface.ProtocolVersionResponse_Result" json:"result,omitempty"`
	HostVersion   int64                          `protobuf:"varint,2,opt,name=host_version,json=hostVersion,proto3" json:"host_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtocolVersionResponse) Reset() {
	*x = ProtocolVersionResponse{}
	mi := &file_shared_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtocolVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolVersionResponse) ProtoMessage() {}

func (x *ProtocolVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolVersionResponse.ProtoReflect.Descriptor instead.
func (*ProtocolVersionResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{1}
}

func (x *ProtocolVersionResponse) GetResult() ProtocolVersionResponse_Result {
	if x != nil {
		return x.Result
	}
	return ProtocolVersionResponse_UNSUPPORTED
}

func (x *ProtocolVersionResponse) GetHostVersion() int64 {
	if x != nil {
		return x.HostVersion
	}
	return 0
}

type ConnectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	IsPrimary     bool                   `protobuf:"varint,2,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionResponse) Reset() {
	*x = ConnectionResponse{}
	mi := &file_shared_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionResponse) ProtoMessage() {}

func (x *ConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionResponse.ProtoReflect.Descriptor instead.
func (*ConnectionResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectionResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ConnectionResponse) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

// Messages originating from the engine
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*Event_TimeStampedStatus
	//	*Event_Onboarding
	//	*Event_WakeWord
	//	*Event_AttentionTransfer
	//	*Event_RobotObservedFace
	//	*Event_RobotChangedObservedFaceId
	//	*Event_ObjectEvent
	//	*Event_StimulationInfo
	//	*Event_PhotoTaken
	//	*Event_RobotState
	//	*Event_CubeBattery
	//	*Event_KeepAlive
	//	*Event_ConnectionResponse
	//	*Event_JdocsChanged
	//	*Event_AlexaAuthEvent
	//	*Event_MirrorModeDisabled
	//	*Event_VisionModesAutoDisabled
	//	*Event_CheckUpdateStatusResponse
	//	*Event_UserIntent
	//	*Event_RobotObservedMotion
	//	*Event_RobotErasedEnrolledFace
	//	*Event_RobotRenamedEnrolledFace
	//	*Event_CameraSettingsUpdate
	//	*Event_UnexpectedMovement
	EventType     isEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_shared_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetEventType() isEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *Event) GetTimeStampedStatus() *TimeStampedStatus {
	if x != nil {
		if x, ok := x.EventType.(*Event_TimeStampedStatus); ok {
			return x.TimeStampedStatus
		}
	}
	return nil
}

func (x *Event) GetOnboarding() *Onboarding {
	if x != nil {
		if x, ok := x.EventType.(*Event_Onboarding); ok {
			return x.Onboarding
		}
	}
	return nil
}

func (x *Event) GetWakeWord() *WakeWord {
	if x != nil {
		if x, ok := x.EventType.(*Event_WakeWord); ok {
			return x.WakeWord
		}
	}
	return nil
}

func (x *Event) GetAttentionTransfer() *AttentionTransfer {
	if x != nil {
		if x, ok := x.EventType.(*Event_AttentionTransfer); ok {
			return x.AttentionTransfer
		}
	}
	return nil
}

func (x *Event) GetRobotObservedFace() *RobotObservedFace {
	if x != nil {
		if x, ok := x.EventType.(*Event_RobotObservedFace); ok {
			return x.RobotObservedFace
		}
	}
	return nil
}

func (x *Event) GetRobotChangedObservedFaceId() *RobotChangedObservedFaceID {
	if x != nil {
		if x, ok := x.EventType.(*Event_RobotChangedObservedFaceId); ok {
			return x.RobotChangedObservedFaceId
		}
	}
	return nil
}

func (x *Event) GetObjectEvent() *ObjectEvent {
	if x != nil {
		if x, ok := x.EventType.(*Event_ObjectEvent); ok {
			return x.ObjectEvent
		}
	}
	return nil
}

func (x *Event) GetStimulationInfo() *StimulationInfo {
	if x != nil {
		if x, ok := x.EventType.(*Event_StimulationInfo); ok {
			return x.StimulationInfo
		}
	}
	return nil
}

func (x *Event) GetPhotoTaken() *PhotoTaken {
	if x != nil {
		if x, ok := x.EventType.(*Event_PhotoTaken); ok {
			return x.PhotoTaken
		}
	}
	return nil
}

func (x *Event) GetRobotState() *RobotState {
	if x != nil {
		if x, ok := x.EventType.(*Event_RobotState); ok {
			return x.RobotState
		}
	}
	return nil
}

func (x *Event) GetCubeBattery() *CubeBattery {
	if x != nil {
		if x, ok := x.EventType.(*Event_CubeBattery); ok {
			return x.CubeBattery
		}
	}
	return nil
}

func (x *Event) GetKeepAlive() *KeepAlivePing {
	if x != nil {
		if x, ok := x.EventType.(*Event_KeepAlive); ok {
			return x.KeepAlive
		}
	}
	return nil
}

func (x *Event) GetConnectionResponse() *ConnectionResponse {
	if x != nil {
		if x, ok := x.EventType.(*Event_ConnectionResponse); ok {
			return x.ConnectionResponse
		}
	}
	return nil
}

func (x *Event) GetJdocsChanged() *JdocsChanged {
	if x != nil {
		if x, ok := x.EventType.(*Event_JdocsChanged); ok {
			return x.JdocsChanged
		}
	}
	return nil
}

func (x *Event) GetAlexaAuthEvent() *AlexaAuthEvent {
	if x != nil {
		if x, ok := x.EventType.(*Event_AlexaAuthEvent); ok {
			return x.AlexaAuthEvent
		}
	}
	return nil
}

func (x *Event) GetMirrorModeDisabled() *MirrorModeDisabled {
	if x != nil {
		if x, ok := x.EventType.(*Event_MirrorModeDisabled); ok {
			return x.MirrorModeDisabled
		}
	}
	return nil
}

func (x *Event) GetVisionModesAutoDisabled() *VisionModesAutoDisabled {
	if x != nil {
		if x, ok := x.EventType.(*Event_VisionModesAutoDisabled); ok {
			return x.VisionModesAutoDisabled
		}
	}
	return nil
}

func (x *Event) GetCheckUpdateStatusResponse() *CheckUpdateStatusResponse {
	if x != nil {
		if x, ok := x.EventType.(*Event_CheckUpdateStatusResponse); ok {
			return x.CheckUpdateStatusResponse
		}
	}
	return nil
}

func (x *Event) GetUserIntent() *UserIntent {
	if x != nil {
		if x, ok := x.EventType.(*Event_UserIntent); ok {
			return x.UserIntent
		}
	}
	return nil
}

func (x *Event) GetRobotObservedMotion() *RobotObservedMotion {
	if x != nil {
		if x, ok := x.EventType.(*Event_RobotObservedMotion); ok {
			return x.RobotObservedMotion
		}
	}
	return nil
}

func (x *Event) GetRobotErasedEnrolledFace() *RobotErasedEnrolledFace {
	if x != nil {
		if x, ok := x.EventType.(*Event_RobotErasedEnrolledFace); ok {
			return x.RobotErasedEnrolledFace
		}
	}
	return nil
}

func (x *Event) GetRobotRenamedEnrolledFace() *RobotRenamedEnrolledFace {
	if x != nil {
		if x, ok := x.EventType.(*Event_RobotRenamedEnrolledFace); ok {
			return x.RobotRenamedEnrolledFace
		}
	}
	return nil
}

func (x *Event) GetCameraSettingsUpdate() *CameraSettingsUpdate {
	if x != nil {
		if x, ok := x.EventType.(*Event_CameraSettingsUpdate); ok {
			return x.CameraSettingsUpdate
		}
	}
	return nil
}

func (x *Event) GetUnexpectedMovement() *UnexpectedMovement {
	if x != nil {
		if x, ok := x.EventType.(*Event_UnexpectedMovement); ok {
			return x.UnexpectedMovement
		}
	}
	return nil
}

type isEvent_EventType interface {
	isEvent_EventType()
}

type Event_TimeStampedStatus struct {
	TimeStampedStatus *TimeStampedStatus `protobuf:"bytes,1,opt,name=time_stamped_status,json=timeStampedStatus,proto3,oneof"`
}

type Event_Onboarding struct {
	Onboarding *Onboarding `protobuf:"bytes,2,opt,name=onboarding,proto3,oneof"` // App only
}

type Event_WakeWord struct {
	WakeWord *WakeWord `protobuf:"bytes,3,opt,name=wake_word,json=wakeWord,proto3,oneof"`
}

type Event_AttentionTransfer struct {
	AttentionTransfer *AttentionTransfer `protobuf:"bytes,4,opt,name=attention_transfer,json=attentionTransfer,proto3,oneof"` // App only
}

type Event_RobotObservedFace struct {
	RobotObservedFace *RobotObservedFace `protobuf:"bytes,5,opt,name=robot_observed_face,json=robotObservedFace,proto3,oneof"`
}

type Event_RobotChangedObservedFaceId struct {
	RobotChangedObservedFaceId *RobotChangedObservedFaceID `protobuf:"bytes,6,opt,name=robot_changed_observed_face_id,json=robotChangedObservedFaceId,proto3,oneof"`
}

type Event_ObjectEvent struct {
	ObjectEvent *ObjectEvent `protobuf:"bytes,7,opt,name=object_event,json=objectEvent,proto3,oneof"`
}

type Event_StimulationInfo struct {
	StimulationInfo *StimulationInfo `protobuf:"bytes,8,opt,name=stimulation_info,json=stimulationInfo,proto3,oneof"`
}

type Event_PhotoTaken struct {
	PhotoTaken *PhotoTaken `protobuf:"bytes,9,opt,name=photo_taken,json=photoTaken,proto3,oneof"`
}

type Event_RobotState struct {
	RobotState *RobotState `protobuf:"bytes,10,opt,name=robot_state,json=robotState,proto3,oneof"`
}

type Event_CubeBattery struct {
	CubeBattery *CubeBattery `protobuf:"bytes,11,opt,name=cube_battery,json=cubeBattery,proto3,oneof"`
}

type Event_KeepAlive struct {
	KeepAlive *KeepAlivePing `protobuf:"bytes,12,opt,name=keep_alive,json=keepAlive,proto3,oneof"` // Used by Vector to verify the connection is still alive.
}

type Event_ConnectionResponse struct {
	ConnectionResponse *ConnectionResponse `protobuf:"bytes,13,opt,name=connection_response,json=connectionResponse,proto3,oneof"`
}

type Event_JdocsChanged struct {
	JdocsChanged *JdocsChanged `protobuf:"bytes,14,opt,name=jdocs_changed,json=jdocsChanged,proto3,oneof"` // App only
}

type Event_AlexaAuthEvent struct {
	AlexaAuthEvent *AlexaAuthEvent `protobuf:"bytes,15,opt,name=alexa_auth_event,json=alexaAuthEvent,proto3,oneof"` // App only
}

type Event_MirrorModeDisabled struct {
	MirrorModeDisabled *MirrorModeDisabled `protobuf:"bytes,16,opt,name=mirror_mode_disabled,json=mirrorModeDisabled,proto3,oneof"`
}

type Event_VisionModesAutoDisabled struct {
	VisionModesAutoDisabled *VisionModesAutoDisabled `protobuf:"bytes,17,opt,name=vision_modes_auto_disabled,json=visionModesAutoDisabled,proto3,oneof"`
}

type Event_CheckUpdateStatusResponse struct {
	CheckUpdateStatusResponse *CheckUpdateStatusResponse `protobuf:"bytes,18,opt,name=check_update_status_response,json=checkUpdateStatusResponse,proto3,oneof"` // App only
}

type Event_UserIntent struct {
	UserIntent *UserIntent `protobuf:"bytes,19,opt,name=user_intent,json=userIntent,proto3,oneof"`
}

type Event_RobotObservedMotion struct {
	RobotObservedMotion *RobotObservedMotion `protobuf:"bytes,20,opt,name=robot_observed_motion,json=robotObservedMotion,proto3,oneof"`
}

type Event_RobotErasedEnrolledFace struct {
	RobotErasedEnrolledFace *RobotErasedEnrolledFace `protobuf:"bytes,21,opt,name=robot_erased_enrolled_face,json=robotErasedEnrolledFace,proto3,oneof"`
}

type Event_RobotRenamedEnrolledFace struct {
	RobotRenamedEnrolledFace *RobotRenamedEnrolledFace `protobuf:"bytes,22,opt,name=robot_renamed_enrolled_face,json=robotRenamedEnrolledFace,proto3,oneof"`
}

type Event_CameraSettingsUpdate struct {
	CameraSettingsUpdate *CameraSettingsUpdate `protobuf:"bytes,23,opt,name=camera_settings_update,json=cameraSettingsUpdate,proto3,oneof"`
}

type Event_UnexpectedMovement struct {
	UnexpectedMovement *UnexpectedMovement `protobuf:"bytes,24,opt,name=unexpected_movement,json=unexpectedMovement,proto3,oneof"`
}

func (*Event_TimeStampedStatus) isEvent_EventType() {}

func (*Event_Onboarding) isEvent_EventType() {}

func (*Event_WakeWord) isEvent_EventType() {}

func (*Event_AttentionTransfer) isEvent_EventType() {}

func (*Event_RobotObservedFace) isEvent_EventType() {}

func (*Event_RobotChangedObservedFaceId) isEvent_EventType() {}

func (*Event_ObjectEvent) isEvent_EventType() {}

func (*Event_StimulationInfo) isEvent_EventType() {}

func (*Event_PhotoTaken) isEvent_EventType() {}

func (*Event_RobotState) isEvent_EventType() {}

func (*Event_CubeBattery) isEvent_EventType() {}

func (*Event_KeepAlive) isEvent_EventType() {}

func (*Event_ConnectionResponse) isEvent_EventType() {}

func (*Event_JdocsChanged) isEvent_EventType() {}

func (*Event_AlexaAuthEvent) isEvent_EventType() {}

func (*Event_MirrorModeDisabled) isEvent_EventType() {}

func (*Event_VisionModesAutoDisabled) isEvent_EventType() {}

func (*Event_CheckUpdateStatusResponse) isEvent_EventType() {}

func (*Event_UserIntent) isEvent_EventType() {}

func (*Event_RobotObservedMotion) isEvent_EventType() {}

func (*Event_RobotErasedEnrolledFace) isEvent_EventType() {}

func (*Event_RobotRenamedEnrolledFace) isEvent_EventType() {}

func (*Event_CameraSettingsUpdate) isEvent_EventType() {}

func (*Event_UnexpectedMovement) isEvent_EventType() {}

type FilterList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []string               `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterList) Reset() {
	*x = FilterList{}
	mi := &file_shared_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterList) ProtoMessage() {}

func (x *FilterList) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterList.ProtoReflect.Descriptor instead.
func (*FilterList) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{4}
}

func (x *FilterList) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

type EventRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ListType:
	//
	//	*EventRequest_WhiteList
	//	*EventRequest_BlackList
	ListType      isEventRequest_ListType `protobuf_oneof:"list_type"`
	ConnectionId  string                  `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRequest) Reset() {
	*x = EventRequest{}
	mi := &file_shared_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRequest) ProtoMessage() {}

func (x *EventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRequest.ProtoReflect.Descriptor instead.
func (*EventRequest) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{5}
}

func (x *EventRequest) GetListType() isEventRequest_ListType {
	if x != nil {
		return x.ListType
	}
	return nil
}

func (x *EventRequest) GetWhiteList() *FilterList {
	if x != nil {
		if x, ok := x.ListType.(*EventRequest_WhiteList); ok {
			return x.WhiteList
		}
	}
	return nil
}

func (x *EventRequest) GetBlackList() *FilterList {
	if x != nil {
		if x, ok := x.ListType.(*EventRequest_BlackList); ok {
			return x.BlackList
		}
	}
	return nil
}

func (x *EventRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type isEventRequest_ListType interface {
	isEventRequest_ListType()
}

type EventRequest_WhiteList struct {
	WhiteList *FilterList `protobuf:"bytes,1,opt,name=white_list,json=whiteList,proto3,oneof"`
}

type EventRequest_BlackList struct {
	BlackList *FilterList `protobuf:"bytes,2,opt,name=black_list,json=blackList,proto3,oneof"`
}

func (*EventRequest_WhiteList) isEventRequest_ListType() {}

func (*EventRequest_BlackList) isEventRequest_ListType() {}

type EventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Event         *Event                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventResponse) Reset() {
	*x = EventResponse{}
	mi := &file_shared_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponse) ProtoMessage() {}

func (x *EventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponse.ProtoReflect.Descriptor instead.
func (*EventResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{6}
}

func (x *EventResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *EventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type UserAuthenticationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserSessionId []byte                 `protobuf:"bytes,1,opt,name=user_session_id,json=userSessionId,proto3" json:"user_session_id,omitempty"`
	ClientName    []byte                 `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserAuthenticationRequest) Reset() {
	*x = UserAuthenticationRequest{}
	mi := &file_shared_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAuthenticationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthenticationRequest) ProtoMessage() {}

func (x *UserAuthenticationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthenticationRequest.ProtoReflect.Descriptor instead.
func (*UserAuthenticationRequest) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{7}
}

func (x *UserAuthenticationRequest) GetUserSessionId() []byte {
	if x != nil {
		return x.UserSessionId
	}
	return nil
}

func (x *UserAuthenticationRequest) GetClientName() []byte {
	if x != nil {
		return x.ClientName
	}
	return nil
}

type UserAuthenticationResponse struct {
	state           protoimpl.MessageState          `protogen:"open.v1"`
	Status          *ResponseStatus                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Code            UserAuthenticationResponse_Code `protobuf:"varint,2,opt,name=code,proto3,enum=Anki.Vector.external_interface.UserAuthenticationResponse_Code" json:"code,omitempty"`
	ClientTokenGuid []byte                          `protobuf:"bytes,3,opt,name=client_token_guid,json=clientTokenGuid,proto3" json:"client_token_guid,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UserAuthenticationResponse) Reset() {
	*x = UserAuthenticationResponse{}
	mi := &file_shared_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAuthenticationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthenticationResponse) ProtoMessage() {}

func (x *UserAuthenticationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthenticationResponse.ProtoReflect.Descriptor instead.
func (*UserAuthenticationResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{8}
}

func (x *UserAuthenticationResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UserAuthenticationResponse) GetCode() UserAuthenticationResponse_Code {
	if x != nil {
		return x.Code
	}
	return UserAuthenticationResponse_UNAUTHORIZED
}

func (x *UserAuthenticationResponse) GetClientTokenGuid() []byte {
	if x != nil {
		return x.ClientTokenGuid
	}
	return nil
}

// These are only used between engine and gateway, so the field indices may
// be changed freely, unlike externally-facing proto definitions that where
// changes could break backwards-compatibility.
type GatewayWrapper struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// connection_id can be used to identify multiple messages going to/from
	// the same source
	ConnectionId uint64 `protobuf:"varint,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// Types that are valid to be assigned to OneofMessageType:
	//
	//	*GatewayWrapper_Event
	//	*GatewayWrapper_OnboardingStateRequest
	//	*GatewayWrapper_OnboardingState
	//	*GatewayWrapper_OnboardingSkipOnboarding
	//	*GatewayWrapper_OnboardingRestart
	//	*GatewayWrapper_OnboardingCompleteRequest
	//	*GatewayWrapper_OnboardingCompleteResponse
	//	*GatewayWrapper_OnboardingWakeUpRequest
	//	*GatewayWrapper_OnboardingWakeUpResponse
	//	*GatewayWrapper_OnboardingWakeUpStartedRequest
	//	*GatewayWrapper_OnboardingWakeUpStartedResponse
	//	*GatewayWrapper_OnboardingSetPhaseRequest
	//	*GatewayWrapper_OnboardingSetPhaseResponse
	//	*GatewayWrapper_OnboardingPhaseProgressRequest
	//	*GatewayWrapper_OnboardingPhaseProgressResponse
	//	*GatewayWrapper_OnboardingChargeInfoRequest
	//	*GatewayWrapper_OnboardingChargeInfoResponse
	//	*GatewayWrapper_OnboardingMarkCompleteAndExit
	//	*GatewayWrapper_LatestAttentionTransferRequest
	//	*GatewayWrapper_LatestAttentionTransfer
	//	*GatewayWrapper_PhotosInfoRequest
	//	*GatewayWrapper_PhotosInfoResponse
	//	*GatewayWrapper_PhotoRequest
	//	*GatewayWrapper_PhotoPathMessage
	//	*GatewayWrapper_ThumbnailRequest
	//	*GatewayWrapper_ThumbnailPathMessage
	//	*GatewayWrapper_DeletePhotoRequest
	//	*GatewayWrapper_DeletePhotoResponse
	//	*GatewayWrapper_PullJdocsRequest
	//	*GatewayWrapper_PullJdocsResponse
	//	*GatewayWrapper_UpdateSettingsRequest
	//	*GatewayWrapper_UpdateSettingsResponse
	//	*GatewayWrapper_UpdateAccountSettingsRequest
	//	*GatewayWrapper_UpdateAccountSettingsResponse
	//	*GatewayWrapper_UpdateUserEntitlementsRequest
	//	*GatewayWrapper_UpdateUserEntitlementsResponse
	//	*GatewayWrapper_DriveOffChargerRequest
	//	*GatewayWrapper_DriveOffChargerResponse
	//	*GatewayWrapper_DriveOnChargerRequest
	//	*GatewayWrapper_DriveOnChargerResponse
	//	*GatewayWrapper_FindFacesRequest
	//	*GatewayWrapper_FindFacesResponse
	//	*GatewayWrapper_LookAroundInPlaceRequest
	//	*GatewayWrapper_LookAroundInPlaceResponse
	//	*GatewayWrapper_RollBlockRequest
	//	*GatewayWrapper_RollBlockResponse
	//	*GatewayWrapper_EnrollFaceRequest
	//	*GatewayWrapper_EnrollFaceResponse
	//	*GatewayWrapper_SetFaceToEnrollRequest
	//	*GatewayWrapper_SetFaceToEnrollResponse
	//	*GatewayWrapper_CancelBehaviorRequest
	//	*GatewayWrapper_CancelBehaviorResponse
	//	*GatewayWrapper_TurnInPlaceRequest
	//	*GatewayWrapper_TurnInPlaceResponse
	//	*GatewayWrapper_DriveStraightRequest
	//	*GatewayWrapper_DriveStraightResponse
	//	*GatewayWrapper_SetHeadAngleRequest
	//	*GatewayWrapper_SetHeadAngleResponse
	//	*GatewayWrapper_SetLiftHeightRequest
	//	*GatewayWrapper_SetLiftHeightResponse
	//	*GatewayWrapper_PlayAnimationRequest
	//	*GatewayWrapper_PlayAnimationResponse
	//	*GatewayWrapper_GoToPoseRequest
	//	*GatewayWrapper_GoToPoseResponse
	//	*GatewayWrapper_DockWithCubeRequest
	//	*GatewayWrapper_DockWithCubeResponse
	//	*GatewayWrapper_DriveWheelsRequest
	//	*GatewayWrapper_DriveWheelsResponse
	//	*GatewayWrapper_ListAnimationsRequest
	//	*GatewayWrapper_ListAnimationsResponse
	//	*GatewayWrapper_PlayAnimationTriggerRequest
	//	*GatewayWrapper_ListAnimationTriggersRequest
	//	*GatewayWrapper_ListAnimationTriggersResponse
	//	*GatewayWrapper_CancelActionByIdTagRequest
	//	*GatewayWrapper_CancelActionByIdTagResponse
	//	*GatewayWrapper_TurnTowardsFaceRequest
	//	*GatewayWrapper_TurnTowardsFaceResponse
	//	*GatewayWrapper_GoToObjectRequest
	//	*GatewayWrapper_GoToObjectResponse
	//	*GatewayWrapper_RollObjectRequest
	//	*GatewayWrapper_RollObjectResponse
	//	*GatewayWrapper_PopAWheelieRequest
	//	*GatewayWrapper_PopAWheelieResponse
	//	*GatewayWrapper_PickupObjectRequest
	//	*GatewayWrapper_PickupObjectResponse
	//	*GatewayWrapper_PlaceObjectOnGroundHereRequest
	//	*GatewayWrapper_PlaceObjectOnGroundHereResponse
	//	*GatewayWrapper_StopAllMotorsRequest
	//	*GatewayWrapper_StopAllMotorsResponse
	//	*GatewayWrapper_RobotHistoryRequest
	//	*GatewayWrapper_RobotHistoryResponse
	//	*GatewayWrapper_ConnectCubeRequest
	//	*GatewayWrapper_ConnectCubeResponse
	//	*GatewayWrapper_DisconnectCubeRequest
	//	*GatewayWrapper_FlashCubeLightsRequest
	//	*GatewayWrapper_ForgetPreferredCubeRequest
	//	*GatewayWrapper_SetPreferredCubeRequest
	//	*GatewayWrapper_SetCubeLightsRequest
	//	*GatewayWrapper_CubesAvailableRequest
	//	*GatewayWrapper_CubesAvailableResponse
	//	*GatewayWrapper_BatteryStateRequest
	//	*GatewayWrapper_BatteryStateResponse
	//	*GatewayWrapper_VersionStateRequest
	//	*GatewayWrapper_VersionStateResponse
	//	*GatewayWrapper_SayTextRequest
	//	*GatewayWrapper_SayTextResponse
	//	*GatewayWrapper_ControlRequest
	//	*GatewayWrapper_ControlRelease
	//	*GatewayWrapper_BehaviorControlResponse
	//	*GatewayWrapper_ImageChunk
	//	*GatewayWrapper_EnableMarkerDetectionRequest
	//	*GatewayWrapper_EnableMarkerDetectionResponse
	//	*GatewayWrapper_EnableFaceDetectionRequest
	//	*GatewayWrapper_EnableFaceDetectionResponse
	//	*GatewayWrapper_EnableMotionDetectionRequest
	//	*GatewayWrapper_EnableMotionDetectionResponse
	//	*GatewayWrapper_EnableMirrorModeRequest
	//	*GatewayWrapper_EnableMirrorModeResponse
	//	*GatewayWrapper_EnableImageStreamingRequest
	//	*GatewayWrapper_EnableImageStreamingResponse
	//	*GatewayWrapper_IsImageStreamingEnabledRequest
	//	*GatewayWrapper_IsImageStreamingEnabledResponse
	//	*GatewayWrapper_CheckCloudRequest
	//	*GatewayWrapper_CheckCloudResponse
	//	*GatewayWrapper_AudioSendModeRequest
	//	*GatewayWrapper_AudioSendModeChanged
	//	*GatewayWrapper_AudioChunk
	//	*GatewayWrapper_FeatureFlagRequest
	//	*GatewayWrapper_FeatureFlagResponse
	//	*GatewayWrapper_FeatureFlagListRequest
	//	*GatewayWrapper_FeatureFlagListResponse
	//	*GatewayWrapper_AppDisconnected
	//	*GatewayWrapper_AlexaAuthStateRequest
	//	*GatewayWrapper_AlexaAuthStateResponse
	//	*GatewayWrapper_AlexaOptInRequest
	//	*GatewayWrapper_AlexaOptInResponse
	//	*GatewayWrapper_SetEyeColorRequest
	//	*GatewayWrapper_SetEyeColorResponse
	//	*GatewayWrapper_MasterVolumeRequest
	//	*GatewayWrapper_MasterVolumeResponse
	//	*GatewayWrapper_SetCameraSettingsRequest
	//	*GatewayWrapper_SetCameraSettingsResponse
	//	*GatewayWrapper_CameraConfigRequest
	//	*GatewayWrapper_CameraConfigResponse
	//	*GatewayWrapper_ExternalAudioStreamPrepare
	//	*GatewayWrapper_ExternalAudioStreamChunk
	//	*GatewayWrapper_ExternalAudioStreamCancel
	//	*GatewayWrapper_ExternalAudioStreamComplete
	//	*GatewayWrapper_ExternalAudioStreamResponse
	OneofMessageType isGatewayWrapper_OneofMessageType `protobuf_oneof:"oneof_message_type"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GatewayWrapper) Reset() {
	*x = GatewayWrapper{}
	mi := &file_shared_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayWrapper) ProtoMessage() {}

func (x *GatewayWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayWrapper.ProtoReflect.Descriptor instead.
func (*GatewayWrapper) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{9}
}

func (x *GatewayWrapper) GetConnectionId() uint64 {
	if x != nil {
		return x.ConnectionId
	}
	return 0
}

func (x *GatewayWrapper) GetOneofMessageType() isGatewayWrapper_OneofMessageType {
	if x != nil {
		return x.OneofMessageType
	}
	return nil
}

func (x *GatewayWrapper) GetEvent() *Event {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingStateRequest() *OnboardingStateRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingStateRequest); ok {
			return x.OnboardingStateRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingState() *OnboardingState {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingState); ok {
			return x.OnboardingState
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingSkipOnboarding() *OnboardingSkipOnboarding {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingSkipOnboarding); ok {
			return x.OnboardingSkipOnboarding
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingRestart() *OnboardingRestart {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingRestart); ok {
			return x.OnboardingRestart
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingCompleteRequest() *OnboardingCompleteRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingCompleteRequest); ok {
			return x.OnboardingCompleteRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingCompleteResponse() *OnboardingCompleteResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingCompleteResponse); ok {
			return x.OnboardingCompleteResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingWakeUpRequest() *OnboardingWakeUpRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingWakeUpRequest); ok {
			return x.OnboardingWakeUpRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingWakeUpResponse() *OnboardingWakeUpResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingWakeUpResponse); ok {
			return x.OnboardingWakeUpResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingWakeUpStartedRequest() *OnboardingWakeUpStartedRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingWakeUpStartedRequest); ok {
			return x.OnboardingWakeUpStartedRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingWakeUpStartedResponse() *OnboardingWakeUpStartedResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingWakeUpStartedResponse); ok {
			return x.OnboardingWakeUpStartedResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingSetPhaseRequest() *OnboardingSetPhaseRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingSetPhaseRequest); ok {
			return x.OnboardingSetPhaseRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingSetPhaseResponse() *OnboardingSetPhaseResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingSetPhaseResponse); ok {
			return x.OnboardingSetPhaseResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingPhaseProgressRequest() *OnboardingPhaseProgressRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingPhaseProgressRequest); ok {
			return x.OnboardingPhaseProgressRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingPhaseProgressResponse() *OnboardingPhaseProgressResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingPhaseProgressResponse); ok {
			return x.OnboardingPhaseProgressResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingChargeInfoRequest() *OnboardingChargeInfoRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingChargeInfoRequest); ok {
			return x.OnboardingChargeInfoRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingChargeInfoResponse() *OnboardingChargeInfoResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingChargeInfoResponse); ok {
			return x.OnboardingChargeInfoResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetOnboardingMarkCompleteAndExit() *OnboardingMarkCompleteAndExit {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_OnboardingMarkCompleteAndExit); ok {
			return x.OnboardingMarkCompleteAndExit
		}
	}
	return nil
}

func (x *GatewayWrapper) GetLatestAttentionTransferRequest() *LatestAttentionTransferRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_LatestAttentionTransferRequest); ok {
			return x.LatestAttentionTransferRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetLatestAttentionTransfer() *LatestAttentionTransfer {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_LatestAttentionTransfer); ok {
			return x.LatestAttentionTransfer
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPhotosInfoRequest() *PhotosInfoRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PhotosInfoRequest); ok {
			return x.PhotosInfoRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPhotosInfoResponse() *PhotosInfoResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PhotosInfoResponse); ok {
			return x.PhotosInfoResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPhotoRequest() *PhotoRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PhotoRequest); ok {
			return x.PhotoRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPhotoPathMessage() *PhotoPathMessage {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PhotoPathMessage); ok {
			return x.PhotoPathMessage
		}
	}
	return nil
}

func (x *GatewayWrapper) GetThumbnailRequest() *ThumbnailRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ThumbnailRequest); ok {
			return x.ThumbnailRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetThumbnailPathMessage() *ThumbnailPathMessage {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ThumbnailPathMessage); ok {
			return x.ThumbnailPathMessage
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDeletePhotoRequest() *DeletePhotoRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DeletePhotoRequest); ok {
			return x.DeletePhotoRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDeletePhotoResponse() *DeletePhotoResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DeletePhotoResponse); ok {
			return x.DeletePhotoResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPullJdocsRequest() *PullJdocsRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PullJdocsRequest); ok {
			return x.PullJdocsRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPullJdocsResponse() *PullJdocsResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PullJdocsResponse); ok {
			return x.PullJdocsResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetUpdateSettingsRequest() *UpdateSettingsRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_UpdateSettingsRequest); ok {
			return x.UpdateSettingsRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetUpdateSettingsResponse() *UpdateSettingsResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_UpdateSettingsResponse); ok {
			return x.UpdateSettingsResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetUpdateAccountSettingsRequest() *UpdateAccountSettingsRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_UpdateAccountSettingsRequest); ok {
			return x.UpdateAccountSettingsRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetUpdateAccountSettingsResponse() *UpdateAccountSettingsResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_UpdateAccountSettingsResponse); ok {
			return x.UpdateAccountSettingsResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetUpdateUserEntitlementsRequest() *UpdateUserEntitlementsRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_UpdateUserEntitlementsRequest); ok {
			return x.UpdateUserEntitlementsRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetUpdateUserEntitlementsResponse() *UpdateUserEntitlementsResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_UpdateUserEntitlementsResponse); ok {
			return x.UpdateUserEntitlementsResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDriveOffChargerRequest() *DriveOffChargerRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DriveOffChargerRequest); ok {
			return x.DriveOffChargerRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDriveOffChargerResponse() *DriveOffChargerResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DriveOffChargerResponse); ok {
			return x.DriveOffChargerResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDriveOnChargerRequest() *DriveOnChargerRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DriveOnChargerRequest); ok {
			return x.DriveOnChargerRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDriveOnChargerResponse() *DriveOnChargerResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DriveOnChargerResponse); ok {
			return x.DriveOnChargerResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetFindFacesRequest() *FindFacesRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_FindFacesRequest); ok {
			return x.FindFacesRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetFindFacesResponse() *FindFacesResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_FindFacesResponse); ok {
			return x.FindFacesResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetLookAroundInPlaceRequest() *LookAroundInPlaceRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_LookAroundInPlaceRequest); ok {
			return x.LookAroundInPlaceRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetLookAroundInPlaceResponse() *LookAroundInPlaceResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_LookAroundInPlaceResponse); ok {
			return x.LookAroundInPlaceResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetRollBlockRequest() *RollBlockRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_RollBlockRequest); ok {
			return x.RollBlockRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetRollBlockResponse() *RollBlockResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_RollBlockResponse); ok {
			return x.RollBlockResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnrollFaceRequest() *EnrollFaceRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnrollFaceRequest); ok {
			return x.EnrollFaceRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnrollFaceResponse() *EnrollFaceResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnrollFaceResponse); ok {
			return x.EnrollFaceResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetFaceToEnrollRequest() *SetFaceToEnrollRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetFaceToEnrollRequest); ok {
			return x.SetFaceToEnrollRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetFaceToEnrollResponse() *SetFaceToEnrollResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetFaceToEnrollResponse); ok {
			return x.SetFaceToEnrollResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetCancelBehaviorRequest() *CancelBehaviorRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_CancelBehaviorRequest); ok {
			return x.CancelBehaviorRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetCancelBehaviorResponse() *CancelBehaviorResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_CancelBehaviorResponse); ok {
			return x.CancelBehaviorResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetTurnInPlaceRequest() *TurnInPlaceRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_TurnInPlaceRequest); ok {
			return x.TurnInPlaceRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetTurnInPlaceResponse() *TurnInPlaceResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_TurnInPlaceResponse); ok {
			return x.TurnInPlaceResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDriveStraightRequest() *DriveStraightRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DriveStraightRequest); ok {
			return x.DriveStraightRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDriveStraightResponse() *DriveStraightResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DriveStraightResponse); ok {
			return x.DriveStraightResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetHeadAngleRequest() *SetHeadAngleRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetHeadAngleRequest); ok {
			return x.SetHeadAngleRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetHeadAngleResponse() *SetHeadAngleResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetHeadAngleResponse); ok {
			return x.SetHeadAngleResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetLiftHeightRequest() *SetLiftHeightRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetLiftHeightRequest); ok {
			return x.SetLiftHeightRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetLiftHeightResponse() *SetLiftHeightResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetLiftHeightResponse); ok {
			return x.SetLiftHeightResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPlayAnimationRequest() *PlayAnimationRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PlayAnimationRequest); ok {
			return x.PlayAnimationRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPlayAnimationResponse() *PlayAnimationResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PlayAnimationResponse); ok {
			return x.PlayAnimationResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetGoToPoseRequest() *GoToPoseRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_GoToPoseRequest); ok {
			return x.GoToPoseRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetGoToPoseResponse() *GoToPoseResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_GoToPoseResponse); ok {
			return x.GoToPoseResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDockWithCubeRequest() *DockWithCubeRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DockWithCubeRequest); ok {
			return x.DockWithCubeRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDockWithCubeResponse() *DockWithCubeResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DockWithCubeResponse); ok {
			return x.DockWithCubeResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDriveWheelsRequest() *DriveWheelsRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DriveWheelsRequest); ok {
			return x.DriveWheelsRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDriveWheelsResponse() *DriveWheelsResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DriveWheelsResponse); ok {
			return x.DriveWheelsResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetListAnimationsRequest() *ListAnimationsRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ListAnimationsRequest); ok {
			return x.ListAnimationsRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetListAnimationsResponse() *ListAnimationsResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ListAnimationsResponse); ok {
			return x.ListAnimationsResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPlayAnimationTriggerRequest() *PlayAnimationTriggerRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PlayAnimationTriggerRequest); ok {
			return x.PlayAnimationTriggerRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetListAnimationTriggersRequest() *ListAnimationTriggersRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ListAnimationTriggersRequest); ok {
			return x.ListAnimationTriggersRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetListAnimationTriggersResponse() *ListAnimationTriggersResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ListAnimationTriggersResponse); ok {
			return x.ListAnimationTriggersResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetCancelActionByIdTagRequest() *CancelActionByIdTagRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_CancelActionByIdTagRequest); ok {
			return x.CancelActionByIdTagRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetCancelActionByIdTagResponse() *CancelActionByIdTagResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_CancelActionByIdTagResponse); ok {
			return x.CancelActionByIdTagResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetTurnTowardsFaceRequest() *TurnTowardsFaceRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_TurnTowardsFaceRequest); ok {
			return x.TurnTowardsFaceRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetTurnTowardsFaceResponse() *TurnTowardsFaceResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_TurnTowardsFaceResponse); ok {
			return x.TurnTowardsFaceResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetGoToObjectRequest() *GoToObjectRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_GoToObjectRequest); ok {
			return x.GoToObjectRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetGoToObjectResponse() *GoToObjectResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_GoToObjectResponse); ok {
			return x.GoToObjectResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetRollObjectRequest() *RollObjectRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_RollObjectRequest); ok {
			return x.RollObjectRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetRollObjectResponse() *RollObjectResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_RollObjectResponse); ok {
			return x.RollObjectResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPopAWheelieRequest() *PopAWheelieRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PopAWheelieRequest); ok {
			return x.PopAWheelieRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPopAWheelieResponse() *PopAWheelieResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PopAWheelieResponse); ok {
			return x.PopAWheelieResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPickupObjectRequest() *PickupObjectRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PickupObjectRequest); ok {
			return x.PickupObjectRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPickupObjectResponse() *PickupObjectResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PickupObjectResponse); ok {
			return x.PickupObjectResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPlaceObjectOnGroundHereRequest() *PlaceObjectOnGroundHereRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PlaceObjectOnGroundHereRequest); ok {
			return x.PlaceObjectOnGroundHereRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetPlaceObjectOnGroundHereResponse() *PlaceObjectOnGroundHereResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_PlaceObjectOnGroundHereResponse); ok {
			return x.PlaceObjectOnGroundHereResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetStopAllMotorsRequest() *StopAllMotorsRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_StopAllMotorsRequest); ok {
			return x.StopAllMotorsRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetStopAllMotorsResponse() *StopAllMotorsResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_StopAllMotorsResponse); ok {
			return x.StopAllMotorsResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetRobotHistoryRequest() *RobotHistoryRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_RobotHistoryRequest); ok {
			return x.RobotHistoryRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetRobotHistoryResponse() *RobotHistoryResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_RobotHistoryResponse); ok {
			return x.RobotHistoryResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetConnectCubeRequest() *ConnectCubeRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ConnectCubeRequest); ok {
			return x.ConnectCubeRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetConnectCubeResponse() *ConnectCubeResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ConnectCubeResponse); ok {
			return x.ConnectCubeResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetDisconnectCubeRequest() *DisconnectCubeRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_DisconnectCubeRequest); ok {
			return x.DisconnectCubeRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetFlashCubeLightsRequest() *FlashCubeLightsRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_FlashCubeLightsRequest); ok {
			return x.FlashCubeLightsRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetForgetPreferredCubeRequest() *ForgetPreferredCubeRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ForgetPreferredCubeRequest); ok {
			return x.ForgetPreferredCubeRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetPreferredCubeRequest() *SetPreferredCubeRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetPreferredCubeRequest); ok {
			return x.SetPreferredCubeRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetCubeLightsRequest() *SetCubeLightsRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetCubeLightsRequest); ok {
			return x.SetCubeLightsRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetCubesAvailableRequest() *CubesAvailableRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_CubesAvailableRequest); ok {
			return x.CubesAvailableRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetCubesAvailableResponse() *CubesAvailableResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_CubesAvailableResponse); ok {
			return x.CubesAvailableResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetBatteryStateRequest() *BatteryStateRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_BatteryStateRequest); ok {
			return x.BatteryStateRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetBatteryStateResponse() *BatteryStateResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_BatteryStateResponse); ok {
			return x.BatteryStateResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetVersionStateRequest() *VersionStateRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_VersionStateRequest); ok {
			return x.VersionStateRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetVersionStateResponse() *VersionStateResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_VersionStateResponse); ok {
			return x.VersionStateResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSayTextRequest() *SayTextRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SayTextRequest); ok {
			return x.SayTextRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSayTextResponse() *SayTextResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SayTextResponse); ok {
			return x.SayTextResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetControlRequest() *ControlRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ControlRequest); ok {
			return x.ControlRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetControlRelease() *ControlRelease {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ControlRelease); ok {
			return x.ControlRelease
		}
	}
	return nil
}

func (x *GatewayWrapper) GetBehaviorControlResponse() *BehaviorControlResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_BehaviorControlResponse); ok {
			return x.BehaviorControlResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetImageChunk() *ImageChunk {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ImageChunk); ok {
			return x.ImageChunk
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnableMarkerDetectionRequest() *EnableMarkerDetectionRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnableMarkerDetectionRequest); ok {
			return x.EnableMarkerDetectionRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnableMarkerDetectionResponse() *EnableMarkerDetectionResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnableMarkerDetectionResponse); ok {
			return x.EnableMarkerDetectionResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnableFaceDetectionRequest() *EnableFaceDetectionRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnableFaceDetectionRequest); ok {
			return x.EnableFaceDetectionRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnableFaceDetectionResponse() *EnableFaceDetectionResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnableFaceDetectionResponse); ok {
			return x.EnableFaceDetectionResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnableMotionDetectionRequest() *EnableMotionDetectionRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnableMotionDetectionRequest); ok {
			return x.EnableMotionDetectionRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnableMotionDetectionResponse() *EnableMotionDetectionResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnableMotionDetectionResponse); ok {
			return x.EnableMotionDetectionResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnableMirrorModeRequest() *EnableMirrorModeRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnableMirrorModeRequest); ok {
			return x.EnableMirrorModeRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnableMirrorModeResponse() *EnableMirrorModeResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnableMirrorModeResponse); ok {
			return x.EnableMirrorModeResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnableImageStreamingRequest() *EnableImageStreamingRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnableImageStreamingRequest); ok {
			return x.EnableImageStreamingRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetEnableImageStreamingResponse() *EnableImageStreamingResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_EnableImageStreamingResponse); ok {
			return x.EnableImageStreamingResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetIsImageStreamingEnabledRequest() *IsImageStreamingEnabledRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_IsImageStreamingEnabledRequest); ok {
			return x.IsImageStreamingEnabledRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetIsImageStreamingEnabledResponse() *IsImageStreamingEnabledResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_IsImageStreamingEnabledResponse); ok {
			return x.IsImageStreamingEnabledResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetCheckCloudRequest() *CheckCloudRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_CheckCloudRequest); ok {
			return x.CheckCloudRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetCheckCloudResponse() *CheckCloudResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_CheckCloudResponse); ok {
			return x.CheckCloudResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetAudioSendModeRequest() *AudioSendModeRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_AudioSendModeRequest); ok {
			return x.AudioSendModeRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetAudioSendModeChanged() *AudioSendModeChanged {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_AudioSendModeChanged); ok {
			return x.AudioSendModeChanged
		}
	}
	return nil
}

func (x *GatewayWrapper) GetAudioChunk() *AudioChunk {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_AudioChunk); ok {
			return x.AudioChunk
		}
	}
	return nil
}

func (x *GatewayWrapper) GetFeatureFlagRequest() *FeatureFlagRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_FeatureFlagRequest); ok {
			return x.FeatureFlagRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetFeatureFlagResponse() *FeatureFlagResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_FeatureFlagResponse); ok {
			return x.FeatureFlagResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetFeatureFlagListRequest() *FeatureFlagListRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_FeatureFlagListRequest); ok {
			return x.FeatureFlagListRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetFeatureFlagListResponse() *FeatureFlagListResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_FeatureFlagListResponse); ok {
			return x.FeatureFlagListResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetAppDisconnected() *AppDisconnected {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_AppDisconnected); ok {
			return x.AppDisconnected
		}
	}
	return nil
}

func (x *GatewayWrapper) GetAlexaAuthStateRequest() *AlexaAuthStateRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_AlexaAuthStateRequest); ok {
			return x.AlexaAuthStateRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetAlexaAuthStateResponse() *AlexaAuthStateResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_AlexaAuthStateResponse); ok {
			return x.AlexaAuthStateResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetAlexaOptInRequest() *AlexaOptInRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_AlexaOptInRequest); ok {
			return x.AlexaOptInRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetAlexaOptInResponse() *AlexaOptInResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_AlexaOptInResponse); ok {
			return x.AlexaOptInResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetEyeColorRequest() *SetEyeColorRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetEyeColorRequest); ok {
			return x.SetEyeColorRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetEyeColorResponse() *SetEyeColorResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetEyeColorResponse); ok {
			return x.SetEyeColorResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetMasterVolumeRequest() *MasterVolumeRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_MasterVolumeRequest); ok {
			return x.MasterVolumeRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetMasterVolumeResponse() *MasterVolumeResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_MasterVolumeResponse); ok {
			return x.MasterVolumeResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetCameraSettingsRequest() *SetCameraSettingsRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetCameraSettingsRequest); ok {
			return x.SetCameraSettingsRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetSetCameraSettingsResponse() *SetCameraSettingsResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_SetCameraSettingsResponse); ok {
			return x.SetCameraSettingsResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetCameraConfigRequest() *CameraConfigRequest {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_CameraConfigRequest); ok {
			return x.CameraConfigRequest
		}
	}
	return nil
}

func (x *GatewayWrapper) GetCameraConfigResponse() *CameraConfigResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_CameraConfigResponse); ok {
			return x.CameraConfigResponse
		}
	}
	return nil
}

func (x *GatewayWrapper) GetExternalAudioStreamPrepare() *ExternalAudioStreamPrepare {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ExternalAudioStreamPrepare); ok {
			return x.ExternalAudioStreamPrepare
		}
	}
	return nil
}

func (x *GatewayWrapper) GetExternalAudioStreamChunk() *ExternalAudioStreamChunk {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ExternalAudioStreamChunk); ok {
			return x.ExternalAudioStreamChunk
		}
	}
	return nil
}

func (x *GatewayWrapper) GetExternalAudioStreamCancel() *ExternalAudioStreamCancel {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ExternalAudioStreamCancel); ok {
			return x.ExternalAudioStreamCancel
		}
	}
	return nil
}

func (x *GatewayWrapper) GetExternalAudioStreamComplete() *ExternalAudioStreamComplete {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ExternalAudioStreamComplete); ok {
			return x.ExternalAudioStreamComplete
		}
	}
	return nil
}

func (x *GatewayWrapper) GetExternalAudioStreamResponse() *ExternalAudioStreamResponse {
	if x != nil {
		if x, ok := x.OneofMessageType.(*GatewayWrapper_ExternalAudioStreamResponse); ok {
			return x.ExternalAudioStreamResponse
		}
	}
	return nil
}

type isGatewayWrapper_OneofMessageType interface {
	isGatewayWrapper_OneofMessageType()
}

type GatewayWrapper_Event struct {
	// ------------ messages sent from robot to app ----------------------
	Event *Event `protobuf:"bytes,2,opt,name=event,proto3,oneof"`
}

type GatewayWrapper_OnboardingStateRequest struct {
	// ------------ onboarding requests and responses --------------------
	// 1p0 backward compatibility enum values vvv
	OnboardingStateRequest *OnboardingStateRequest `protobuf:"bytes,3,opt,name=onboarding_state_request,json=onboardingStateRequest,proto3,oneof"`
}

type GatewayWrapper_OnboardingState struct {
	OnboardingState *OnboardingState `protobuf:"bytes,4,opt,name=onboarding_state,json=onboardingState,proto3,oneof"`
}

type GatewayWrapper_OnboardingSkipOnboarding struct {
	OnboardingSkipOnboarding *OnboardingSkipOnboarding `protobuf:"bytes,5,opt,name=onboarding_skip_onboarding,json=onboardingSkipOnboarding,proto3,oneof"`
}

type GatewayWrapper_OnboardingRestart struct {
	OnboardingRestart *OnboardingRestart `protobuf:"bytes,6,opt,name=onboarding_restart,json=onboardingRestart,proto3,oneof"`
}

type GatewayWrapper_OnboardingCompleteRequest struct {
	OnboardingCompleteRequest *OnboardingCompleteRequest `protobuf:"bytes,11,opt,name=onboarding_complete_request,json=onboardingCompleteRequest,proto3,oneof"`
}

type GatewayWrapper_OnboardingCompleteResponse struct {
	OnboardingCompleteResponse *OnboardingCompleteResponse `protobuf:"bytes,12,opt,name=onboarding_complete_response,json=onboardingCompleteResponse,proto3,oneof"`
}

type GatewayWrapper_OnboardingWakeUpRequest struct {
	OnboardingWakeUpRequest *OnboardingWakeUpRequest `protobuf:"bytes,13,opt,name=onboarding_wake_up_request,json=onboardingWakeUpRequest,proto3,oneof"`
}

type GatewayWrapper_OnboardingWakeUpResponse struct {
	OnboardingWakeUpResponse *OnboardingWakeUpResponse `protobuf:"bytes,14,opt,name=onboarding_wake_up_response,json=onboardingWakeUpResponse,proto3,oneof"`
}

type GatewayWrapper_OnboardingWakeUpStartedRequest struct {
	OnboardingWakeUpStartedRequest *OnboardingWakeUpStartedRequest `protobuf:"bytes,15,opt,name=onboarding_wake_up_started_request,json=onboardingWakeUpStartedRequest,proto3,oneof"`
}

type GatewayWrapper_OnboardingWakeUpStartedResponse struct {
	OnboardingWakeUpStartedResponse *OnboardingWakeUpStartedResponse `protobuf:"bytes,16,opt,name=onboarding_wake_up_started_response,json=onboardingWakeUpStartedResponse,proto3,oneof"`
}

type GatewayWrapper_OnboardingSetPhaseRequest struct {
	// 1p0 backward compatibility enum values ^^^
	OnboardingSetPhaseRequest *OnboardingSetPhaseRequest `protobuf:"bytes,17,opt,name=onboarding_set_phase_request,json=onboardingSetPhaseRequest,proto3,oneof"`
}

type GatewayWrapper_OnboardingSetPhaseResponse struct {
	OnboardingSetPhaseResponse *OnboardingSetPhaseResponse `protobuf:"bytes,18,opt,name=onboarding_set_phase_response,json=onboardingSetPhaseResponse,proto3,oneof"`
}

type GatewayWrapper_OnboardingPhaseProgressRequest struct {
	OnboardingPhaseProgressRequest *OnboardingPhaseProgressRequest `protobuf:"bytes,19,opt,name=onboarding_phase_progress_request,json=onboardingPhaseProgressRequest,proto3,oneof"`
}

type GatewayWrapper_OnboardingPhaseProgressResponse struct {
	OnboardingPhaseProgressResponse *OnboardingPhaseProgressResponse `protobuf:"bytes,20,opt,name=onboarding_phase_progress_response,json=onboardingPhaseProgressResponse,proto3,oneof"`
}

type GatewayWrapper_OnboardingChargeInfoRequest struct {
	OnboardingChargeInfoRequest *OnboardingChargeInfoRequest `protobuf:"bytes,21,opt,name=onboarding_charge_info_request,json=onboardingChargeInfoRequest,proto3,oneof"`
}

type GatewayWrapper_OnboardingChargeInfoResponse struct {
	OnboardingChargeInfoResponse *OnboardingChargeInfoResponse `protobuf:"bytes,22,opt,name=onboarding_charge_info_response,json=onboardingChargeInfoResponse,proto3,oneof"`
}

type GatewayWrapper_OnboardingMarkCompleteAndExit struct {
	OnboardingMarkCompleteAndExit *OnboardingMarkCompleteAndExit `protobuf:"bytes,23,opt,name=onboarding_mark_complete_and_exit,json=onboardingMarkCompleteAndExit,proto3,oneof"`
}

type GatewayWrapper_LatestAttentionTransferRequest struct {
	// ------------ Attention transfer -----------------------------------
	LatestAttentionTransferRequest *LatestAttentionTransferRequest `protobuf:"bytes,100,opt,name=latest_attention_transfer_request,json=latestAttentionTransferRequest,proto3,oneof"`
}

type GatewayWrapper_LatestAttentionTransfer struct {
	LatestAttentionTransfer *LatestAttentionTransfer `protobuf:"bytes,101,opt,name=latest_attention_transfer,json=latestAttentionTransfer,proto3,oneof"`
}

type GatewayWrapper_PhotosInfoRequest struct {
	// ------------ photos request/response pairs ------------------------
	PhotosInfoRequest *PhotosInfoRequest `protobuf:"bytes,200,opt,name=photos_info_request,json=photosInfoRequest,proto3,oneof"`
}

type GatewayWrapper_PhotosInfoResponse struct {
	PhotosInfoResponse *PhotosInfoResponse `protobuf:"bytes,201,opt,name=photos_info_response,json=photosInfoResponse,proto3,oneof"`
}

type GatewayWrapper_PhotoRequest struct {
	PhotoRequest *PhotoRequest `protobuf:"bytes,202,opt,name=photo_request,json=photoRequest,proto3,oneof"`
}

type GatewayWrapper_PhotoPathMessage struct {
	PhotoPathMessage *PhotoPathMessage `protobuf:"bytes,203,opt,name=photo_path_message,json=photoPathMessage,proto3,oneof"`
}

type GatewayWrapper_ThumbnailRequest struct {
	ThumbnailRequest *ThumbnailRequest `protobuf:"bytes,204,opt,name=thumbnail_request,json=thumbnailRequest,proto3,oneof"`
}

type GatewayWrapper_ThumbnailPathMessage struct {
	ThumbnailPathMessage *ThumbnailPathMessage `protobuf:"bytes,205,opt,name=thumbnail_path_message,json=thumbnailPathMessage,proto3,oneof"`
}

type GatewayWrapper_DeletePhotoRequest struct {
	DeletePhotoRequest *DeletePhotoRequest `protobuf:"bytes,206,opt,name=delete_photo_request,json=deletePhotoRequest,proto3,oneof"`
}

type GatewayWrapper_DeletePhotoResponse struct {
	DeletePhotoResponse *DeletePhotoResponse `protobuf:"bytes,207,opt,name=delete_photo_response,json=deletePhotoResponse,proto3,oneof"`
}

type GatewayWrapper_PullJdocsRequest struct {
	// ------------ settings pairs ---------------------------------------
	PullJdocsRequest *PullJdocsRequest `protobuf:"bytes,300,opt,name=pull_jdocs_request,json=pullJdocsRequest,proto3,oneof"`
}

type GatewayWrapper_PullJdocsResponse struct {
	PullJdocsResponse *PullJdocsResponse `protobuf:"bytes,301,opt,name=pull_jdocs_response,json=pullJdocsResponse,proto3,oneof"`
}

type GatewayWrapper_UpdateSettingsRequest struct {
	UpdateSettingsRequest *UpdateSettingsRequest `protobuf:"bytes,302,opt,name=update_settings_request,json=updateSettingsRequest,proto3,oneof"`
}

type GatewayWrapper_UpdateSettingsResponse struct {
	UpdateSettingsResponse *UpdateSettingsResponse `protobuf:"bytes,303,opt,name=update_settings_response,json=updateSettingsResponse,proto3,oneof"`
}

type GatewayWrapper_UpdateAccountSettingsRequest struct {
	UpdateAccountSettingsRequest *UpdateAccountSettingsRequest `protobuf:"bytes,304,opt,name=update_account_settings_request,json=updateAccountSettingsRequest,proto3,oneof"`
}

type GatewayWrapper_UpdateAccountSettingsResponse struct {
	UpdateAccountSettingsResponse *UpdateAccountSettingsResponse `protobuf:"bytes,305,opt,name=update_account_settings_response,json=updateAccountSettingsResponse,proto3,oneof"`
}

type GatewayWrapper_UpdateUserEntitlementsRequest struct {
	UpdateUserEntitlementsRequest *UpdateUserEntitlementsRequest `protobuf:"bytes,306,opt,name=update_user_entitlements_request,json=updateUserEntitlementsRequest,proto3,oneof"`
}

type GatewayWrapper_UpdateUserEntitlementsResponse struct {
	UpdateUserEntitlementsResponse *UpdateUserEntitlementsResponse `protobuf:"bytes,307,opt,name=update_user_entitlements_response,json=updateUserEntitlementsResponse,proto3,oneof"`
}

type GatewayWrapper_DriveOffChargerRequest struct {
	// ------------ sdk behavior request/response pairs --------------------
	DriveOffChargerRequest *DriveOffChargerRequest `protobuf:"bytes,400,opt,name=drive_off_charger_request,json=driveOffChargerRequest,proto3,oneof"`
}

type GatewayWrapper_DriveOffChargerResponse struct {
	DriveOffChargerResponse *DriveOffChargerResponse `protobuf:"bytes,401,opt,name=drive_off_charger_response,json=driveOffChargerResponse,proto3,oneof"`
}

type GatewayWrapper_DriveOnChargerRequest struct {
	DriveOnChargerRequest *DriveOnChargerRequest `protobuf:"bytes,402,opt,name=drive_on_charger_request,json=driveOnChargerRequest,proto3,oneof"`
}

type GatewayWrapper_DriveOnChargerResponse struct {
	DriveOnChargerResponse *DriveOnChargerResponse `protobuf:"bytes,403,opt,name=drive_on_charger_response,json=driveOnChargerResponse,proto3,oneof"`
}

type GatewayWrapper_FindFacesRequest struct {
	FindFacesRequest *FindFacesRequest `protobuf:"bytes,404,opt,name=find_faces_request,json=findFacesRequest,proto3,oneof"`
}

type GatewayWrapper_FindFacesResponse struct {
	FindFacesResponse *FindFacesResponse `protobuf:"bytes,405,opt,name=find_faces_response,json=findFacesResponse,proto3,oneof"`
}

type GatewayWrapper_LookAroundInPlaceRequest struct {
	LookAroundInPlaceRequest *LookAroundInPlaceRequest `protobuf:"bytes,406,opt,name=look_around_in_place_request,json=lookAroundInPlaceRequest,proto3,oneof"`
}

type GatewayWrapper_LookAroundInPlaceResponse struct {
	LookAroundInPlaceResponse *LookAroundInPlaceResponse `protobuf:"bytes,407,opt,name=look_around_in_place_response,json=lookAroundInPlaceResponse,proto3,oneof"`
}

type GatewayWrapper_RollBlockRequest struct {
	RollBlockRequest *RollBlockRequest `protobuf:"bytes,408,opt,name=roll_block_request,json=rollBlockRequest,proto3,oneof"`
}

type GatewayWrapper_RollBlockResponse struct {
	RollBlockResponse *RollBlockResponse `protobuf:"bytes,409,opt,name=roll_block_response,json=rollBlockResponse,proto3,oneof"`
}

type GatewayWrapper_EnrollFaceRequest struct {
	EnrollFaceRequest *EnrollFaceRequest `protobuf:"bytes,410,opt,name=enroll_face_request,json=enrollFaceRequest,proto3,oneof"`
}

type GatewayWrapper_EnrollFaceResponse struct {
	EnrollFaceResponse *EnrollFaceResponse `protobuf:"bytes,411,opt,name=enroll_face_response,json=enrollFaceResponse,proto3,oneof"`
}

type GatewayWrapper_SetFaceToEnrollRequest struct {
	SetFaceToEnrollRequest *SetFaceToEnrollRequest `protobuf:"bytes,412,opt,name=set_face_to_enroll_request,json=setFaceToEnrollRequest,proto3,oneof"`
}

type GatewayWrapper_SetFaceToEnrollResponse struct {
	SetFaceToEnrollResponse *SetFaceToEnrollResponse `protobuf:"bytes,413,opt,name=set_face_to_enroll_response,json=setFaceToEnrollResponse,proto3,oneof"`
}

type GatewayWrapper_CancelBehaviorRequest struct {
	CancelBehaviorRequest *CancelBehaviorRequest `protobuf:"bytes,414,opt,name=cancel_behavior_request,json=cancelBehaviorRequest,proto3,oneof"`
}

type GatewayWrapper_CancelBehaviorResponse struct {
	CancelBehaviorResponse *CancelBehaviorResponse `protobuf:"bytes,415,opt,name=cancel_behavior_response,json=cancelBehaviorResponse,proto3,oneof"`
}

type GatewayWrapper_TurnInPlaceRequest struct {
	// ------------ movement request/response pairs ----------------------
	TurnInPlaceRequest *TurnInPlaceRequest `protobuf:"bytes,500,opt,name=turn_in_place_request,json=turnInPlaceRequest,proto3,oneof"`
}

type GatewayWrapper_TurnInPlaceResponse struct {
	TurnInPlaceResponse *TurnInPlaceResponse `protobuf:"bytes,501,opt,name=turn_in_place_response,json=turnInPlaceResponse,proto3,oneof"`
}

type GatewayWrapper_DriveStraightRequest struct {
	DriveStraightRequest *DriveStraightRequest `protobuf:"bytes,502,opt,name=drive_straight_request,json=driveStraightRequest,proto3,oneof"`
}

type GatewayWrapper_DriveStraightResponse struct {
	DriveStraightResponse *DriveStraightResponse `protobuf:"bytes,503,opt,name=drive_straight_response,json=driveStraightResponse,proto3,oneof"`
}

type GatewayWrapper_SetHeadAngleRequest struct {
	SetHeadAngleRequest *SetHeadAngleRequest `protobuf:"bytes,504,opt,name=set_head_angle_request,json=setHeadAngleRequest,proto3,oneof"`
}

type GatewayWrapper_SetHeadAngleResponse struct {
	SetHeadAngleResponse *SetHeadAngleResponse `protobuf:"bytes,505,opt,name=set_head_angle_response,json=setHeadAngleResponse,proto3,oneof"`
}

type GatewayWrapper_SetLiftHeightRequest struct {
	SetLiftHeightRequest *SetLiftHeightRequest `protobuf:"bytes,506,opt,name=set_lift_height_request,json=setLiftHeightRequest,proto3,oneof"`
}

type GatewayWrapper_SetLiftHeightResponse struct {
	SetLiftHeightResponse *SetLiftHeightResponse `protobuf:"bytes,507,opt,name=set_lift_height_response,json=setLiftHeightResponse,proto3,oneof"`
}

type GatewayWrapper_PlayAnimationRequest struct {
	PlayAnimationRequest *PlayAnimationRequest `protobuf:"bytes,508,opt,name=play_animation_request,json=playAnimationRequest,proto3,oneof"`
}

type GatewayWrapper_PlayAnimationResponse struct {
	PlayAnimationResponse *PlayAnimationResponse `protobuf:"bytes,509,opt,name=play_animation_response,json=playAnimationResponse,proto3,oneof"`
}

type GatewayWrapper_GoToPoseRequest struct {
	GoToPoseRequest *GoToPoseRequest `protobuf:"bytes,510,opt,name=go_to_pose_request,json=goToPoseRequest,proto3,oneof"`
}

type GatewayWrapper_GoToPoseResponse struct {
	GoToPoseResponse *GoToPoseResponse `protobuf:"bytes,511,opt,name=go_to_pose_response,json=goToPoseResponse,proto3,oneof"`
}

type GatewayWrapper_DockWithCubeRequest struct {
	DockWithCubeRequest *DockWithCubeRequest `protobuf:"bytes,512,opt,name=dock_with_cube_request,json=dockWithCubeRequest,proto3,oneof"`
}

type GatewayWrapper_DockWithCubeResponse struct {
	DockWithCubeResponse *DockWithCubeResponse `protobuf:"bytes,513,opt,name=dock_with_cube_response,json=dockWithCubeResponse,proto3,oneof"`
}

type GatewayWrapper_DriveWheelsRequest struct {
	DriveWheelsRequest *DriveWheelsRequest `protobuf:"bytes,514,opt,name=drive_wheels_request,json=driveWheelsRequest,proto3,oneof"`
}

type GatewayWrapper_DriveWheelsResponse struct {
	DriveWheelsResponse *DriveWheelsResponse `protobuf:"bytes,515,opt,name=drive_wheels_response,json=driveWheelsResponse,proto3,oneof"`
}

type GatewayWrapper_ListAnimationsRequest struct {
	ListAnimationsRequest *ListAnimationsRequest `protobuf:"bytes,516,opt,name=list_animations_request,json=listAnimationsRequest,proto3,oneof"`
}

type GatewayWrapper_ListAnimationsResponse struct {
	ListAnimationsResponse *ListAnimationsResponse `protobuf:"bytes,517,opt,name=list_animations_response,json=listAnimationsResponse,proto3,oneof"`
}

type GatewayWrapper_PlayAnimationTriggerRequest struct {
	PlayAnimationTriggerRequest *PlayAnimationTriggerRequest `protobuf:"bytes,518,opt,name=play_animation_trigger_request,json=playAnimationTriggerRequest,proto3,oneof"`
}

type GatewayWrapper_ListAnimationTriggersRequest struct {
	ListAnimationTriggersRequest *ListAnimationTriggersRequest `protobuf:"bytes,519,opt,name=list_animation_triggers_request,json=listAnimationTriggersRequest,proto3,oneof"`
}

type GatewayWrapper_ListAnimationTriggersResponse struct {
	ListAnimationTriggersResponse *ListAnimationTriggersResponse `protobuf:"bytes,520,opt,name=list_animation_triggers_response,json=listAnimationTriggersResponse,proto3,oneof"`
}

type GatewayWrapper_CancelActionByIdTagRequest struct {
	CancelActionByIdTagRequest *CancelActionByIdTagRequest `protobuf:"bytes,521,opt,name=cancel_action_by_id_tag_request,json=cancelActionByIdTagRequest,proto3,oneof"`
}

type GatewayWrapper_CancelActionByIdTagResponse struct {
	CancelActionByIdTagResponse *CancelActionByIdTagResponse `protobuf:"bytes,522,opt,name=cancel_action_by_id_tag_response,json=cancelActionByIdTagResponse,proto3,oneof"`
}

type GatewayWrapper_TurnTowardsFaceRequest struct {
	TurnTowardsFaceRequest *TurnTowardsFaceRequest `protobuf:"bytes,523,opt,name=turn_towards_face_request,json=turnTowardsFaceRequest,proto3,oneof"`
}

type GatewayWrapper_TurnTowardsFaceResponse struct {
	TurnTowardsFaceResponse *TurnTowardsFaceResponse `protobuf:"bytes,524,opt,name=turn_towards_face_response,json=turnTowardsFaceResponse,proto3,oneof"`
}

type GatewayWrapper_GoToObjectRequest struct {
	GoToObjectRequest *GoToObjectRequest `protobuf:"bytes,525,opt,name=go_to_object_request,json=goToObjectRequest,proto3,oneof"`
}

type GatewayWrapper_GoToObjectResponse struct {
	GoToObjectResponse *GoToObjectResponse `protobuf:"bytes,526,opt,name=go_to_object_response,json=goToObjectResponse,proto3,oneof"`
}

type GatewayWrapper_RollObjectRequest struct {
	RollObjectRequest *RollObjectRequest `protobuf:"bytes,527,opt,name=roll_object_request,json=rollObjectRequest,proto3,oneof"`
}

type GatewayWrapper_RollObjectResponse struct {
	RollObjectResponse *RollObjectResponse `protobuf:"bytes,528,opt,name=roll_object_response,json=rollObjectResponse,proto3,oneof"`
}

type GatewayWrapper_PopAWheelieRequest struct {
	PopAWheelieRequest *PopAWheelieRequest `protobuf:"bytes,529,opt,name=pop_a_wheelie_request,json=popAWheelieRequest,proto3,oneof"`
}

type GatewayWrapper_PopAWheelieResponse struct {
	PopAWheelieResponse *PopAWheelieResponse `protobuf:"bytes,530,opt,name=pop_a_wheelie_response,json=popAWheelieResponse,proto3,oneof"`
}

type GatewayWrapper_PickupObjectRequest struct {
	PickupObjectRequest *PickupObjectRequest `protobuf:"bytes,531,opt,name=pickup_object_request,json=pickupObjectRequest,proto3,oneof"`
}

type GatewayWrapper_PickupObjectResponse struct {
	PickupObjectResponse *PickupObjectResponse `protobuf:"bytes,532,opt,name=pickup_object_response,json=pickupObjectResponse,proto3,oneof"`
}

type GatewayWrapper_PlaceObjectOnGroundHereRequest struct {
	PlaceObjectOnGroundHereRequest *PlaceObjectOnGroundHereRequest `protobuf:"bytes,533,opt,name=place_object_on_ground_here_request,json=placeObjectOnGroundHereRequest,proto3,oneof"`
}

type GatewayWrapper_PlaceObjectOnGroundHereResponse struct {
	PlaceObjectOnGroundHereResponse *PlaceObjectOnGroundHereResponse `protobuf:"bytes,534,opt,name=place_object_on_ground_here_response,json=placeObjectOnGroundHereResponse,proto3,oneof"`
}

type GatewayWrapper_StopAllMotorsRequest struct {
	StopAllMotorsRequest *StopAllMotorsRequest `protobuf:"bytes,535,opt,name=stop_all_motors_request,json=stopAllMotorsRequest,proto3,oneof"`
}

type GatewayWrapper_StopAllMotorsResponse struct {
	StopAllMotorsResponse *StopAllMotorsResponse `protobuf:"bytes,536,opt,name=stop_all_motors_response,json=stopAllMotorsResponse,proto3,oneof"`
}

type GatewayWrapper_RobotHistoryRequest struct {
	// ------------ status history --------------------
	RobotHistoryRequest *RobotHistoryRequest `protobuf:"bytes,600,opt,name=robot_history_request,json=robotHistoryRequest,proto3,oneof"`
}

type GatewayWrapper_RobotHistoryResponse struct {
	RobotHistoryResponse *RobotHistoryResponse `protobuf:"bytes,601,opt,name=robot_history_response,json=robotHistoryResponse,proto3,oneof"`
}

type GatewayWrapper_ConnectCubeRequest struct {
	// ------------ cube connections --------------------
	ConnectCubeRequest *ConnectCubeRequest `protobuf:"bytes,700,opt,name=connect_cube_request,json=connectCubeRequest,proto3,oneof"`
}

type GatewayWrapper_ConnectCubeResponse struct {
	ConnectCubeResponse *ConnectCubeResponse `protobuf:"bytes,701,opt,name=connect_cube_response,json=connectCubeResponse,proto3,oneof"`
}

type GatewayWrapper_DisconnectCubeRequest struct {
	DisconnectCubeRequest *DisconnectCubeRequest `protobuf:"bytes,702,opt,name=disconnect_cube_request,json=disconnectCubeRequest,proto3,oneof"`
}

type GatewayWrapper_FlashCubeLightsRequest struct {
	FlashCubeLightsRequest *FlashCubeLightsRequest `protobuf:"bytes,703,opt,name=flash_cube_lights_request,json=flashCubeLightsRequest,proto3,oneof"`
}

type GatewayWrapper_ForgetPreferredCubeRequest struct {
	ForgetPreferredCubeRequest *ForgetPreferredCubeRequest `protobuf:"bytes,704,opt,name=forget_preferred_cube_request,json=forgetPreferredCubeRequest,proto3,oneof"`
}

type GatewayWrapper_SetPreferredCubeRequest struct {
	SetPreferredCubeRequest *SetPreferredCubeRequest `protobuf:"bytes,705,opt,name=set_preferred_cube_request,json=setPreferredCubeRequest,proto3,oneof"`
}

type GatewayWrapper_SetCubeLightsRequest struct {
	SetCubeLightsRequest *SetCubeLightsRequest `protobuf:"bytes,706,opt,name=set_cube_lights_request,json=setCubeLightsRequest,proto3,oneof"`
}

type GatewayWrapper_CubesAvailableRequest struct {
	CubesAvailableRequest *CubesAvailableRequest `protobuf:"bytes,707,opt,name=cubes_available_request,json=cubesAvailableRequest,proto3,oneof"`
}

type GatewayWrapper_CubesAvailableResponse struct {
	CubesAvailableResponse *CubesAvailableResponse `protobuf:"bytes,708,opt,name=cubes_available_response,json=cubesAvailableResponse,proto3,oneof"`
}

type GatewayWrapper_BatteryStateRequest struct {
	// ------------ robot stats --------------------
	BatteryStateRequest *BatteryStateRequest `protobuf:"bytes,800,opt,name=battery_state_request,json=batteryStateRequest,proto3,oneof"`
}

type GatewayWrapper_BatteryStateResponse struct {
	BatteryStateResponse *BatteryStateResponse `protobuf:"bytes,801,opt,name=battery_state_response,json=batteryStateResponse,proto3,oneof"`
}

type GatewayWrapper_VersionStateRequest struct {
	VersionStateRequest *VersionStateRequest `protobuf:"bytes,802,opt,name=version_state_request,json=versionStateRequest,proto3,oneof"`
}

type GatewayWrapper_VersionStateResponse struct {
	VersionStateResponse *VersionStateResponse `protobuf:"bytes,803,opt,name=version_state_response,json=versionStateResponse,proto3,oneof"`
}

type GatewayWrapper_SayTextRequest struct {
	// ------------ text-to-speech pairs ------------
	SayTextRequest *SayTextRequest `protobuf:"bytes,900,opt,name=say_text_request,json=sayTextRequest,proto3,oneof"`
}

type GatewayWrapper_SayTextResponse struct {
	SayTextResponse *SayTextResponse `protobuf:"bytes,901,opt,name=say_text_response,json=sayTextResponse,proto3,oneof"`
}

type GatewayWrapper_ControlRequest struct {
	// ------------ behavior control pairs ----------
	ControlRequest *ControlRequest `protobuf:"bytes,1000,opt,name=control_request,json=controlRequest,proto3,oneof"`
}

type GatewayWrapper_ControlRelease struct {
	ControlRelease *ControlRelease `protobuf:"bytes,1001,opt,name=control_release,json=controlRelease,proto3,oneof"`
}

type GatewayWrapper_BehaviorControlResponse struct {
	BehaviorControlResponse *BehaviorControlResponse `protobuf:"bytes,1002,opt,name=behavior_control_response,json=behaviorControlResponse,proto3,oneof"`
}

type GatewayWrapper_ImageChunk struct {
	// ------------ Image chunks sent from the vision component ------------
	ImageChunk *ImageChunk `protobuf:"bytes,1101,opt,name=image_chunk,json=imageChunk,proto3,oneof"`
}

type GatewayWrapper_EnableMarkerDetectionRequest struct {
	EnableMarkerDetectionRequest *EnableMarkerDetectionRequest `protobuf:"bytes,1102,opt,name=enable_marker_detection_request,json=enableMarkerDetectionRequest,proto3,oneof"`
}

type GatewayWrapper_EnableMarkerDetectionResponse struct {
	EnableMarkerDetectionResponse *EnableMarkerDetectionResponse `protobuf:"bytes,1103,opt,name=enable_marker_detection_response,json=enableMarkerDetectionResponse,proto3,oneof"`
}

type GatewayWrapper_EnableFaceDetectionRequest struct {
	EnableFaceDetectionRequest *EnableFaceDetectionRequest `protobuf:"bytes,1104,opt,name=enable_face_detection_request,json=enableFaceDetectionRequest,proto3,oneof"`
}

type GatewayWrapper_EnableFaceDetectionResponse struct {
	EnableFaceDetectionResponse *EnableFaceDetectionResponse `protobuf:"bytes,1105,opt,name=enable_face_detection_response,json=enableFaceDetectionResponse,proto3,oneof"`
}

type GatewayWrapper_EnableMotionDetectionRequest struct {
	EnableMotionDetectionRequest *EnableMotionDetectionRequest `protobuf:"bytes,1106,opt,name=enable_motion_detection_request,json=enableMotionDetectionRequest,proto3,oneof"`
}

type GatewayWrapper_EnableMotionDetectionResponse struct {
	EnableMotionDetectionResponse *EnableMotionDetectionResponse `protobuf:"bytes,1107,opt,name=enable_motion_detection_response,json=enableMotionDetectionResponse,proto3,oneof"`
}

type GatewayWrapper_EnableMirrorModeRequest struct {
	EnableMirrorModeRequest *EnableMirrorModeRequest `protobuf:"bytes,1108,opt,name=enable_mirror_mode_request,json=enableMirrorModeRequest,proto3,oneof"`
}

type GatewayWrapper_EnableMirrorModeResponse struct {
	EnableMirrorModeResponse *EnableMirrorModeResponse `protobuf:"bytes,1109,opt,name=enable_mirror_mode_response,json=enableMirrorModeResponse,proto3,oneof"`
}

type GatewayWrapper_EnableImageStreamingRequest struct {
	EnableImageStreamingRequest *EnableImageStreamingRequest `protobuf:"bytes,1110,opt,name=enable_image_streaming_request,json=enableImageStreamingRequest,proto3,oneof"`
}

type GatewayWrapper_EnableImageStreamingResponse struct {
	EnableImageStreamingResponse *EnableImageStreamingResponse `protobuf:"bytes,1111,opt,name=enable_image_streaming_response,json=enableImageStreamingResponse,proto3,oneof"`
}

type GatewayWrapper_IsImageStreamingEnabledRequest struct {
	IsImageStreamingEnabledRequest *IsImageStreamingEnabledRequest `protobuf:"bytes,1112,opt,name=is_image_streaming_enabled_request,json=isImageStreamingEnabledRequest,proto3,oneof"`
}

type GatewayWrapper_IsImageStreamingEnabledResponse struct {
	IsImageStreamingEnabledResponse *IsImageStreamingEnabledResponse `protobuf:"bytes,1113,opt,name=is_image_streaming_enabled_response,json=isImageStreamingEnabledResponse,proto3,oneof"`
}

type GatewayWrapper_CheckCloudRequest struct {
	// ------------ Message and response for cloud connectivity check ------------
	CheckCloudRequest *CheckCloudRequest `protobuf:"bytes,1200,opt,name=check_cloud_request,json=checkCloudRequest,proto3,oneof"`
}

type GatewayWrapper_CheckCloudResponse struct {
	CheckCloudResponse *CheckCloudResponse `protobuf:"bytes,1201,opt,name=check_cloud_response,json=checkCloudResponse,proto3,oneof"`
}

type GatewayWrapper_AudioSendModeRequest struct {
	// ------------ Audio chunks sent from the animProcess ------------
	AudioSendModeRequest *AudioSendModeRequest `protobuf:"bytes,1300,opt,name=audio_send_mode_request,json=audioSendModeRequest,proto3,oneof"`
}

type GatewayWrapper_AudioSendModeChanged struct {
	AudioSendModeChanged *AudioSendModeChanged `protobuf:"bytes,1301,opt,name=audio_send_mode_changed,json=audioSendModeChanged,proto3,oneof"`
}

type GatewayWrapper_AudioChunk struct {
	AudioChunk *AudioChunk `protobuf:"bytes,1302,opt,name=audio_chunk,json=audioChunk,proto3,oneof"`
}

type GatewayWrapper_FeatureFlagRequest struct {
	// ------------ Feature flags ------------
	FeatureFlagRequest *FeatureFlagRequest `protobuf:"bytes,1400,opt,name=feature_flag_request,json=featureFlagRequest,proto3,oneof"`
}

type GatewayWrapper_FeatureFlagResponse struct {
	FeatureFlagResponse *FeatureFlagResponse `protobuf:"bytes,1401,opt,name=feature_flag_response,json=featureFlagResponse,proto3,oneof"`
}

type GatewayWrapper_FeatureFlagListRequest struct {
	FeatureFlagListRequest *FeatureFlagListRequest `protobuf:"bytes,1402,opt,name=feature_flag_list_request,json=featureFlagListRequest,proto3,oneof"`
}

type GatewayWrapper_FeatureFlagListResponse struct {
	FeatureFlagListResponse *FeatureFlagListResponse `protobuf:"bytes,1403,opt,name=feature_flag_list_response,json=featureFlagListResponse,proto3,oneof"`
}

type GatewayWrapper_AppDisconnected struct {
	// ------------ App/engine connectivity ------------
	AppDisconnected *AppDisconnected `protobuf:"bytes,1500,opt,name=app_disconnected,json=appDisconnected,proto3,oneof"`
}

type GatewayWrapper_AlexaAuthStateRequest struct {
	// ------------ Alexa ------------
	AlexaAuthStateRequest *AlexaAuthStateRequest `protobuf:"bytes,1600,opt,name=alexa_auth_state_request,json=alexaAuthStateRequest,proto3,oneof"`
}

type GatewayWrapper_AlexaAuthStateResponse struct {
	AlexaAuthStateResponse *AlexaAuthStateResponse `protobuf:"bytes,1601,opt,name=alexa_auth_state_response,json=alexaAuthStateResponse,proto3,oneof"`
}

type GatewayWrapper_AlexaOptInRequest struct {
	AlexaOptInRequest *AlexaOptInRequest `protobuf:"bytes,1602,opt,name=alexa_opt_in_request,json=alexaOptInRequest,proto3,oneof"`
}

type GatewayWrapper_AlexaOptInResponse struct {
	AlexaOptInResponse *AlexaOptInResponse `protobuf:"bytes,1603,opt,name=alexa_opt_in_response,json=alexaOptInResponse,proto3,oneof"`
}

type GatewayWrapper_SetEyeColorRequest struct {
	// ------------ Individual Robot Settings (SDK only) ------------
	SetEyeColorRequest *SetEyeColorRequest `protobuf:"bytes,1700,opt,name=set_eye_color_request,json=setEyeColorRequest,proto3,oneof"`
}

type GatewayWrapper_SetEyeColorResponse struct {
	SetEyeColorResponse *SetEyeColorResponse `protobuf:"bytes,1701,opt,name=set_eye_color_response,json=setEyeColorResponse,proto3,oneof"`
}

type GatewayWrapper_MasterVolumeRequest struct {
	MasterVolumeRequest *MasterVolumeRequest `protobuf:"bytes,1702,opt,name=master_volume_request,json=masterVolumeRequest,proto3,oneof"`
}

type GatewayWrapper_MasterVolumeResponse struct {
	MasterVolumeResponse *MasterVolumeResponse `protobuf:"bytes,1703,opt,name=master_volume_response,json=masterVolumeResponse,proto3,oneof"`
}

type GatewayWrapper_SetCameraSettingsRequest struct {
	SetCameraSettingsRequest *SetCameraSettingsRequest `protobuf:"bytes,1704,opt,name=set_camera_settings_request,json=setCameraSettingsRequest,proto3,oneof"`
}

type GatewayWrapper_SetCameraSettingsResponse struct {
	SetCameraSettingsResponse *SetCameraSettingsResponse `protobuf:"bytes,1705,opt,name=set_camera_settings_response,json=setCameraSettingsResponse,proto3,oneof"`
}

type GatewayWrapper_CameraConfigRequest struct {
	CameraConfigRequest *CameraConfigRequest `protobuf:"bytes,1706,opt,name=camera_config_request,json=cameraConfigRequest,proto3,oneof"`
}

type GatewayWrapper_CameraConfigResponse struct {
	CameraConfigResponse *CameraConfigResponse `protobuf:"bytes,1707,opt,name=camera_config_response,json=cameraConfigResponse,proto3,oneof"`
}

type GatewayWrapper_ExternalAudioStreamPrepare struct {
	// ------------ Streaming audio playback (SDK only) ------------
	ExternalAudioStreamPrepare *ExternalAudioStreamPrepare `protobuf:"bytes,1800,opt,name=external_audio_stream_prepare,json=externalAudioStreamPrepare,proto3,oneof"`
}

type GatewayWrapper_ExternalAudioStreamChunk struct {
	ExternalAudioStreamChunk *ExternalAudioStreamChunk `protobuf:"bytes,1801,opt,name=external_audio_stream_chunk,json=externalAudioStreamChunk,proto3,oneof"`
}

type GatewayWrapper_ExternalAudioStreamCancel struct {
	ExternalAudioStreamCancel *ExternalAudioStreamCancel `protobuf:"bytes,1802,opt,name=external_audio_stream_cancel,json=externalAudioStreamCancel,proto3,oneof"`
}

type GatewayWrapper_ExternalAudioStreamComplete struct {
	ExternalAudioStreamComplete *ExternalAudioStreamComplete `protobuf:"bytes,1803,opt,name=external_audio_stream_complete,json=externalAudioStreamComplete,proto3,oneof"`
}

type GatewayWrapper_ExternalAudioStreamResponse struct {
	ExternalAudioStreamResponse *ExternalAudioStreamResponse `protobuf:"bytes,1804,opt,name=external_audio_stream_response,json=externalAudioStreamResponse,proto3,oneof"`
}

func (*GatewayWrapper_Event) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingStateRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingState) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingSkipOnboarding) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingRestart) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingCompleteRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingCompleteResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingWakeUpRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingWakeUpResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingWakeUpStartedRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingWakeUpStartedResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingSetPhaseRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingSetPhaseResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingPhaseProgressRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingPhaseProgressResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingChargeInfoRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingChargeInfoResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_OnboardingMarkCompleteAndExit) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_LatestAttentionTransferRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_LatestAttentionTransfer) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PhotosInfoRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PhotosInfoResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PhotoRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PhotoPathMessage) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ThumbnailRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ThumbnailPathMessage) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DeletePhotoRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DeletePhotoResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PullJdocsRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PullJdocsResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_UpdateSettingsRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_UpdateSettingsResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_UpdateAccountSettingsRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_UpdateAccountSettingsResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_UpdateUserEntitlementsRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_UpdateUserEntitlementsResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DriveOffChargerRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DriveOffChargerResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DriveOnChargerRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DriveOnChargerResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_FindFacesRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_FindFacesResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_LookAroundInPlaceRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_LookAroundInPlaceResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_RollBlockRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_RollBlockResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnrollFaceRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnrollFaceResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetFaceToEnrollRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetFaceToEnrollResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_CancelBehaviorRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_CancelBehaviorResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_TurnInPlaceRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_TurnInPlaceResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DriveStraightRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DriveStraightResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetHeadAngleRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetHeadAngleResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetLiftHeightRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetLiftHeightResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PlayAnimationRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PlayAnimationResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_GoToPoseRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_GoToPoseResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DockWithCubeRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DockWithCubeResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DriveWheelsRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DriveWheelsResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ListAnimationsRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ListAnimationsResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PlayAnimationTriggerRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ListAnimationTriggersRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ListAnimationTriggersResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_CancelActionByIdTagRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_CancelActionByIdTagResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_TurnTowardsFaceRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_TurnTowardsFaceResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_GoToObjectRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_GoToObjectResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_RollObjectRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_RollObjectResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PopAWheelieRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PopAWheelieResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PickupObjectRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PickupObjectResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PlaceObjectOnGroundHereRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_PlaceObjectOnGroundHereResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_StopAllMotorsRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_StopAllMotorsResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_RobotHistoryRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_RobotHistoryResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ConnectCubeRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ConnectCubeResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_DisconnectCubeRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_FlashCubeLightsRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ForgetPreferredCubeRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetPreferredCubeRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetCubeLightsRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_CubesAvailableRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_CubesAvailableResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_BatteryStateRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_BatteryStateResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_VersionStateRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_VersionStateResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SayTextRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SayTextResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ControlRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ControlRelease) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_BehaviorControlResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ImageChunk) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnableMarkerDetectionRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnableMarkerDetectionResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnableFaceDetectionRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnableFaceDetectionResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnableMotionDetectionRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnableMotionDetectionResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnableMirrorModeRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnableMirrorModeResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnableImageStreamingRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_EnableImageStreamingResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_IsImageStreamingEnabledRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_IsImageStreamingEnabledResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_CheckCloudRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_CheckCloudResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_AudioSendModeRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_AudioSendModeChanged) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_AudioChunk) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_FeatureFlagRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_FeatureFlagResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_FeatureFlagListRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_FeatureFlagListResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_AppDisconnected) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_AlexaAuthStateRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_AlexaAuthStateResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_AlexaOptInRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_AlexaOptInResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetEyeColorRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetEyeColorResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_MasterVolumeRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_MasterVolumeResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetCameraSettingsRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_SetCameraSettingsResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_CameraConfigRequest) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_CameraConfigResponse) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ExternalAudioStreamPrepare) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ExternalAudioStreamChunk) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ExternalAudioStreamCancel) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ExternalAudioStreamComplete) isGatewayWrapper_OneofMessageType() {}

func (*GatewayWrapper_ExternalAudioStreamResponse) isGatewayWrapper_OneofMessageType() {}

var File_shared_proto protoreflect.FileDescriptor

const file_shared_proto_rawDesc = "" +
	"\n" +
	"\fshared.proto\x12\x1eAnki.Vector.external_interface\x1a\x0ebehavior.proto\x1a\n" +
	"cube.proto\x1a\valexa.proto\x1a\x0emessages.proto\x1a\x0esettings.proto\x1a\x10extensions.proto\x1a\x15response_status.proto\"i\n" +
	"\x16ProtocolVersionRequest\x12%\n" +
	"\x0eclient_version\x18\x01 \x01(\x03R\rclientVersion\x12(\n" +
	"\x10min_host_version\x18\x02 \x01(\x03R\x0eminHostVersion\"\xbc\x01\n" +
	"\x17ProtocolVersionResponse\x12V\n" +
	"\x06result\x18\x01 \x01(\x0e2>.Anki.Vector.external_interface.ProtocolVersionResponse.ResultR\x06result\x12!\n" +
	"\fhost_version\x18\x02 \x01(\x03R\vhostVersion\"&\n" +
	"\x06Result\x12\x0f\n" +
	"\vUNSUPPORTED\x10\x00\x12\v\n" +
	"\aSUCCESS\x10\x01\"{\n" +
	"\x12ConnectionResponse\x12F\n" +
	"\x06status\x18\x01 \x01(\v2..Anki.Vector.external_interface.ResponseStatusR\x06status\x12\x1d\n" +
	"\n" +
	"is_primary\x18\x02 \x01(\bR\tisPrimary\"\xc5\x12\n" +
	"\x05Event\x12c\n" +
	"\x13time_stamped_status\x18\x01 \x01(\v21.Anki.Vector.external_interface.TimeStampedStatusH\x00R\x11timeStampedStatus\x12L\n" +
	"\n" +
	"onboarding\x18\x02 \x01(\v2*.Anki.Vector.external_interface.OnboardingH\x00R\n" +
	"onboarding\x12G\n" +
	"\twake_word\x18\x03 \x01(\v2(.Anki.Vector.external_interface.WakeWordH\x00R\bwakeWord\x12b\n" +
	"\x12attention_transfer\x18\x04 \x01(\v21.Anki.Vector.external_interface.AttentionTransferH\x00R\x11attentionTransfer\x12c\n" +
	"\x13robot_observed_face\x18\x05 \x01(\v21.Anki.Vector.external_interface.RobotObservedFaceH\x00R\x11robotObservedFace\x12\x80\x01\n" +
	"\x1erobot_changed_observed_face_id\x18\x06 \x01(\v2:.Anki.Vector.external_interface.RobotChangedObservedFaceIDH\x00R\x1arobotChangedObservedFaceId\x12P\n" +
	"\fobject_event\x18\a \x01(\v2+.Anki.Vector.external_interface.ObjectEventH\x00R\vobjectEvent\x12\\\n" +
	"\x10stimulation_info\x18\b \x01(\v2/.Anki.Vector.external_interface.StimulationInfoH\x00R\x0fstimulationInfo\x12M\n" +
	"\vphoto_taken\x18\t \x01(\v2*.Anki.Vector.external_interface.PhotoTakenH\x00R\n" +
	"photoTaken\x12M\n" +
	"\vrobot_state\x18\n" +
	" \x01(\v2*.Anki.Vector.external_interface.RobotStateH\x00R\n" +
	"robotState\x12P\n" +
	"\fcube_battery\x18\v \x01(\v2+.Anki.Vector.external_interface.CubeBatteryH\x00R\vcubeBattery\x12N\n" +
	"\n" +
	"keep_alive\x18\f \x01(\v2-.Anki.Vector.external_interface.KeepAlivePingH\x00R\tkeepAlive\x12e\n" +
	"\x13connection_response\x18\r \x01(\v22.Anki.Vector.external_interface.ConnectionResponseH\x00R\x12connectionResponse\x12S\n" +
	"\rjdocs_changed\x18\x0e \x01(\v2,.Anki.Vector.external_interface.JdocsChangedH\x00R\fjdocsChanged\x12Z\n" +
	"\x10alexa_auth_event\x18\x0f \x01(\v2..Anki.Vector.external_interface.AlexaAuthEventH\x00R\x0ealexaAuthEvent\x12f\n" +
	"\x14mirror_mode_disabled\x18\x10 \x01(\v22.Anki.Vector.external_interface.MirrorModeDisabledH\x00R\x12mirrorModeDisabled\x12v\n" +
	"\x1avision_modes_auto_disabled\x18\x11 \x01(\v27.Anki.Vector.external_interface.VisionModesAutoDisabledH\x00R\x17visionModesAutoDisabled\x12|\n" +
	"\x1ccheck_update_status_response\x18\x12 \x01(\v29.Anki.Vector.external_interface.CheckUpdateStatusResponseH\x00R\x19checkUpdateStatusResponse\x12M\n" +
	"\vuser_intent\x18\x13 \x01(\v2*.Anki.Vector.external_interface.UserIntentH\x00R\n" +
	"userIntent\x12i\n" +
	"\x15robot_observed_motion\x18\x14 \x01(\v23.Anki.Vector.external_interface.RobotObservedMotionH\x00R\x13robotObservedMotion\x12v\n" +
	"\x1arobot_erased_enrolled_face\x18\x15 \x01(\v27.Anki.Vector.external_interface.RobotErasedEnrolledFaceH\x00R\x17robotErasedEnrolledFace\x12y\n" +
	"\x1brobot_renamed_enrolled_face\x18\x16 \x01(\v28.Anki.Vector.external_interface.RobotRenamedEnrolledFaceH\x00R\x18robotRenamedEnrolledFace\x12l\n" +
	"\x16camera_settings_update\x18\x17 \x01(\v24.Anki.Vector.external_interface.CameraSettingsUpdateH\x00R\x14cameraSettingsUpdate\x12e\n" +
	"\x13unexpected_movement\x18\x18 \x01(\v22.Anki.Vector.external_interface.UnexpectedMovementH\x00R\x12unexpectedMovementB\f\n" +
	"\n" +
	"event_type\" \n" +
	"\n" +
	"FilterList\x12\x12\n" +
	"\x04list\x18\x01 \x03(\tR\x04list\"\xda\x01\n" +
	"\fEventRequest\x12K\n" +
	"\n" +
	"white_list\x18\x01 \x01(\v2*.Anki.Vector.external_interface.FilterListH\x00R\twhiteList\x12K\n" +
	"\n" +
	"black_list\x18\x02 \x01(\v2*.Anki.Vector.external_interface.FilterListH\x00R\tblackList\x12#\n" +
	"\rconnection_id\x18\x03 \x01(\tR\fconnectionIdB\v\n" +
	"\tlist_type\"\x9a\x01\n" +
	"\rEventResponse\x12F\n" +
	"\x06status\x18\x01 \x01(\v2..Anki.Vector.external_interface.ResponseStatusR\x06status\x12;\n" +
	"\x05event\x18\x02 \x01(\v2%.Anki.Vector.external_interface.EventR\x05event:\x04\x80\xa6\x1d\x01\"d\n" +
	"\x19UserAuthenticationRequest\x12&\n" +
	"\x0fuser_session_id\x18\x01 \x01(\fR\ruserSessionId\x12\x1f\n" +
	"\vclient_name\x18\x02 \x01(\fR\n" +
	"clientName\"\x8f\x02\n" +
	"\x1aUserAuthenticationResponse\x12F\n" +
	"\x06status\x18\x01 \x01(\v2..Anki.Vector.external_interface.ResponseStatusR\x06status\x12S\n" +
	"\x04code\x18\x02 \x01(\x0e2?.Anki.Vector.external_interface.UserAuthenticationResponse.CodeR\x04code\x12*\n" +
	"\x11client_token_guid\x18\x03 \x01(\fR\x0fclientTokenGuid\"(\n" +
	"\x04Code\x12\x10\n" +
	"\fUNAUTHORIZED\x10\x00\x12\x0e\n" +
	"\n" +
	"AUTHORIZED\x10\x01\"\xf1\x87\x01\n" +
	"\x0eGatewayWrapper\x12#\n" +
	"\rconnection_id\x18\x01 \x01(\x04R\fconnectionId\x12=\n" +
	"\x05event\x18\x02 \x01(\v2%.Anki.Vector.external_interface.EventH\x00R\x05event\x12r\n" +
	"\x18onboarding_state_request\x18\x03 \x01(\v26.Anki.Vector.external_interface.OnboardingStateRequestH\x00R\x16onboardingStateRequest\x12\\\n" +
	"\x10onboarding_state\x18\x04 \x01(\v2/.Anki.Vector.external_interface.OnboardingStateH\x00R\x0fonboardingState\x12x\n" +
	"\x1aonboarding_skip_onboarding\x18\x05 \x01(\v28.Anki.Vector.external_interface.OnboardingSkipOnboardingH\x00R\x18onboardingSkipOnboarding\x12b\n" +
	"\x12onboarding_restart\x18\x06 \x01(\v21.Anki.Vector.external_interface.OnboardingRestartH\x00R\x11onboardingRestart\x12{\n" +
	"\x1bonboarding_complete_request\x18\v \x01(\v29.Anki.Vector.external_interface.OnboardingCompleteRequestH\x00R\x19onboardingCompleteRequest\x12~\n" +
	"\x1conboarding_complete_response\x18\f \x01(\v2:.Anki.Vector.external_interface.OnboardingCompleteResponseH\x00R\x1aonboardingCompleteResponse\x12v\n" +
	"\x1aonboarding_wake_up_request\x18\r \x01(\v27.Anki.Vector.external_interface.OnboardingWakeUpRequestH\x00R\x17onboardingWakeUpRequest\x12y\n" +
	"\x1bonboarding_wake_up_response\x18\x0e \x01(\v28.Anki.Vector.external_interface.OnboardingWakeUpResponseH\x00R\x18onboardingWakeUpResponse\x12\x8c\x01\n" +
	"\"onboarding_wake_up_started_request\x18\x0f \x01(\v2>.Anki.Vector.external_interface.OnboardingWakeUpStartedRequestH\x00R\x1eonboardingWakeUpStartedRequest\x12\x8f\x01\n" +
	"#onboarding_wake_up_started_response\x18\x10 \x01(\v2?.Anki.Vector.external_interface.OnboardingWakeUpStartedResponseH\x00R\x1fonboardingWakeUpStartedResponse\x12|\n" +
	"\x1conboarding_set_phase_request\x18\x11 \x01(\v29.Anki.Vector.external_interface.OnboardingSetPhaseRequestH\x00R\x19onboardingSetPhaseRequest\x12\x7f\n" +
	"\x1donboarding_set_phase_response\x18\x12 \x01(\v2:.Anki.Vector.external_interface.OnboardingSetPhaseResponseH\x00R\x1aonboardingSetPhaseResponse\x12\x8b\x01\n" +
	"!onboarding_phase_progress_request\x18\x13 \x01(\v2>.Anki.Vector.external_interface.OnboardingPhaseProgressRequestH\x00R\x1eonboardingPhaseProgressRequest\x12\x8e\x01\n" +
	"\"onboarding_phase_progress_response\x18\x14 \x01(\v2?.Anki.Vector.external_interface.OnboardingPhaseProgressResponseH\x00R\x1fonboardingPhaseProgressResponse\x12\x82\x01\n" +
	"\x1eonboarding_charge_info_request\x18\x15 \x01(\v2;.Anki.Vector.external_interface.OnboardingChargeInfoRequestH\x00R\x1bonboardingChargeInfoRequest\x12\x85\x01\n" +
	"\x1fonboarding_charge_info_response\x18\x16 \x01(\v2<.Anki.Vector.external_interface.OnboardingChargeInfoResponseH\x00R\x1conboardingChargeInfoResponse\x12\x89\x01\n" +
	"!onboarding_mark_complete_and_exit\x18\x17 \x01(\v2=.Anki.Vector.external_interface.OnboardingMarkCompleteAndExitH\x00R\x1donboardingMarkCompleteAndExit\x12\x8b\x01\n" +
	"!latest_attention_transfer_request\x18d \x01(\v2>.Anki.Vector.external_interface.LatestAttentionTransferRequestH\x00R\x1elatestAttentionTransferRequest\x12u\n" +
	"\x19latest_attention_transfer\x18e \x01(\v27.Anki.Vector.external_interface.LatestAttentionTransferH\x00R\x17latestAttentionTransfer\x12d\n" +
	"\x13photos_info_request\x18\xc8\x01 \x01(\v21.Anki.Vector.external_interface.PhotosInfoRequestH\x00R\x11photosInfoRequest\x12g\n" +
	"\x14photos_info_response\x18\xc9\x01 \x01(\v22.Anki.Vector.external_interface.PhotosInfoResponseH\x00R\x12photosInfoResponse\x12T\n" +
	"\rphoto_request\x18\xca\x01 \x01(\v2,.Anki.Vector.external_interface.PhotoRequestH\x00R\fphotoRequest\x12a\n" +
	"\x12photo_path_message\x18\xcb\x01 \x01(\v20.Anki.Vector.external_interface.PhotoPathMessageH\x00R\x10photoPathMessage\x12`\n" +
	"\x11thumbnail_request\x18\xcc\x01 \x01(\v20.Anki.Vector.external_interface.ThumbnailRequestH\x00R\x10thumbnailRequest\x12m\n" +
	"\x16thumbnail_path_message\x18\xcd\x01 \x01(\v24.Anki.Vector.external_interface.ThumbnailPathMessageH\x00R\x14thumbnailPathMessage\x12g\n" +
	"\x14delete_photo_request\x18\xce\x01 \x01(\v22.Anki.Vector.external_interface.DeletePhotoRequestH\x00R\x12deletePhotoRequest\x12j\n" +
	"\x15delete_photo_response\x18\xcf\x01 \x01(\v23.Anki.Vector.external_interface.DeletePhotoResponseH\x00R\x13deletePhotoResponse\x12a\n" +
	"\x12pull_jdocs_request\x18\xac\x02 \x01(\v20.Anki.Vector.external_interface.PullJdocsRequestH\x00R\x10pullJdocsRequest\x12d\n" +
	"\x13pull_jdocs_response\x18\xad\x02 \x01(\v21.Anki.Vector.external_interface.PullJdocsResponseH\x00R\x11pullJdocsResponse\x12p\n" +
	"\x17update_settings_request\x18\xae\x02 \x01(\v25.Anki.Vector.external_interface.UpdateSettingsRequestH\x00R\x15updateSettingsRequest\x12s\n" +
	"\x18update_settings_response\x18\xaf\x02 \x01(\v26.Anki.Vector.external_interface.UpdateSettingsResponseH\x00R\x16updateSettingsResponse\x12\x86\x01\n" +
	"\x1fupdate_account_settings_request\x18\xb0\x02 \x01(\v2<.Anki.Vector.external_interface.UpdateAccountSettingsRequestH\x00R\x1cupdateAccountSettingsRequest\x12\x89\x01\n" +
	" update_account_settings_response\x18\xb1\x02 \x01(\v2=.Anki.Vector.external_interface.UpdateAccountSettingsResponseH\x00R\x1dupdateAccountSettingsResponse\x12\x89\x01\n" +
	" update_user_entitlements_request\x18\xb2\x02 \x01(\v2=.Anki.Vector.external_interface.UpdateUserEntitlementsRequestH\x00R\x1dupdateUserEntitlementsRequest\x12\x8c\x01\n" +
	"!update_user_entitlements_response\x18\xb3\x02 \x01(\v2>.Anki.Vector.external_interface.UpdateUserEntitlementsResponseH\x00R\x1eupdateUserEntitlementsResponse\x12t\n" +
	"\x19drive_off_charger_request\x18\x90\x03 \x01(\v26.Anki.Vector.external_interface.DriveOffChargerRequestH\x00R\x16driveOffChargerRequest\x12w\n" +
	"\x1adrive_off_charger_response\x18\x91\x03 \x01(\v27.Anki.Vector.external_interface.DriveOffChargerResponseH\x00R\x17driveOffChargerResponse\x12q\n" +
	"\x18drive_on_charger_request\x18\x92\x03 \x01(\v25.Anki.Vector.external_interface.DriveOnChargerRequestH\x00R\x15driveOnChargerRequest\x12t\n" +
	"\x19drive_on_charger_response\x18\x93\x03 \x01(\v26.Anki.Vector.external_interface.DriveOnChargerResponseH\x00R\x16driveOnChargerResponse\x12a\n" +
	"\x12find_faces_request\x18\x94\x03 \x01(\v20.Anki.Vector.external_interface.FindFacesRequestH\x00R\x10findFacesRequest\x12d\n" +
	"\x13find_faces_response\x18\x95\x03 \x01(\v21.Anki.Vector.external_interface.FindFacesResponseH\x00R\x11findFacesResponse\x12{\n" +
	"\x1clook_around_in_place_request\x18\x96\x03 \x01(\v28.Anki.Vector.external_interface.LookAroundInPlaceRequestH\x00R\x18lookAroundInPlaceRequest\x12~\n" +
	"\x1dlook_around_in_place_response\x18\x97\x03 \x01(\v29.Anki.Vector.external_interface.LookAroundInPlaceResponseH\x00R\x19lookAroundInPlaceResponse\x12a\n" +
	"\x12roll_block_request\x18\x98\x03 \x01(\v20.Anki.Vector.external_interface.RollBlockRequestH\x00R\x10rollBlockRequest\x12d\n" +
	"\x13roll_block_response\x18\x99\x03 \x01(\v21.Anki.Vector.external_interface.RollBlockResponseH\x00R\x11rollBlockResponse\x12d\n" +
	"\x13enroll_face_request\x18\x9a\x03 \x01(\v21.Anki.Vector.external_interface.EnrollFaceRequestH\x00R\x11enrollFaceRequest\x12g\n" +
	"\x14enroll_face_response\x18\x9b\x03 \x01(\v22.Anki.Vector.external_interface.EnrollFaceResponseH\x00R\x12enrollFaceResponse\x12u\n" +
	"\x1aset_face_to_enroll_request\x18\x9c\x03 \x01(\v26.Anki.Vector.external_interface.SetFaceToEnrollRequestH\x00R\x16setFaceToEnrollRequest\x12x\n" +
	"\x1bset_face_to_enroll_response\x18\x9d\x03 \x01(\v27.Anki.Vector.external_interface.SetFaceToEnrollResponseH\x00R\x17setFaceToEnrollResponse\x12p\n" +
	"\x17cancel_behavior_request\x18\x9e\x03 \x01(\v25.Anki.Vector.external_interface.CancelBehaviorRequestH\x00R\x15cancelBehaviorRequest\x12s\n" +
	"\x18cancel_behavior_response\x18\x9f\x03 \x01(\v26.Anki.Vector.external_interface.CancelBehaviorResponseH\x00R\x16cancelBehaviorResponse\x12h\n" +
	"\x15turn_in_place_request\x18\xf4\x03 \x01(\v22.Anki.Vector.external_interface.TurnInPlaceRequestH\x00R\x12turnInPlaceRequest\x12k\n" +
	"\x16turn_in_place_response\x18\xf5\x03 \x01(\v23.Anki.Vector.external_interface.TurnInPlaceResponseH\x00R\x13turnInPlaceResponse\x12m\n" +
	"\x16drive_straight_request\x18\xf6\x03 \x01(\v24.Anki.Vector.external_interface.DriveStraightRequestH\x00R\x14driveStraightRequest\x12p\n" +
	"\x17drive_straight_response\x18\xf7\x03 \x01(\v25.Anki.Vector.external_interface.DriveStraightResponseH\x00R\x15driveStraightResponse\x12k\n" +
	"\x16set_head_angle_request\x18\xf8\x03 \x01(\v23.Anki.Vector.external_interface.SetHeadAngleRequestH\x00R\x13setHeadAngleRequest\x12n\n" +
	"\x17set_head_angle_response\x18\xf9\x03 \x01(\v24.Anki.Vector.external_interface.SetHeadAngleResponseH\x00R\x14setHeadAngleResponse\x12n\n" +
	"\x17set_lift_height_request\x18\xfa\x03 \x01(\v24.Anki.Vector.external_interface.SetLiftHeightRequestH\x00R\x14setLiftHeightRequest\x12q\n" +
	"\x18set_lift_height_response\x18\xfb\x03 \x01(\v25.Anki.Vector.external_interface.SetLiftHeightResponseH\x00R\x15setLiftHeightResponse\x12m\n" +
	"\x16play_animation_request\x18\xfc\x03 \x01(\v24.Anki.Vector.external_interface.PlayAnimationRequestH\x00R\x14playAnimationRequest\x12p\n" +
	"\x17play_animation_response\x18\xfd\x03 \x01(\v25.Anki.Vector.external_interface.PlayAnimationResponseH\x00R\x15playAnimationResponse\x12_\n" +
	"\x12go_to_pose_request\x18\xfe\x03 \x01(\v2/.Anki.Vector.external_interface.GoToPoseRequestH\x00R\x0fgoToPoseRequest\x12b\n" +
	"\x13go_to_pose_response\x18\xff\x03 \x01(\v20.Anki.Vector.external_interface.GoToPoseResponseH\x00R\x10goToPoseResponse\x12k\n" +
	"\x16dock_with_cube_request\x18\x80\x04 \x01(\v23.Anki.Vector.external_interface.DockWithCubeRequestH\x00R\x13dockWithCubeRequest\x12n\n" +
	"\x17dock_with_cube_response\x18\x81\x04 \x01(\v24.Anki.Vector.external_interface.DockWithCubeResponseH\x00R\x14dockWithCubeResponse\x12g\n" +
	"\x14drive_wheels_request\x18\x82\x04 \x01(\v22.Anki.Vector.external_interface.DriveWheelsRequestH\x00R\x12driveWheelsRequest\x12j\n" +
	"\x15drive_wheels_response\x18\x83\x04 \x01(\v23.Anki.Vector.external_interface.DriveWheelsResponseH\x00R\x13driveWheelsResponse\x12p\n" +
	"\x17list_animations_request\x18\x84\x04 \x01(\v25.Anki.Vector.external_interface.ListAnimationsRequestH\x00R\x15listAnimationsRequest\x12s\n" +
	"\x18list_animations_response\x18\x85\x04 \x01(\v26.Anki.Vector.external_interface.ListAnimationsResponseH\x00R\x16listAnimationsResponse\x12\x83\x01\n" +
	"\x1eplay_animation_trigger_request\x18\x86\x04 \x01(\v2;.Anki.Vector.external_interface.PlayAnimationTriggerRequestH\x00R\x1bplayAnimationTriggerRequest\x12\x86\x01\n" +
	"\x1flist_animation_triggers_request\x18\x87\x04 \x01(\v2<.Anki.Vector.external_interface.ListAnimationTriggersRequestH\x00R\x1clistAnimationTriggersRequest\x12\x89\x01\n" +
	" list_animation_triggers_response\x18\x88\x04 \x01(\v2=.Anki.Vector.external_interface.ListAnimationTriggersResponseH\x00R\x1dlistAnimationTriggersResponse\x12\x82\x01\n" +
	"\x1fcancel_action_by_id_tag_request\x18\x89\x04 \x01(\v2:.Anki.Vector.external_interface.CancelActionByIdTagRequestH\x00R\x1acancelActionByIdTagRequest\x12\x85\x01\n" +
	" cancel_action_by_id_tag_response\x18\x8a\x04 \x01(\v2;.Anki.Vector.external_interface.CancelActionByIdTagResponseH\x00R\x1bcancelActionByIdTagResponse\x12t\n" +
	"\x19turn_towards_face_request\x18\x8b\x04 \x01(\v26.Anki.Vector.external_interface.TurnTowardsFaceRequestH\x00R\x16turnTowardsFaceRequest\x12w\n" +
	"\x1aturn_towards_face_response\x18\x8c\x04 \x01(\v27.Anki.Vector.external_interface.TurnTowardsFaceResponseH\x00R\x17turnTowardsFaceResponse\x12e\n" +
	"\x14go_to_object_request\x18\x8d\x04 \x01(\v21.Anki.Vector.external_interface.GoToObjectRequestH\x00R\x11goToObjectRequest\x12h\n" +
	"\x15go_to_object_response\x18\x8e\x04 \x01(\v22.Anki.Vector.external_interface.GoToObjectResponseH\x00R\x12goToObjectResponse\x12d\n" +
	"\x13roll_object_request\x18\x8f\x04 \x01(\v21.Anki.Vector.external_interface.RollObjectRequestH\x00R\x11rollObjectRequest\x12g\n" +
	"\x14roll_object_response\x18\x90\x04 \x01(\v22.Anki.Vector.external_interface.RollObjectResponseH\x00R\x12rollObjectResponse\x12h\n" +
	"\x15pop_a_wheelie_request\x18\x91\x04 \x01(\v22.Anki.Vector.external_interface.PopAWheelieRequestH\x00R\x12popAWheelieRequest\x12k\n" +
	"\x16pop_a_wheelie_response\x18\x92\x04 \x01(\v23.Anki.Vector.external_interface.PopAWheelieResponseH\x00R\x13popAWheelieResponse\x12j\n" +
	"\x15pickup_object_request\x18\x93\x04 \x01(\v23.Anki.Vector.external_interface.PickupObjectRequestH\x00R\x13pickupObjectRequest\x12m\n" +
	"\x16pickup_object_response\x18\x94\x04 \x01(\v24.Anki.Vector.external_interface.PickupObjectResponseH\x00R\x14pickupObjectResponse\x12\x8e\x01\n" +
	"#place_object_on_ground_here_request\x18\x95\x04 \x01(\v2>.Anki.Vector.external_interface.PlaceObjectOnGroundHereRequestH\x00R\x1eplaceObjectOnGroundHereRequest\x12\x91\x01\n" +
	"$place_object_on_ground_here_response\x18\x96\x04 \x01(\v2?.Anki.Vector.external_interface.PlaceObjectOnGroundHereResponseH\x00R\x1fplaceObjectOnGroundHereResponse\x12n\n" +
	"\x17stop_all_motors_request\x18\x97\x04 \x01(\v24.Anki.Vector.external_interface.StopAllMotorsRequestH\x00R\x14stopAllMotorsRequest\x12q\n" +
	"\x18stop_all_motors_response\x18\x98\x04 \x01(\v25.Anki.Vector.external_interface.StopAllMotorsResponseH\x00R\x15stopAllMotorsResponse\x12j\n" +
	"\x15robot_history_request\x18\xd8\x04 \x01(\v23.Anki.Vector.external_interface.RobotHistoryRequestH\x00R\x13robotHistoryRequest\x12m\n" +
	"\x16robot_history_response\x18\xd9\x04 \x01(\v24.Anki.Vector.external_interface.RobotHistoryResponseH\x00R\x14robotHistoryResponse\x12g\n" +
	"\x14connect_cube_request\x18\xbc\x05 \x01(\v22.Anki.Vector.external_interface.ConnectCubeRequestH\x00R\x12connectCubeRequest\x12j\n" +
	"\x15connect_cube_response\x18\xbd\x05 \x01(\v23.Anki.Vector.external_interface.ConnectCubeResponseH\x00R\x13connectCubeResponse\x12p\n" +
	"\x17disconnect_cube_request\x18\xbe\x05 \x01(\v25.Anki.Vector.external_interface.DisconnectCubeRequestH\x00R\x15disconnectCubeRequest\x12t\n" +
	"\x19flash_cube_lights_request\x18\xbf\x05 \x01(\v26.Anki.Vector.external_interface.FlashCubeLightsRequestH\x00R\x16flashCubeLightsRequest\x12\x80\x01\n" +
	"\x1dforget_preferred_cube_request\x18\xc0\x05 \x01(\v2:.Anki.Vector.external_interface.ForgetPreferredCubeRequestH\x00R\x1aforgetPreferredCubeRequest\x12w\n" +
	"\x1aset_preferred_cube_request\x18\xc1\x05 \x01(\v27.Anki.Vector.external_interface.SetPreferredCubeRequestH\x00R\x17setPreferredCubeRequest\x12n\n" +
	"\x17set_cube_lights_request\x18\xc2\x05 \x01(\v24.Anki.Vector.external_interface.SetCubeLightsRequestH\x00R\x14setCubeLightsRequest\x12p\n" +
	"\x17cubes_available_request\x18\xc3\x05 \x01(\v25.Anki.Vector.external_interface.CubesAvailableRequestH\x00R\x15cubesAvailableRequest\x12s\n" +
	"\x18cubes_available_response\x18\xc4\x05 \x01(\v26.Anki.Vector.external_interface.CubesAvailableResponseH\x00R\x16cubesAvailableResponse\x12j\n" +
	"\x15battery_state_request\x18\xa0\x06 \x01(\v23.Anki.Vector.external_interface.BatteryStateRequestH\x00R\x13batteryStateRequest\x12m\n" +
	"\x16battery_state_response\x18\xa1\x06 \x01(\v24.Anki.Vector.external_interface.BatteryStateResponseH\x00R\x14batteryStateResponse\x12j\n" +
	"\x15version_state_request\x18\xa2\x06 \x01(\v23.Anki.Vector.external_interface.VersionStateRequestH\x00R\x13versionStateRequest\x12m\n" +
	"\x16version_state_response\x18\xa3\x06 \x01(\v24.Anki.Vector.external_interface.VersionStateResponseH\x00R\x14versionStateResponse\x12[\n" +
	"\x10say_text_request\x18\x84\a \x01(\v2..Anki.Vector.external_interface.SayTextRequestH\x00R\x0esayTextRequest\x12^\n" +
	"\x11say_text_response\x18\x85\a \x01(\v2/.Anki.Vector.external_interface.SayTextResponseH\x00R\x0fsayTextResponse\x12Z\n" +
	"\x0fcontrol_request\x18\xe8\a \x01(\v2..Anki.Vector.external_interface.ControlRequestH\x00R\x0econtrolRequest\x12Z\n" +
	"\x0fcontrol_release\x18\xe9\a \x01(\v2..Anki.Vector.external_interface.ControlReleaseH\x00R\x0econtrolRelease\x12v\n" +
	"\x19behavior_control_response\x18\xea\a \x01(\v27.Anki.Vector.external_interface.BehaviorControlResponseH\x00R\x17behaviorControlResponse\x12N\n" +
	"\vimage_chunk\x18\xcd\b \x01(\v2*.Anki.Vector.external_interface.ImageChunkH\x00R\n" +
	"imageChunk\x12\x86\x01\n" +
	"\x1fenable_marker_detection_request\x18\xce\b \x01(\v2<.Anki.Vector.external_interface.EnableMarkerDetectionRequestH\x00R\x1cenableMarkerDetectionRequest\x12\x89\x01\n" +
	" enable_marker_detection_response\x18\xcf\b \x01(\v2=.Anki.Vector.external_interface.EnableMarkerDetectionResponseH\x00R\x1denableMarkerDetectionResponse\x12\x80\x01\n" +
	"\x1denable_face_detection_request\x18\xd0\b \x01(\v2:.Anki.Vector.external_interface.EnableFaceDetectionRequestH\x00R\x1aenableFaceDetectionRequest\x12\x83\x01\n" +
	"\x1eenable_face_detection_response\x18\xd1\b \x01(\v2;.Anki.Vector.external_interface.EnableFaceDetectionResponseH\x00R\x1benableFaceDetectionResponse\x12\x86\x01\n" +
	"\x1fenable_motion_detection_request\x18\xd2\b \x01(\v2<.Anki.Vector.external_interface.EnableMotionDetectionRequestH\x00R\x1cenableMotionDetectionRequest\x12\x89\x01\n" +
	" enable_motion_detection_response\x18\xd3\b \x01(\v2=.Anki.Vector.external_interface.EnableMotionDetectionResponseH\x00R\x1denableMotionDetectionResponse\x12w\n" +
	"\x1aenable_mirror_mode_request\x18\xd4\b \x01(\v27.Anki.Vector.external_interface.EnableMirrorModeRequestH\x00R\x17enableMirrorModeRequest\x12z\n" +
	"\x1benable_mirror_mode_response\x18\xd5\b \x01(\v28.Anki.Vector.external_interface.EnableMirrorModeResponseH\x00R\x18enableMirrorModeResponse\x12\x83\x01\n" +
	"\x1eenable_image_streaming_request\x18\xd6\b \x01(\v2;.Anki.Vector.external_interface.EnableImageStreamingRequestH\x00R\x1benableImageStreamingRequest\x12\x86\x01\n" +
	"\x1fenable_image_streaming_response\x18\xd7\b \x01(\v2<.Anki.Vector.external_interface.EnableImageStreamingResponseH\x00R\x1cenableImageStreamingResponse\x12\x8d\x01\n" +
	"\"is_image_streaming_enabled_request\x18\xd8\b \x01(\v2>.Anki.Vector.external_interface.IsImageStreamingEnabledRequestH\x00R\x1eisImageStreamingEnabledRequest\x12\x90\x01\n" +
	"#is_image_streaming_enabled_response\x18\xd9\b \x01(\v2?.Anki.Vector.external_interface.IsImageStreamingEnabledResponseH\x00R\x1fisImageStreamingEnabledResponse\x12d\n" +
	"\x13check_cloud_request\x18\xb0\t \x01(\v21.Anki.Vector.external_interface.CheckCloudRequestH\x00R\x11checkCloudRequest\x12g\n" +
	"\x14check_cloud_response\x18\xb1\t \x01(\v22.Anki.Vector.external_interface.CheckCloudResponseH\x00R\x12checkCloudResponse\x12n\n" +
	"\x17audio_send_mode_request\x18\x94\n" +
	" \x01(\v24.Anki.Vector.external_interface.AudioSendModeRequestH\x00R\x14audioSendModeRequest\x12n\n" +
	"\x17audio_send_mode_changed\x18\x95\n" +
	" \x01(\v24.Anki.Vector.external_interface.AudioSendModeChangedH\x00R\x14audioSendModeChanged\x12N\n" +
	"\vaudio_chunk\x18\x96\n" +
	" \x01(\v2*.Anki.Vector.external_interface.AudioChunkH\x00R\n" +
	"audioChunk\x12g\n" +
	"\x14feature_flag_request\x18\xf8\n" +
	" \x01(\v22.Anki.Vector.external_interface.FeatureFlagRequestH\x00R\x12featureFlagRequest\x12j\n" +
	"\x15feature_flag_response\x18\xf9\n" +
	" \x01(\v23.Anki.Vector.external_interface.FeatureFlagResponseH\x00R\x13featureFlagResponse\x12t\n" +
	"\x19feature_flag_list_request\x18\xfa\n" +
	" \x01(\v26.Anki.Vector.external_interface.FeatureFlagListRequestH\x00R\x16featureFlagListRequest\x12w\n" +
	"\x1afeature_flag_list_response\x18\xfb\n" +
	" \x01(\v27.Anki.Vector.external_interface.FeatureFlagListResponseH\x00R\x17featureFlagListResponse\x12]\n" +
	"\x10app_disconnected\x18\xdc\v \x01(\v2/.Anki.Vector.external_interface.AppDisconnectedH\x00R\x0fappDisconnected\x12q\n" +
	"\x18alexa_auth_state_request\x18\xc0\f \x01(\v25.Anki.Vector.external_interface.AlexaAuthStateRequestH\x00R\x15alexaAuthStateRequest\x12t\n" +
	"\x19alexa_auth_state_response\x18\xc1\f \x01(\v26.Anki.Vector.external_interface.AlexaAuthStateResponseH\x00R\x16alexaAuthStateResponse\x12e\n" +
	"\x14alexa_opt_in_request\x18\xc2\f \x01(\v21.Anki.Vector.external_interface.AlexaOptInRequestH\x00R\x11alexaOptInRequest\x12h\n" +
	"\x15alexa_opt_in_response\x18\xc3\f \x01(\v22.Anki.Vector.external_interface.AlexaOptInResponseH\x00R\x12alexaOptInResponse\x12h\n" +
	"\x15set_eye_color_request\x18\xa4\r \x01(\v22.Anki.Vector.external_interface.SetEyeColorRequestH\x00R\x12setEyeColorRequest\x12k\n" +
	"\x16set_eye_color_response\x18\xa5\r \x01(\v23.Anki.Vector.external_interface.SetEyeColorResponseH\x00R\x13setEyeColorResponse\x12j\n" +
	"\x15master_volume_request\x18\xa6\r \x01(\v23.Anki.Vector.external_interface.MasterVolumeRequestH\x00R\x13masterVolumeRequest\x12m\n" +
	"\x16master_volume_response\x18\xa7\r \x01(\v24.Anki.Vector.external_interface.MasterVolumeResponseH\x00R\x14masterVolumeResponse\x12z\n" +
	"\x1bset_camera_settings_request\x18\xa8\r \x01(\v28.Anki.Vector.external_interface.SetCameraSettingsRequestH\x00R\x18setCameraSettingsRequest\x12}\n" +
	"\x1cset_camera_settings_response\x18\xa9\r \x01(\v29.Anki.Vector.external_interface.SetCameraSettingsResponseH\x00R\x19setCameraSettingsResponse\x12j\n" +
	"\x15camera_config_request\x18\xaa\r \x01(\v23.Anki.Vector.external_interface.CameraConfigRequestH\x00R\x13cameraConfigRequest\x12m\n" +
	"\x16camera_config_response\x18\xab\r \x01(\v24.Anki.Vector.external_interface.CameraConfigResponseH\x00R\x14cameraConfigResponse\x12\x80\x01\n" +
	"\x1dexternal_audio_stream_prepare\x18\x88\x0e \x01(\v2:.Anki.Vector.external_interface.ExternalAudioStreamPrepareH\x00R\x1aexternalAudioStreamPrepare\x12z\n" +
	"\x1bexternal_audio_stream_chunk\x18\x89\x0e \x01(\v28.Anki.Vector.external_interface.ExternalAudioStreamChunkH\x00R\x18externalAudioStreamChunk\x12}\n" +
	"\x1cexternal_audio_stream_cancel\x18\x8a\x0e \x01(\v29.Anki.Vector.external_interface.ExternalAudioStreamCancelH\x00R\x19externalAudioStreamCancel\x12\x83\x01\n" +
	"\x1eexternal_audio_stream_complete\x18\x8b\x0e \x01(\v2;.Anki.Vector.external_interface.ExternalAudioStreamCompleteH\x00R\x1bexternalAudioStreamComplete\x12\x83\x01\n" +
	"\x1eexternal_audio_stream_response\x18\x8c\x0e \x01(\v2;.Anki.Vector.external_interface.ExternalAudioStreamResponseH\x00R\x1bexternalAudioStreamResponseB\x14\n" +
	"\x12oneof_message_typeB Z\x1eAnki.Vector.external_interfaceb\x06proto3"

var (
	file_shared_proto_rawDescOnce sync.Once
	file_shared_proto_rawDescData []byte
)

func file_shared_proto_rawDescGZIP() []byte {
	file_shared_proto_rawDescOnce.Do(func() {
		file_shared_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_shared_proto_rawDesc), len(file_shared_proto_rawDesc)))
	})
	return file_shared_proto_rawDescData
}

var file_shared_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_shared_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_shared_proto_goTypes = []any{
	(ProtocolVersionResponse_Result)(0),     // 0: Anki.Vector.external_interface.ProtocolVersionResponse.Result
	(UserAuthenticationResponse_Code)(0),    // 1: Anki.Vector.external_interface.UserAuthenticationResponse.Code
	(*ProtocolVersionRequest)(nil),          // 2: Anki.Vector.external_interface.ProtocolVersionRequest
	(*ProtocolVersionResponse)(nil),         // 3: Anki.Vector.external_interface.ProtocolVersionResponse
	(*ConnectionResponse)(nil),              // 4: Anki.Vector.external_interface.ConnectionResponse
	(*Event)(nil),                           // 5: Anki.Vector.external_interface.Event
	(*FilterList)(nil),                      // 6: Anki.Vector.external_interface.FilterList
	(*EventRequest)(nil),                    // 7: Anki.Vector.external_interface.EventRequest
	(*EventResponse)(nil),                   // 8: Anki.Vector.external_interface.EventResponse
	(*UserAuthenticationRequest)(nil),       // 9: Anki.Vector.external_interface.UserAuthenticationRequest
	(*UserAuthenticationResponse)(nil),      // 10: Anki.Vector.external_interface.UserAuthenticationResponse
	(*GatewayWrapper)(nil),                  // 11: Anki.Vector.external_interface.GatewayWrapper
	(*ResponseStatus)(nil),                  // 12: Anki.Vector.external_interface.ResponseStatus
	(*TimeStampedStatus)(nil),               // 13: Anki.Vector.external_interface.TimeStampedStatus
	(*Onboarding)(nil),                      // 14: Anki.Vector.external_interface.Onboarding
	(*WakeWord)(nil),                        // 15: Anki.Vector.external_interface.WakeWord
	(*AttentionTransfer)(nil),               // 16: Anki.Vector.external_interface.AttentionTransfer
	(*RobotObservedFace)(nil),               // 17: Anki.Vector.external_interface.RobotObservedFace
	(*RobotChangedObservedFaceID)(nil),      // 18: Anki.Vector.external_interface.RobotChangedObservedFaceID
	(*ObjectEvent)(nil),                     // 19: Anki.Vector.external_interface.ObjectEvent
	(*StimulationInfo)(nil),                 // 20: Anki.Vector.external_interface.StimulationInfo
	(*PhotoTaken)(nil),                      // 21: Anki.Vector.external_interface.PhotoTaken
	(*RobotState)(nil),                      // 22: Anki.Vector.external_interface.RobotState
	(*CubeBattery)(nil),                     // 23: Anki.Vector.external_interface.CubeBattery
	(*KeepAlivePing)(nil),                   // 24: Anki.Vector.external_interface.KeepAlivePing
	(*JdocsChanged)(nil),                    // 25: Anki.Vector.external_interface.JdocsChanged
	(*AlexaAuthEvent)(nil),                  // 26: Anki.Vector.external_interface.AlexaAuthEvent
	(*MirrorModeDisabled)(nil),              // 27: Anki.Vector.external_interface.MirrorModeDisabled
	(*VisionModesAutoDisabled)(nil),         // 28: Anki.Vector.external_interface.VisionModesAutoDisabled
	(*CheckUpdateStatusResponse)(nil),       // 29: Anki.Vector.external_interface.CheckUpdateStatusResponse
	(*UserIntent)(nil),                      // 30: Anki.Vector.external_interface.UserIntent
	(*RobotObservedMotion)(nil),             // 31: Anki.Vector.external_interface.RobotObservedMotion
	(*RobotErasedEnrolledFace)(nil),         // 32: Anki.Vector.external_interface.RobotErasedEnrolledFace
	(*RobotRenamedEnrolledFace)(nil),        // 33: Anki.Vector.external_interface.RobotRenamedEnrolledFace
	(*CameraSettingsUpdate)(nil),            // 34: Anki.Vector.external_interface.CameraSettingsUpdate
	(*UnexpectedMovement)(nil),              // 35: Anki.Vector.external_interface.UnexpectedMovement
	(*OnboardingStateRequest)(nil),          // 36: Anki.Vector.external_interface.OnboardingStateRequest
	(*OnboardingState)(nil),                 // 37: Anki.Vector.external_interface.OnboardingState
	(*OnboardingSkipOnboarding)(nil),        // 38: Anki.Vector.external_interface.OnboardingSkipOnboarding
	(*OnboardingRestart)(nil),               // 39: Anki.Vector.external_interface.OnboardingRestart
	(*OnboardingCompleteRequest)(nil),       // 40: Anki.Vector.external_interface.OnboardingCompleteRequest
	(*OnboardingCompleteResponse)(nil),      // 41: Anki.Vector.external_interface.OnboardingCompleteResponse
	(*OnboardingWakeUpRequest)(nil),         // 42: Anki.Vector.external_interface.OnboardingWakeUpRequest
	(*OnboardingWakeUpResponse)(nil),        // 43: Anki.Vector.external_interface.OnboardingWakeUpResponse
	(*OnboardingWakeUpStartedRequest)(nil),  // 44: Anki.Vector.external_interface.OnboardingWakeUpStartedRequest
	(*OnboardingWakeUpStartedResponse)(nil), // 45: Anki.Vector.external_interface.OnboardingWakeUpStartedResponse
	(*OnboardingSetPhaseRequest)(nil),       // 46: Anki.Vector.external_interface.OnboardingSetPhaseRequest
	(*OnboardingSetPhaseResponse)(nil),      // 47: Anki.Vector.external_interface.OnboardingSetPhaseResponse
	(*OnboardingPhaseProgressRequest)(nil),  // 48: Anki.Vector.external_interface.OnboardingPhaseProgressRequest
	(*OnboardingPhaseProgressResponse)(nil), // 49: Anki.Vector.external_interface.OnboardingPhaseProgressResponse
	(*OnboardingChargeInfoRequest)(nil),     // 50: Anki.Vector.external_interface.OnboardingChargeInfoRequest
	(*OnboardingChargeInfoResponse)(nil),    // 51: Anki.Vector.external_interface.OnboardingChargeInfoResponse
	(*OnboardingMarkCompleteAndExit)(nil),   // 52: Anki.Vector.external_interface.OnboardingMarkCompleteAndExit
	(*LatestAttentionTransferRequest)(nil),  // 53: Anki.Vector.external_interface.LatestAttentionTransferRequest
	(*LatestAttentionTransfer)(nil),         // 54: Anki.Vector.external_interface.LatestAttentionTransfer
	(*PhotosInfoRequest)(nil),               // 55: Anki.Vector.external_interface.PhotosInfoRequest
	(*PhotosInfoResponse)(nil),              // 56: Anki.Vector.external_interface.PhotosInfoResponse
	(*PhotoRequest)(nil),                    // 57: Anki.Vector.external_interface.PhotoRequest
	(*PhotoPathMessage)(nil),                // 58: Anki.Vector.external_interface.PhotoPathMessage
	(*ThumbnailRequest)(nil),                // 59: Anki.Vector.external_interface.ThumbnailRequest
	(*ThumbnailPathMessage)(nil),            // 60: Anki.Vector.external_interface.ThumbnailPathMessage
	(*DeletePhotoRequest)(nil),              // 61: Anki.Vector.external_interface.DeletePhotoRequest
	(*DeletePhotoResponse)(nil),             // 62: Anki.Vector.external_interface.DeletePhotoResponse
	(*PullJdocsRequest)(nil),                // 63: Anki.Vector.external_interface.PullJdocsRequest
	(*PullJdocsResponse)(nil),               // 64: Anki.Vector.external_interface.PullJdocsResponse
	(*UpdateSettingsRequest)(nil),           // 65: Anki.Vector.external_interface.UpdateSettingsRequest
	(*UpdateSettingsResponse)(nil),          // 66: Anki.Vector.external_interface.UpdateSettingsResponse
	(*UpdateAccountSettingsRequest)(nil),    // 67: Anki.Vector.external_interface.UpdateAccountSettingsRequest
	(*UpdateAccountSettingsResponse)(nil),   // 68: Anki.Vector.external_interface.UpdateAccountSettingsResponse
	(*UpdateUserEntitlementsRequest)(nil),   // 69: Anki.Vector.external_interface.UpdateUserEntitlementsRequest
	(*UpdateUserEntitlementsResponse)(nil),  // 70: Anki.Vector.external_interface.UpdateUserEntitlementsResponse
	(*DriveOffChargerRequest)(nil),          // 71: Anki.Vector.external_interface.DriveOffChargerRequest
	(*DriveOffChargerResponse)(nil),         // 72: Anki.Vector.external_interface.DriveOffChargerResponse
	(*DriveOnChargerRequest)(nil),           // 73: Anki.Vector.external_interface.DriveOnChargerRequest
	(*DriveOnChargerResponse)(nil),          // 74: Anki.Vector.external_interface.DriveOnChargerResponse
	(*FindFacesRequest)(nil),                // 75: Anki.Vector.external_interface.FindFacesRequest
	(*FindFacesResponse)(nil),               // 76: Anki.Vector.external_interface.FindFacesResponse
	(*LookAroundInPlaceRequest)(nil),        // 77: Anki.Vector.external_interface.LookAroundInPlaceRequest
	(*LookAroundInPlaceResponse)(nil),       // 78: Anki.Vector.external_interface.LookAroundInPlaceResponse
	(*RollBlockRequest)(nil),                // 79: Anki.Vector.external_interface.RollBlockRequest
	(*RollBlockResponse)(nil),               // 80: Anki.Vector.external_interface.RollBlockResponse
	(*EnrollFaceRequest)(nil),               // 81: Anki.Vector.external_interface.EnrollFaceRequest
	(*EnrollFaceResponse)(nil),              // 82: Anki.Vector.external_interface.EnrollFaceResponse
	(*SetFaceToEnrollRequest)(nil),          // 83: Anki.Vector.external_interface.SetFaceToEnrollRequest
	(*SetFaceToEnrollResponse)(nil),         // 84: Anki.Vector.external_interface.SetFaceToEnrollResponse
	(*CancelBehaviorRequest)(nil),           // 85: Anki.Vector.external_interface.CancelBehaviorRequest
	(*CancelBehaviorResponse)(nil),          // 86: Anki.Vector.external_interface.CancelBehaviorResponse
	(*TurnInPlaceRequest)(nil),              // 87: Anki.Vector.external_interface.TurnInPlaceRequest
	(*TurnInPlaceResponse)(nil),             // 88: Anki.Vector.external_interface.TurnInPlaceResponse
	(*DriveStraightRequest)(nil),            // 89: Anki.Vector.external_interface.DriveStraightRequest
	(*DriveStraightResponse)(nil),           // 90: Anki.Vector.external_interface.DriveStraightResponse
	(*SetHeadAngleRequest)(nil),             // 91: Anki.Vector.external_interface.SetHeadAngleRequest
	(*SetHeadAngleResponse)(nil),            // 92: Anki.Vector.external_interface.SetHeadAngleResponse
	(*SetLiftHeightRequest)(nil),            // 93: Anki.Vector.external_interface.SetLiftHeightRequest
	(*SetLiftHeightResponse)(nil),           // 94: Anki.Vector.external_interface.SetLiftHeightResponse
	(*PlayAnimationRequest)(nil),            // 95: Anki.Vector.external_interface.PlayAnimationRequest
	(*PlayAnimationResponse)(nil),           // 96: Anki.Vector.external_interface.PlayAnimationResponse
	(*GoToPoseRequest)(nil),                 // 97: Anki.Vector.external_interface.GoToPoseRequest
	(*GoToPoseResponse)(nil),                // 98: Anki.Vector.external_interface.GoToPoseResponse
	(*DockWithCubeRequest)(nil),             // 99: Anki.Vector.external_interface.DockWithCubeRequest
	(*DockWithCubeResponse)(nil),            // 100: Anki.Vector.external_interface.DockWithCubeResponse
	(*DriveWheelsRequest)(nil),              // 101: Anki.Vector.external_interface.DriveWheelsRequest
	(*DriveWheelsResponse)(nil),             // 102: Anki.Vector.external_interface.DriveWheelsResponse
	(*ListAnimationsRequest)(nil),           // 103: Anki.Vector.external_interface.ListAnimationsRequest
	(*ListAnimationsResponse)(nil),          // 104: Anki.Vector.external_interface.ListAnimationsResponse
	(*PlayAnimationTriggerRequest)(nil),     // 105: Anki.Vector.external_interface.PlayAnimationTriggerRequest
	(*ListAnimationTriggersRequest)(nil),    // 106: Anki.Vector.external_interface.ListAnimationTriggersRequest
	(*ListAnimationTriggersResponse)(nil),   // 107: Anki.Vector.external_interface.ListAnimationTriggersResponse
	(*CancelActionByIdTagRequest)(nil),      // 108: Anki.Vector.external_interface.CancelActionByIdTagRequest
	(*CancelActionByIdTagResponse)(nil),     // 109: Anki.Vector.external_interface.CancelActionByIdTagResponse
	(*TurnTowardsFaceRequest)(nil),          // 110: Anki.Vector.external_interface.TurnTowardsFaceRequest
	(*TurnTowardsFaceResponse)(nil),         // 111: Anki.Vector.external_interface.TurnTowardsFaceResponse
	(*GoToObjectRequest)(nil),               // 112: Anki.Vector.external_interface.GoToObjectRequest
	(*GoToObjectResponse)(nil),              // 113: Anki.Vector.external_interface.GoToObjectResponse
	(*RollObjectRequest)(nil),               // 114: Anki.Vector.external_interface.RollObjectRequest
	(*RollObjectResponse)(nil),              // 115: Anki.Vector.external_interface.RollObjectResponse
	(*PopAWheelieRequest)(nil),              // 116: Anki.Vector.external_interface.PopAWheelieRequest
	(*PopAWheelieResponse)(nil),             // 117: Anki.Vector.external_interface.PopAWheelieResponse
	(*PickupObjectRequest)(nil),             // 118: Anki.Vector.external_interface.PickupObjectRequest
	(*PickupObjectResponse)(nil),            // 119: Anki.Vector.external_interface.PickupObjectResponse
	(*PlaceObjectOnGroundHereRequest)(nil),  // 120: Anki.Vector.external_interface.PlaceObjectOnGroundHereRequest
	(*PlaceObjectOnGroundHereResponse)(nil), // 121: Anki.Vector.external_interface.PlaceObjectOnGroundHereResponse
	(*StopAllMotorsRequest)(nil),            // 122: Anki.Vector.external_interface.StopAllMotorsRequest
	(*StopAllMotorsResponse)(nil),           // 123: Anki.Vector.external_interface.StopAllMotorsResponse
	(*RobotHistoryRequest)(nil),             // 124: Anki.Vector.external_interface.RobotHistoryRequest
	(*RobotHistoryResponse)(nil),            // 125: Anki.Vector.external_interface.RobotHistoryResponse
	(*ConnectCubeRequest)(nil),              // 126: Anki.Vector.external_interface.ConnectCubeRequest
	(*ConnectCubeResponse)(nil),             // 127: Anki.Vector.external_interface.ConnectCubeResponse
	(*DisconnectCubeRequest)(nil),           // 128: Anki.Vector.external_interface.DisconnectCubeRequest
	(*FlashCubeLightsRequest)(nil),          // 129: Anki.Vector.external_interface.FlashCubeLightsRequest
	(*ForgetPreferredCubeRequest)(nil),      // 130: Anki.Vector.external_interface.ForgetPreferredCubeRequest
	(*SetPreferredCubeRequest)(nil),         // 131: Anki.Vector.external_interface.SetPreferredCubeRequest
	(*SetCubeLightsRequest)(nil),            // 132: Anki.Vector.external_interface.SetCubeLightsRequest
	(*CubesAvailableRequest)(nil),           // 133: Anki.Vector.external_interface.CubesAvailableRequest
	(*CubesAvailableResponse)(nil),          // 134: Anki.Vector.external_interface.CubesAvailableResponse
	(*BatteryStateRequest)(nil),             // 135: Anki.Vector.external_interface.BatteryStateRequest
	(*BatteryStateResponse)(nil),            // 136: Anki.Vector.external_interface.BatteryStateResponse
	(*VersionStateRequest)(nil),             // 137: Anki.Vector.external_interface.VersionStateRequest
	(*VersionStateResponse)(nil),            // 138: Anki.Vector.external_interface.VersionStateResponse
	(*SayTextRequest)(nil),                  // 139: Anki.Vector.external_interface.SayTextRequest
	(*SayTextResponse)(nil),                 // 140: Anki.Vector.external_interface.SayTextResponse
	(*ControlRequest)(nil),                  // 141: Anki.Vector.external_interface.ControlRequest
	(*ControlRelease)(nil),                  // 142: Anki.Vector.external_interface.ControlRelease
	(*BehaviorControlResponse)(nil),         // 143: Anki.Vector.external_interface.BehaviorControlResponse
	(*ImageChunk)(nil),                      // 144: Anki.Vector.external_interface.ImageChunk
	(*EnableMarkerDetectionRequest)(nil),    // 145: Anki.Vector.external_interface.EnableMarkerDetectionRequest
	(*EnableMarkerDetectionResponse)(nil),   // 146: Anki.Vector.external_interface.EnableMarkerDetectionResponse
	(*EnableFaceDetectionRequest)(nil),      // 147: Anki.Vector.external_interface.EnableFaceDetectionRequest
	(*EnableFaceDetectionResponse)(nil),     // 148: Anki.Vector.external_interface.EnableFaceDetectionResponse
	(*EnableMotionDetectionRequest)(nil),    // 149: Anki.Vector.external_interface.EnableMotionDetectionRequest
	(*EnableMotionDetectionResponse)(nil),   // 150: Anki.Vector.external_interface.EnableMotionDetectionResponse
	(*EnableMirrorModeRequest)(nil),         // 151: Anki.Vector.external_interface.EnableMirrorModeRequest
	(*EnableMirrorModeResponse)(nil),        // 152: Anki.Vector.external_interface.EnableMirrorModeResponse
	(*EnableImageStreamingRequest)(nil),     // 153: Anki.Vector.external_interface.EnableImageStreamingRequest
	(*EnableImageStreamingResponse)(nil),    // 154: Anki.Vector.external_interface.EnableImageStreamingResponse
	(*IsImageStreamingEnabledRequest)(nil),  // 155: Anki.Vector.external_interface.IsImageStreamingEnabledRequest
	(*IsImageStreamingEnabledResponse)(nil), // 156: Anki.Vector.external_interface.IsImageStreamingEnabledResponse
	(*CheckCloudRequest)(nil),               // 157: Anki.Vector.external_interface.CheckCloudRequest
	(*CheckCloudResponse)(nil),              // 158: Anki.Vector.external_interface.CheckCloudResponse
	(*AudioSendModeRequest)(nil),            // 159: Anki.Vector.external_interface.AudioSendModeRequest
	(*AudioSendModeChanged)(nil),            // 160: Anki.Vector.external_interface.AudioSendModeChanged
	(*AudioChunk)(nil),                      // 161: Anki.Vector.external_interface.AudioChunk
	(*FeatureFlagRequest)(nil),              // 162: Anki.Vector.external_interface.FeatureFlagRequest
	(*FeatureFlagResponse)(nil),             // 163: Anki.Vector.external_interface.FeatureFlagResponse
	(*FeatureFlagListRequest)(nil),          // 164: Anki.Vector.external_interface.FeatureFlagListRequest
	(*FeatureFlagListResponse)(nil),         // 165: Anki.Vector.external_interface.FeatureFlagListResponse
	(*AppDisconnected)(nil),                 // 166: Anki.Vector.external_interface.AppDisconnected
	(*AlexaAuthStateRequest)(nil),           // 167: Anki.Vector.external_interface.AlexaAuthStateRequest
	(*AlexaAuthStateResponse)(nil),          // 168: Anki.Vector.external_interface.AlexaAuthStateResponse
	(*AlexaOptInRequest)(nil),               // 169: Anki.Vector.external_interface.AlexaOptInRequest
	(*AlexaOptInResponse)(nil),              // 170: Anki.Vector.external_interface.AlexaOptInResponse
	(*SetEyeColorRequest)(nil),              // 171: Anki.Vector.external_interface.SetEyeColorRequest
	(*SetEyeColorResponse)(nil),             // 172: Anki.Vector.external_interface.SetEyeColorResponse
	(*MasterVolumeRequest)(nil),             // 173: Anki.Vector.external_interface.MasterVolumeRequest
	(*MasterVolumeResponse)(nil),            // 174: Anki.Vector.external_interface.MasterVolumeResponse
	(*SetCameraSettingsRequest)(nil),        // 175: Anki.Vector.external_interface.SetCameraSettingsRequest
	(*SetCameraSettingsResponse)(nil),       // 176: Anki.Vector.external_interface.SetCameraSettingsResponse
	(*CameraConfigRequest)(nil),             // 177: Anki.Vector.external_interface.CameraConfigRequest
	(*CameraConfigResponse)(nil),            // 178: Anki.Vector.external_interface.CameraConfigResponse
	(*ExternalAudioStreamPrepare)(nil),      // 179: Anki.Vector.external_interface.ExternalAudioStreamPrepare
	(*ExternalAudioStreamChunk)(nil),        // 180: Anki.Vector.external_interface.ExternalAudioStreamChunk
	(*ExternalAudioStreamCancel)(nil),       // 181: Anki.Vector.external_interface.ExternalAudioStreamCancel
	(*ExternalAudioStreamComplete)(nil),     // 182: Anki.Vector.external_interface.ExternalAudioStreamComplete
	(*ExternalAudioStreamResponse)(nil),     // 183: Anki.Vector.external_interface.ExternalAudioStreamResponse
}
var file_shared_proto_depIdxs = []int32{
	0,   // 0: Anki.Vector.external_interface.ProtocolVersionResponse.result:type_name -> Anki.Vector.external_interface.ProtocolVersionResponse.Result
	12,  // 1: Anki.Vector.external_interface.ConnectionResponse.status:type_name -> Anki.Vector.external_interface.ResponseStatus
	13,  // 2: Anki.Vector.external_interface.Event.time_stamped_status:type_name -> Anki.Vector.external_interface.TimeStampedStatus
	14,  // 3: Anki.Vector.external_interface.Event.onboarding:type_name -> Anki.Vector.external_interface.Onboarding
	15,  // 4: Anki.Vector.external_interface.Event.wake_word:type_name -> Anki.Vector.external_interface.WakeWord
	16,  // 5: Anki.Vector.external_interface.Event.attention_transfer:type_name -> Anki.Vector.external_interface.AttentionTransfer
	17,  // 6: Anki.Vector.external_interface.Event.robot_observed_face:type_name -> Anki.Vector.external_interface.RobotObservedFace
	18,  // 7: Anki.Vector.external_interface.Event.robot_changed_observed_face_id:type_name -> Anki.Vector.external_interface.RobotChangedObservedFaceID
	19,  // 8: Anki.Vector.external_interface.Event.object_event:type_name -> Anki.Vector.external_interface.ObjectEvent
	20,  // 9: Anki.Vector.external_interface.Event.stimulation_info:type_name -> Anki.Vector.external_interface.StimulationInfo
	21,  // 10: Anki.Vector.external_interface.Event.photo_taken:type_name -> Anki.Vector.external_interface.PhotoTaken
	22,  // 11: Anki.Vector.external_interface.Event.robot_state:type_name -> Anki.Vector.external_interface.RobotState
	23,  // 12: Anki.Vector.external_interface.Event.cube_battery:type_name -> Anki.Vector.external_interface.CubeBattery
	24,  // 13: Anki.Vector.external_interface.Event.keep_alive:type_name -> Anki.Vector.external_interface.KeepAlivePing
	4,   // 14: Anki.Vector.external_interface.Event.connection_response:type_name -> Anki.Vector.external_interface.ConnectionResponse
	25,  // 15: Anki.Vector.external_interface.Event.jdocs_changed:type_name -> Anki.Vector.external_interface.JdocsChanged
	26,  // 16: Anki.Vector.external_interface.Event.alexa_auth_event:type_name -> Anki.Vector.external_interface.AlexaAuthEvent
	27,  // 17: Anki.Vector.external_interface.Event.mirror_mode_disabled:type_name -> Anki.Vector.external_interface.MirrorModeDisabled
	28,  // 18: Anki.Vector.external_interface.Event.vision_modes_auto_disabled:type_name -> Anki.Vector.external_interface.VisionModesAutoDisabled
	29,  // 19: Anki.Vector.external_interface.Event.check_update_status_response:type_name -> Anki.Vector.external_interface.CheckUpdateStatusResponse
	30,  // 20: Anki.Vector.external_interface.Event.user_intent:type_name -> Anki.Vector.external_interface.UserIntent
	31,  // 21: Anki.Vector.external_interface.Event.robot_observed_motion:type_name -> Anki.Vector.external_interface.RobotObservedMotion
	32,  // 22: Anki.Vector.external_interface.Event.robot_erased_enrolled_face:type_name -> Anki.Vector.external_interface.RobotErasedEnrolledFace
	33,  // 23: Anki.Vector.external_interface.Event.robot_renamed_enrolled_face:type_name -> Anki.Vector.external_interface.RobotRenamedEnrolledFace
	34,  // 24: Anki.Vector.external_interface.Event.camera_settings_update:type_name -> Anki.Vector.external_interface.CameraSettingsUpdate
	35,  // 25: Anki.Vector.external_interface.Event.unexpected_movement:type_name -> Anki.Vector.external_interface.UnexpectedMovement
	6,   // 26: Anki.Vector.external_interface.EventRequest.white_list:type_name -> Anki.Vector.external_interface.FilterList
	6,   // 27: Anki.Vector.external_interface.EventRequest.black_list:type_name -> Anki.Vector.external_interface.FilterList
	12,  // 28: Anki.Vector.external_interface.EventResponse.status:type_name -> Anki.Vector.external_interface.ResponseStatus
	5,   // 29: Anki.Vector.external_interface.EventResponse.event:type_name -> Anki.Vector.external_interface.Event
	12,  // 30: Anki.Vector.external_interface.UserAuthenticationResponse.status:type_name -> Anki.Vector.external_interface.ResponseStatus
	1,   // 31: Anki.Vector.external_interface.UserAuthenticationResponse.code:type_name -> Anki.Vector.external_interface.UserAuthenticationResponse.Code
	5,   // 32: Anki.Vector.external_interface.GatewayWrapper.event:type_name -> Anki.Vector.external_interface.Event
	36,  // 33: Anki.Vector.external_interface.GatewayWrapper.onboarding_state_request:type_name -> Anki.Vector.external_interface.OnboardingStateRequest
	37,  // 34: Anki.Vector.external_interface.GatewayWrapper.onboarding_state:type_name -> Anki.Vector.external_interface.OnboardingState
	38,  // 35: Anki.Vector.external_interface.GatewayWrapper.onboarding_skip_onboarding:type_name -> Anki.Vector.external_interface.OnboardingSkipOnboarding
	39,  // 36: Anki.Vector.external_interface.GatewayWrapper.onboarding_restart:type_name -> Anki.Vector.external_interface.OnboardingRestart
	40,  // 37: Anki.Vector.external_interface.GatewayWrapper.onboarding_complete_request:type_name -> Anki.Vector.external_interface.OnboardingCompleteRequest
	41,  // 38: Anki.Vector.external_interface.GatewayWrapper.onboarding_complete_response:type_name -> Anki.Vector.external_interface.OnboardingCompleteResponse
	42,  // 39: Anki.Vector.external_interface.GatewayWrapper.onboarding_wake_up_request:type_name -> Anki.Vector.external_interface.OnboardingWakeUpRequest
	43,  // 40: Anki.Vector.external_interface.GatewayWrapper.onboarding_wake_up_response:type_name -> Anki.Vector.external_interface.OnboardingWakeUpResponse
	44,  // 41: Anki.Vector.external_interface.GatewayWrapper.onboarding_wake_up_started_request:type_name -> Anki.Vector.external_interface.OnboardingWakeUpStartedRequest
	45,  // 42: Anki.Vector.external_interface.GatewayWrapper.onboarding_wake_up_started_response:type_name -> Anki.Vector.external_interface.OnboardingWakeUpStartedResponse
	46,  // 43: Anki.Vector.external_interface.GatewayWrapper.onboarding_set_phase_request:type_name -> Anki.Vector.external_interface.OnboardingSetPhaseRequest
	47,  // 44: Anki.Vector.external_interface.GatewayWrapper.onboarding_set_phase_response:type_name -> Anki.Vector.external_interface.OnboardingSetPhaseResponse
	48,  // 45: Anki.Vector.external_interface.GatewayWrapper.onboarding_phase_progress_request:type_name -> Anki.Vector.external_interface.OnboardingPhaseProgressRequest
	49,  // 46: Anki.Vector.external_interface.GatewayWrapper.onboarding_phase_progress_response:type_name -> Anki.Vector.external_interface.OnboardingPhaseProgressResponse
	50,  // 47: Anki.Vector.external_interface.GatewayWrapper.onboarding_charge_info_request:type_name -> Anki.Vector.external_interface.OnboardingChargeInfoRequest
	51,  // 48: Anki.Vector.external_interface.GatewayWrapper.onboarding_charge_info_response:type_name -> Anki.Vector.external_interface.OnboardingChargeInfoResponse
	52,  // 49: Anki.Vector.external_interface.GatewayWrapper.onboarding_mark_complete_and_exit:type_name -> Anki.Vector.external_interface.OnboardingMarkCompleteAndExit
	53,  // 50: Anki.Vector.external_interface.GatewayWrapper.latest_attention_transfer_request:type_name -> Anki.Vector.external_interface.LatestAttentionTransferRequest
	54,  // 51: Anki.Vector.external_interface.GatewayWrapper.latest_attention_transfer:type_name -> Anki.Vector.external_interface.LatestAttentionTransfer
	55,  // 52: Anki.Vector.external_interface.GatewayWrapper.photos_info_request:type_name -> Anki.Vector.external_interface.PhotosInfoRequest
	56,  // 53: Anki.Vector.external_interface.GatewayWrapper.photos_info_response:type_name -> Anki.Vector.external_interface.PhotosInfoResponse
	57,  // 54: Anki.Vector.external_interface.GatewayWrapper.photo_request:type_name -> Anki.Vector.external_interface.PhotoRequest
	58,  // 55: Anki.Vector.external_interface.GatewayWrapper.photo_path_message:type_name -> Anki.Vector.external_interface.PhotoPathMessage
	59,  // 56: Anki.Vector.external_interface.GatewayWrapper.thumbnail_request:type_name -> Anki.Vector.external_interface.ThumbnailRequest
	60,  // 57: Anki.Vector.external_interface.GatewayWrapper.thumbnail_path_message:type_name -> Anki.Vector.external_interface.ThumbnailPathMessage
	61,  // 58: Anki.Vector.external_interface.GatewayWrapper.delete_photo_request:type_name -> Anki.Vector.external_interface.DeletePhotoRequest
	62,  // 59: Anki.Vector.external_interface.GatewayWrapper.delete_photo_response:type_name -> Anki.Vector.external_interface.DeletePhotoResponse
	63,  // 60: Anki.Vector.external_interface.GatewayWrapper.pull_jdocs_request:type_name -> Anki.Vector.external_interface.PullJdocsRequest
	64,  // 61: Anki.Vector.external_interface.GatewayWrapper.pull_jdocs_response:type_name -> Anki.Vector.external_interface.PullJdocsResponse
	65,  // 62: Anki.Vector.external_interface.GatewayWrapper.update_settings_request:type_name -> Anki.Vector.external_interface.UpdateSettingsRequest
	66,  // 63: Anki.Vector.external_interface.GatewayWrapper.update_settings_response:type_name -> Anki.Vector.external_interface.UpdateSettingsResponse
	67,  // 64: Anki.Vector.external_interface.GatewayWrapper.update_account_settings_request:type_name -> Anki.Vector.external_interface.UpdateAccountSettingsRequest
	68,  // 65: Anki.Vector.external_interface.GatewayWrapper.update_account_settings_response:type_name -> Anki.Vector.external_interface.UpdateAccountSettingsResponse
	69,  // 66: Anki.Vector.external_interface.GatewayWrapper.update_user_entitlements_request:type_name -> Anki.Vector.external_interface.UpdateUserEntitlementsRequest
	70,  // 67: Anki.Vector.external_interface.GatewayWrapper.update_user_entitlements_response:type_name -> Anki.Vector.external_interface.UpdateUserEntitlementsResponse
	71,  // 68: Anki.Vector.external_interface.GatewayWrapper.drive_off_charger_request:type_name -> Anki.Vector.external_interface.DriveOffChargerRequest
	72,  // 69: Anki.Vector.external_interface.GatewayWrapper.drive_off_charger_response:type_name -> Anki.Vector.external_interface.DriveOffChargerResponse
	73,  // 70: Anki.Vector.external_interface.GatewayWrapper.drive_on_charger_request:type_name -> Anki.Vector.external_interface.DriveOnChargerRequest
	74,  // 71: Anki.Vector.external_interface.GatewayWrapper.drive_on_charger_response:type_name -> Anki.Vector.external_interface.DriveOnChargerResponse
	75,  // 72: Anki.Vector.external_interface.GatewayWrapper.find_faces_request:type_name -> Anki.Vector.external_interface.FindFacesRequest
	76,  // 73: Anki.Vector.external_interface.GatewayWrapper.find_faces_response:type_name -> Anki.Vector.external_interface.FindFacesResponse
	77,  // 74: Anki.Vector.external_interface.GatewayWrapper.look_around_in_place_request:type_name -> Anki.Vector.external_interface.LookAroundInPlaceRequest
	78,  // 75: Anki.Vector.external_interface.GatewayWrapper.look_around_in_place_response:type_name -> Anki.Vector.external_interface.LookAroundInPlaceResponse
	79,  // 76: Anki.Vector.external_interface.GatewayWrapper.roll_block_request:type_name -> Anki.Vector.external_interface.RollBlockRequest
	80,  // 77: Anki.Vector.external_interface.GatewayWrapper.roll_block_response:type_name -> Anki.Vector.external_interface.RollBlockResponse
	81,  // 78: Anki.Vector.external_interface.GatewayWrapper.enroll_face_request:type_name -> Anki.Vector.external_interface.EnrollFaceRequest
	82,  // 79: Anki.Vector.external_interface.GatewayWrapper.enroll_face_response:type_name -> Anki.Vector.external_interface.EnrollFaceResponse
	83,  // 80: Anki.Vector.external_interface.GatewayWrapper.set_face_to_enroll_request:type_name -> Anki.Vector.external_interface.SetFaceToEnrollRequest
	84,  // 81: Anki.Vector.external_interface.GatewayWrapper.set_face_to_enroll_response:type_name -> Anki.Vector.external_interface.SetFaceToEnrollResponse
	85,  // 82: Anki.Vector.external_interface.GatewayWrapper.cancel_behavior_request:type_name -> Anki.Vector.external_interface.CancelBehaviorRequest
	86,  // 83: Anki.Vector.external_interface.GatewayWrapper.cancel_behavior_response:type_name -> Anki.Vector.external_interface.CancelBehaviorResponse
	87,  // 84: Anki.Vector.external_interface.GatewayWrapper.turn_in_place_request:type_name -> Anki.Vector.external_interface.TurnInPlaceRequest
	88,  // 85: Anki.Vector.external_interface.GatewayWrapper.turn_in_place_response:type_name -> Anki.Vector.external_interface.TurnInPlaceResponse
	89,  // 86: Anki.Vector.external_interface.GatewayWrapper.drive_straight_request:type_name -> Anki.Vector.external_interface.DriveStraightRequest
	90,  // 87: Anki.Vector.external_interface.GatewayWrapper.drive_straight_response:type_name -> Anki.Vector.external_interface.DriveStraightResponse
	91,  // 88: Anki.Vector.external_interface.GatewayWrapper.set_head_angle_request:type_name -> Anki.Vector.external_interface.SetHeadAngleRequest
	92,  // 89: Anki.Vector.external_interface.GatewayWrapper.set_head_angle_response:type_name -> Anki.Vector.external_interface.SetHeadAngleResponse
	93,  // 90: Anki.Vector.external_interface.GatewayWrapper.set_lift_height_request:type_name -> Anki.Vector.external_interface.SetLiftHeightRequest
	94,  // 91: Anki.Vector.external_interface.GatewayWrapper.set_lift_height_response:type_name -> Anki.Vector.external_interface.SetLiftHeightResponse
	95,  // 92: Anki.Vector.external_interface.GatewayWrapper.play_animation_request:type_name -> Anki.Vector.external_interface.PlayAnimationRequest
	96,  // 93: Anki.Vector.external_interface.GatewayWrapper.play_animation_response:type_name -> Anki.Vector.external_interface.PlayAnimationResponse
	97,  // 94: Anki.Vector.external_interface.GatewayWrapper.go_to_pose_request:type_name -> Anki.Vector.external_interface.GoToPoseRequest
	98,  // 95: Anki.Vector.external_interface.GatewayWrapper.go_to_pose_response:type_name -> Anki.Vector.external_interface.GoToPoseResponse
	99,  // 96: Anki.Vector.external_interface.GatewayWrapper.dock_with_cube_request:type_name -> Anki.Vector.external_interface.DockWithCubeRequest
	100, // 97: Anki.Vector.external_interface.GatewayWrapper.dock_with_cube_response:type_name -> Anki.Vector.external_interface.DockWithCubeResponse
	101, // 98: Anki.Vector.external_interface.GatewayWrapper.drive_wheels_request:type_name -> Anki.Vector.external_interface.DriveWheelsRequest
	102, // 99: Anki.Vector.external_interface.GatewayWrapper.drive_wheels_response:type_name -> Anki.Vector.external_interface.DriveWheelsResponse
	103, // 100: Anki.Vector.external_interface.GatewayWrapper.list_animations_request:type_name -> Anki.Vector.external_interface.ListAnimationsRequest
	104, // 101: Anki.Vector.external_interface.GatewayWrapper.list_animations_response:type_name -> Anki.Vector.external_interface.ListAnimationsResponse
	105, // 102: Anki.Vector.external_interface.GatewayWrapper.play_animation_trigger_request:type_name -> Anki.Vector.external_interface.PlayAnimationTriggerRequest
	106, // 103: Anki.Vector.external_interface.GatewayWrapper.list_animation_triggers_request:type_name -> Anki.Vector.external_interface.ListAnimationTriggersRequest
	107, // 104: Anki.Vector.external_interface.GatewayWrapper.list_animation_triggers_response:type_name -> Anki.Vector.external_interface.ListAnimationTriggersResponse
	108, // 105: Anki.Vector.external_interface.GatewayWrapper.cancel_action_by_id_tag_request:type_name -> Anki.Vector.external_interface.CancelActionByIdTagRequest
	109, // 106: Anki.Vector.external_interface.GatewayWrapper.cancel_action_by_id_tag_response:type_name -> Anki.Vector.external_interface.CancelActionByIdTagResponse
	110, // 107: Anki.Vector.external_interface.GatewayWrapper.turn_towards_face_request:type_name -> Anki.Vector.external_interface.TurnTowardsFaceRequest
	111, // 108: Anki.Vector.external_interface.GatewayWrapper.turn_towards_face_response:type_name -> Anki.Vector.external_interface.TurnTowardsFaceResponse
	112, // 109: Anki.Vector.external_interface.GatewayWrapper.go_to_object_request:type_name -> Anki.Vector.external_interface.GoToObjectRequest
	113, // 110: Anki.Vector.external_interface.GatewayWrapper.go_to_object_response:type_name -> Anki.Vector.external_interface.GoToObjectResponse
	114, // 111: Anki.Vector.external_interface.GatewayWrapper.roll_object_request:type_name -> Anki.Vector.external_interface.RollObjectRequest
	115, // 112: Anki.Vector.external_interface.GatewayWrapper.roll_object_response:type_name -> Anki.Vector.external_interface.RollObjectResponse
	116, // 113: Anki.Vector.external_interface.GatewayWrapper.pop_a_wheelie_request:type_name -> Anki.Vector.external_interface.PopAWheelieRequest
	117, // 114: Anki.Vector.external_interface.GatewayWrapper.pop_a_wheelie_response:type_name -> Anki.Vector.external_interface.PopAWheelieResponse
	118, // 115: Anki.Vector.external_interface.GatewayWrapper.pickup_object_request:type_name -> Anki.Vector.external_interface.PickupObjectRequest
	119, // 116: Anki.Vector.external_interface.GatewayWrapper.pickup_object_response:type_name -> Anki.Vector.external_interface.PickupObjectResponse
	120, // 117: Anki.Vector.external_interface.GatewayWrapper.place_object_on_ground_here_request:type_name -> Anki.Vector.external_interface.PlaceObjectOnGroundHereRequest
	121, // 118: Anki.Vector.external_interface.GatewayWrapper.place_object_on_ground_here_response:type_name -> Anki.Vector.external_interface.PlaceObjectOnGroundHereResponse
	122, // 119: Anki.Vector.external_interface.GatewayWrapper.stop_all_motors_request:type_name -> Anki.Vector.external_interface.StopAllMotorsRequest
	123, // 120: Anki.Vector.external_interface.GatewayWrapper.stop_all_motors_response:type_name -> Anki.Vector.external_interface.StopAllMotorsResponse
	124, // 121: Anki.Vector.external_interface.GatewayWrapper.robot_history_request:type_name -> Anki.Vector.external_interface.RobotHistoryRequest
	125, // 122: Anki.Vector.external_interface.GatewayWrapper.robot_history_response:type_name -> Anki.Vector.external_interface.RobotHistoryResponse
	126, // 123: Anki.Vector.external_interface.GatewayWrapper.connect_cube_request:type_name -> Anki.Vector.external_interface.ConnectCubeRequest
	127, // 124: Anki.Vector.external_interface.GatewayWrapper.connect_cube_response:type_name -> Anki.Vector.external_interface.ConnectCubeResponse
	128, // 125: Anki.Vector.external_interface.GatewayWrapper.disconnect_cube_request:type_name -> Anki.Vector.external_interface.DisconnectCubeRequest
	129, // 126: Anki.Vector.external_interface.GatewayWrapper.flash_cube_lights_request:type_name -> Anki.Vector.external_interface.FlashCubeLightsRequest
	130, // 127: Anki.Vector.external_interface.GatewayWrapper.forget_preferred_cube_request:type_name -> Anki.Vector.external_interface.ForgetPreferredCubeRequest
	131, // 128: Anki.Vector.external_interface.GatewayWrapper.set_preferred_cube_request:type_name -> Anki.Vector.external_interface.SetPreferredCubeRequest
	132, // 129: Anki.Vector.external_interface.GatewayWrapper.set_cube_lights_request:type_name -> Anki.Vector.external_interface.SetCubeLightsRequest
	133, // 130: Anki.Vector.external_interface.GatewayWrapper.cubes_available_request:type_name -> Anki.Vector.external_interface.CubesAvailableRequest
	134, // 131: Anki.Vector.external_interface.GatewayWrapper.cubes_available_response:type_name -> Anki.Vector.external_interface.CubesAvailableResponse
	135, // 132: Anki.Vector.external_interface.GatewayWrapper.battery_state_request:type_name -> Anki.Vector.external_interface.BatteryStateRequest
	136, // 133: Anki.Vector.external_interface.GatewayWrapper.battery_state_response:type_name -> Anki.Vector.external_interface.BatteryStateResponse
	137, // 134: Anki.Vector.external_interface.GatewayWrapper.version_state_request:type_name -> Anki.Vector.external_interface.VersionStateRequest
	138, // 135: Anki.Vector.external_interface.GatewayWrapper.version_state_response:type_name -> Anki.Vector.external_interface.VersionStateResponse
	139, // 136: Anki.Vector.external_interface.GatewayWrapper.say_text_request:type_name -> Anki.Vector.external_interface.SayTextRequest
	140, // 137: Anki.Vector.external_interface.GatewayWrapper.say_text_response:type_name -> Anki.Vector.external_interface.SayTextResponse
	141, // 138: Anki.Vector.external_interface.GatewayWrapper.control_request:type_name -> Anki.Vector.external_interface.ControlRequest
	142, // 139: Anki.Vector.external_interface.GatewayWrapper.control_release:type_name -> Anki.Vector.external_interface.ControlRelease
	143, // 140: Anki.Vector.external_interface.GatewayWrapper.behavior_control_response:type_name -> Anki.Vector.external_interface.BehaviorControlResponse
	144, // 141: Anki.Vector.external_interface.GatewayWrapper.image_chunk:type_name -> Anki.Vector.external_interface.ImageChunk
	145, // 142: Anki.Vector.external_interface.GatewayWrapper.enable_marker_detection_request:type_name -> Anki.Vector.external_interface.EnableMarkerDetectionRequest
	146, // 143: Anki.Vector.external_interface.GatewayWrapper.enable_marker_detection_response:type_name -> Anki.Vector.external_interface.EnableMarkerDetectionResponse
	147, // 144: Anki.Vector.external_interface.GatewayWrapper.enable_face_detection_request:type_name -> Anki.Vector.external_interface.EnableFaceDetectionRequest
	148, // 145: Anki.Vector.external_interface.GatewayWrapper.enable_face_detection_response:type_name -> Anki.Vector.external_interface.EnableFaceDetectionResponse
	149, // 146: Anki.Vector.external_interface.GatewayWrapper.enable_motion_detection_request:type_name -> Anki.Vector.external_interface.EnableMotionDetectionRequest
	150, // 147: Anki.Vector.external_interface.GatewayWrapper.enable_motion_detection_response:type_name -> Anki.Vector.external_interface.EnableMotionDetectionResponse
	151, // 148: Anki.Vector.external_interface.GatewayWrapper.enable_mirror_mode_request:type_name -> Anki.Vector.external_interface.EnableMirrorModeRequest
	152, // 149: Anki.Vector.external_interface.GatewayWrapper.enable_mirror_mode_response:type_name -> Anki.Vector.external_interface.EnableMirrorModeResponse
	153, // 150: Anki.Vector.external_interface.GatewayWrapper.enable_image_streaming_request:type_name -> Anki.Vector.external_interface.EnableImageStreamingRequest
	154, // 151: Anki.Vector.external_interface.GatewayWrapper.enable_image_streaming_response:type_name -> Anki.Vector.external_interface.EnableImageStreamingResponse
	155, // 152: Anki.Vector.external_interface.GatewayWrapper.is_image_streaming_enabled_request:type_name -> Anki.Vector.external_interface.IsImageStreamingEnabledRequest
	156, // 153: Anki.Vector.external_interface.GatewayWrapper.is_image_streaming_enabled_response:type_name -> Anki.Vector.external_interface.IsImageStreamingEnabledResponse
	157, // 154: Anki.Vector.external_interface.GatewayWrapper.check_cloud_request:type_name -> Anki.Vector.external_interface.CheckCloudRequest
	158, // 155: Anki.Vector.external_interface.GatewayWrapper.check_cloud_response:type_name -> Anki.Vector.external_interface.CheckCloudResponse
	159, // 156: Anki.Vector.external_interface.GatewayWrapper.audio_send_mode_request:type_name -> Anki.Vector.external_interface.AudioSendModeRequest
	160, // 157: Anki.Vector.external_interface.GatewayWrapper.audio_send_mode_changed:type_name -> Anki.Vector.external_interface.AudioSendModeChanged
	161, // 158: Anki.Vector.external_interface.GatewayWrapper.audio_chunk:type_name -> Anki.Vector.external_interface.AudioChunk
	162, // 159: Anki.Vector.external_interface.GatewayWrapper.feature_flag_request:type_name -> Anki.Vector.external_interface.FeatureFlagRequest
	163, // 160: Anki.Vector.external_interface.GatewayWrapper.feature_flag_response:type_name -> Anki.Vector.external_interface.FeatureFlagResponse
	164, // 161: Anki.Vector.external_interface.GatewayWrapper.feature_flag_list_request:type_name -> Anki.Vector.external_interface.FeatureFlagListRequest
	165, // 162: Anki.Vector.external_interface.GatewayWrapper.feature_flag_list_response:type_name -> Anki.Vector.external_interface.FeatureFlagListResponse
	166, // 163: Anki.Vector.external_interface.GatewayWrapper.app_disconnected:type_name -> Anki.Vector.external_interface.AppDisconnected
	167, // 164: Anki.Vector.external_interface.GatewayWrapper.alexa_auth_state_request:type_name -> Anki.Vector.external_interface.AlexaAuthStateRequest
	168, // 165: Anki.Vector.external_interface.GatewayWrapper.alexa_auth_state_response:type_name -> Anki.Vector.external_interface.AlexaAuthStateResponse
	169, // 166: Anki.Vector.external_interface.GatewayWrapper.alexa_opt_in_request:type_name -> Anki.Vector.external_interface.AlexaOptInRequest
	170, // 167: Anki.Vector.external_interface.GatewayWrapper.alexa_opt_in_response:type_name -> Anki.Vector.external_interface.AlexaOptInResponse
	171, // 168: Anki.Vector.external_interface.GatewayWrapper.set_eye_color_request:type_name -> Anki.Vector.external_interface.SetEyeColorRequest
	172, // 169: Anki.Vector.external_interface.GatewayWrapper.set_eye_color_response:type_name -> Anki.Vector.external_interface.SetEyeColorResponse
	173, // 170: Anki.Vector.external_interface.GatewayWrapper.master_volume_request:type_name -> Anki.Vector.external_interface.MasterVolumeRequest
	174, // 171: Anki.Vector.external_interface.GatewayWrapper.master_volume_response:type_name -> Anki.Vector.external_interface.MasterVolumeResponse
	175, // 172: Anki.Vector.external_interface.GatewayWrapper.set_camera_settings_request:type_name -> Anki.Vector.external_interface.SetCameraSettingsRequest
	176, // 173: Anki.Vector.external_interface.GatewayWrapper.set_camera_settings_response:type_name -> Anki.Vector.external_interface.SetCameraSettingsResponse
	177, // 174: Anki.Vector.external_interface.GatewayWrapper.camera_config_request:type_name -> Anki.Vector.external_interface.CameraConfigRequest
	178, // 175: Anki.Vector.external_interface.GatewayWrapper.camera_config_response:type_name -> Anki.Vector.external_interface.CameraConfigResponse
	179, // 176: Anki.Vector.external_interface.GatewayWrapper.external_audio_stream_prepare:type_name -> Anki.Vector.external_interface.ExternalAudioStreamPrepare
	180, // 177: Anki.Vector.external_interface.GatewayWrapper.external_audio_stream_chunk:type_name -> Anki.Vector.external_interface.ExternalAudioStreamChunk
	181, // 178: Anki.Vector.external_interface.GatewayWrapper.external_audio_stream_cancel:type_name -> Anki.Vector.external_interface.ExternalAudioStreamCancel
	182, // 179: Anki.Vector.external_interface.GatewayWrapper.external_audio_stream_complete:type_name -> Anki.Vector.external_interface.ExternalAudioStreamComplete
	183, // 180: Anki.Vector.external_interface.GatewayWrapper.external_audio_stream_response:type_name -> Anki.Vector.external_interface.ExternalAudioStreamResponse
	181, // [181:181] is the sub-list for method output_type
	181, // [181:181] is the sub-list for method input_type
	181, // [181:181] is the sub-list for extension type_name
	181, // [181:181] is the sub-list for extension extendee
	0,   // [0:181] is the sub-list for field type_name
}

func init() { file_shared_proto_init() }
func file_shared_proto_init() {
	if File_shared_proto != nil {
		return
	}
	file_behavior_proto_init()
	file_cube_proto_init()
	file_alexa_proto_init()
	file_messages_proto_init()
	file_settings_proto_init()
	file_extensions_proto_init()
	file_response_status_proto_init()
	file_shared_proto_msgTypes[3].OneofWrappers = []any{
		(*Event_TimeStampedStatus)(nil),
		(*Event_Onboarding)(nil),
		(*Event_WakeWord)(nil),
		(*Event_AttentionTransfer)(nil),
		(*Event_RobotObservedFace)(nil),
		(*Event_RobotChangedObservedFaceId)(nil),
		(*Event_ObjectEvent)(nil),
		(*Event_StimulationInfo)(nil),
		(*Event_PhotoTaken)(nil),
		(*Event_RobotState)(nil),
		(*Event_CubeBattery)(nil),
		(*Event_KeepAlive)(nil),
		(*Event_ConnectionResponse)(nil),
		(*Event_JdocsChanged)(nil),
		(*Event_AlexaAuthEvent)(nil),
		(*Event_MirrorModeDisabled)(nil),
		(*Event_VisionModesAutoDisabled)(nil),
		(*Event_CheckUpdateStatusResponse)(nil),
		(*Event_UserIntent)(nil),
		(*Event_RobotObservedMotion)(nil),
		(*Event_RobotErasedEnrolledFace)(nil),
		(*Event_RobotRenamedEnrolledFace)(nil),
		(*Event_CameraSettingsUpdate)(nil),
		(*Event_UnexpectedMovement)(nil),
	}
	file_shared_proto_msgTypes[5].OneofWrappers = []any{
		(*EventRequest_WhiteList)(nil),
		(*EventRequest_BlackList)(nil),
	}
	file_shared_proto_msgTypes[9].OneofWrappers = []any{
		(*GatewayWrapper_Event)(nil),
		(*GatewayWrapper_OnboardingStateRequest)(nil),
		(*GatewayWrapper_OnboardingState)(nil),
		(*GatewayWrapper_OnboardingSkipOnboarding)(nil),
		(*GatewayWrapper_OnboardingRestart)(nil),
		(*GatewayWrapper_OnboardingCompleteRequest)(nil),
		(*GatewayWrapper_OnboardingCompleteResponse)(nil),
		(*GatewayWrapper_OnboardingWakeUpRequest)(nil),
		(*GatewayWrapper_OnboardingWakeUpResponse)(nil),
		(*GatewayWrapper_OnboardingWakeUpStartedRequest)(nil),
		(*GatewayWrapper_OnboardingWakeUpStartedResponse)(nil),
		(*GatewayWrapper_OnboardingSetPhaseRequest)(nil),
		(*GatewayWrapper_OnboardingSetPhaseResponse)(nil),
		(*GatewayWrapper_OnboardingPhaseProgressRequest)(nil),
		(*GatewayWrapper_OnboardingPhaseProgressResponse)(nil),
		(*GatewayWrapper_OnboardingChargeInfoRequest)(nil),
		(*GatewayWrapper_OnboardingChargeInfoResponse)(nil),
		(*GatewayWrapper_OnboardingMarkCompleteAndExit)(nil),
		(*GatewayWrapper_LatestAttentionTransferRequest)(nil),
		(*GatewayWrapper_LatestAttentionTransfer)(nil),
		(*GatewayWrapper_PhotosInfoRequest)(nil),
		(*GatewayWrapper_PhotosInfoResponse)(nil),
		(*GatewayWrapper_PhotoRequest)(nil),
		(*GatewayWrapper_PhotoPathMessage)(nil),
		(*GatewayWrapper_ThumbnailRequest)(nil),
		(*GatewayWrapper_ThumbnailPathMessage)(nil),
		(*GatewayWrapper_DeletePhotoRequest)(nil),
		(*GatewayWrapper_DeletePhotoResponse)(nil),
		(*GatewayWrapper_PullJdocsRequest)(nil),
		(*GatewayWrapper_PullJdocsResponse)(nil),
		(*GatewayWrapper_UpdateSettingsRequest)(nil),
		(*GatewayWrapper_UpdateSettingsResponse)(nil),
		(*GatewayWrapper_UpdateAccountSettingsRequest)(nil),
		(*GatewayWrapper_UpdateAccountSettingsResponse)(nil),
		(*GatewayWrapper_UpdateUserEntitlementsRequest)(nil),
		(*GatewayWrapper_UpdateUserEntitlementsResponse)(nil),
		(*GatewayWrapper_DriveOffChargerRequest)(nil),
		(*GatewayWrapper_DriveOffChargerResponse)(nil),
		(*GatewayWrapper_DriveOnChargerRequest)(nil),
		(*GatewayWrapper_DriveOnChargerResponse)(nil),
		(*GatewayWrapper_FindFacesRequest)(nil),
		(*GatewayWrapper_FindFacesResponse)(nil),
		(*GatewayWrapper_LookAroundInPlaceRequest)(nil),
		(*GatewayWrapper_LookAroundInPlaceResponse)(nil),
		(*GatewayWrapper_RollBlockRequest)(nil),
		(*GatewayWrapper_RollBlockResponse)(nil),
		(*GatewayWrapper_EnrollFaceRequest)(nil),
		(*GatewayWrapper_EnrollFaceResponse)(nil),
		(*GatewayWrapper_SetFaceToEnrollRequest)(nil),
		(*GatewayWrapper_SetFaceToEnrollResponse)(nil),
		(*GatewayWrapper_CancelBehaviorRequest)(nil),
		(*GatewayWrapper_CancelBehaviorResponse)(nil),
		(*GatewayWrapper_TurnInPlaceRequest)(nil),
		(*GatewayWrapper_TurnInPlaceResponse)(nil),
		(*GatewayWrapper_DriveStraightRequest)(nil),
		(*GatewayWrapper_DriveStraightResponse)(nil),
		(*GatewayWrapper_SetHeadAngleRequest)(nil),
		(*GatewayWrapper_SetHeadAngleResponse)(nil),
		(*GatewayWrapper_SetLiftHeightRequest)(nil),
		(*GatewayWrapper_SetLiftHeightResponse)(nil),
		(*GatewayWrapper_PlayAnimationRequest)(nil),
		(*GatewayWrapper_PlayAnimationResponse)(nil),
		(*GatewayWrapper_GoToPoseRequest)(nil),
		(*GatewayWrapper_GoToPoseResponse)(nil),
		(*GatewayWrapper_DockWithCubeRequest)(nil),
		(*GatewayWrapper_DockWithCubeResponse)(nil),
		(*GatewayWrapper_DriveWheelsRequest)(nil),
		(*GatewayWrapper_DriveWheelsResponse)(nil),
		(*GatewayWrapper_ListAnimationsRequest)(nil),
		(*GatewayWrapper_ListAnimationsResponse)(nil),
		(*GatewayWrapper_PlayAnimationTriggerRequest)(nil),
		(*GatewayWrapper_ListAnimationTriggersRequest)(nil),
		(*GatewayWrapper_ListAnimationTriggersResponse)(nil),
		(*GatewayWrapper_CancelActionByIdTagRequest)(nil),
		(*GatewayWrapper_CancelActionByIdTagResponse)(nil),
		(*GatewayWrapper_TurnTowardsFaceRequest)(nil),
		(*GatewayWrapper_TurnTowardsFaceResponse)(nil),
		(*GatewayWrapper_GoToObjectRequest)(nil),
		(*GatewayWrapper_GoToObjectResponse)(nil),
		(*GatewayWrapper_RollObjectRequest)(nil),
		(*GatewayWrapper_RollObjectResponse)(nil),
		(*GatewayWrapper_PopAWheelieRequest)(nil),
		(*GatewayWrapper_PopAWheelieResponse)(nil),
		(*GatewayWrapper_PickupObjectRequest)(nil),
		(*GatewayWrapper_PickupObjectResponse)(nil),
		(*GatewayWrapper_PlaceObjectOnGroundHereRequest)(nil),
		(*GatewayWrapper_PlaceObjectOnGroundHereResponse)(nil),
		(*GatewayWrapper_StopAllMotorsRequest)(nil),
		(*GatewayWrapper_StopAllMotorsResponse)(nil),
		(*GatewayWrapper_RobotHistoryRequest)(nil),
		(*GatewayWrapper_RobotHistoryResponse)(nil),
		(*GatewayWrapper_ConnectCubeRequest)(nil),
		(*GatewayWrapper_ConnectCubeResponse)(nil),
		(*GatewayWrapper_DisconnectCubeRequest)(nil),
		(*GatewayWrapper_FlashCubeLightsRequest)(nil),
		(*GatewayWrapper_ForgetPreferredCubeRequest)(nil),
		(*GatewayWrapper_SetPreferredCubeRequest)(nil),
		(*GatewayWrapper_SetCubeLightsRequest)(nil),
		(*GatewayWrapper_CubesAvailableRequest)(nil),
		(*GatewayWrapper_CubesAvailableResponse)(nil),
		(*GatewayWrapper_BatteryStateRequest)(nil),
		(*GatewayWrapper_BatteryStateResponse)(nil),
		(*GatewayWrapper_VersionStateRequest)(nil),
		(*GatewayWrapper_VersionStateResponse)(nil),
		(*GatewayWrapper_SayTextRequest)(nil),
		(*GatewayWrapper_SayTextResponse)(nil),
		(*GatewayWrapper_ControlRequest)(nil),
		(*GatewayWrapper_ControlRelease)(nil),
		(*GatewayWrapper_BehaviorControlResponse)(nil),
		(*GatewayWrapper_ImageChunk)(nil),
		(*GatewayWrapper_EnableMarkerDetectionRequest)(nil),
		(*GatewayWrapper_EnableMarkerDetectionResponse)(nil),
		(*GatewayWrapper_EnableFaceDetectionRequest)(nil),
		(*GatewayWrapper_EnableFaceDetectionResponse)(nil),
		(*GatewayWrapper_EnableMotionDetectionRequest)(nil),
		(*GatewayWrapper_EnableMotionDetectionResponse)(nil),
		(*GatewayWrapper_EnableMirrorModeRequest)(nil),
		(*GatewayWrapper_EnableMirrorModeResponse)(nil),
		(*GatewayWrapper_EnableImageStreamingRequest)(nil),
		(*GatewayWrapper_EnableImageStreamingResponse)(nil),
		(*GatewayWrapper_IsImageStreamingEnabledRequest)(nil),
		(*GatewayWrapper_IsImageStreamingEnabledResponse)(nil),
		(*GatewayWrapper_CheckCloudRequest)(nil),
		(*GatewayWrapper_CheckCloudResponse)(nil),
		(*GatewayWrapper_AudioSendModeRequest)(nil),
		(*GatewayWrapper_AudioSendModeChanged)(nil),
		(*GatewayWrapper_AudioChunk)(nil),
		(*GatewayWrapper_FeatureFlagRequest)(nil),
		(*GatewayWrapper_FeatureFlagResponse)(nil),
		(*GatewayWrapper_FeatureFlagListRequest)(nil),
		(*GatewayWrapper_FeatureFlagListResponse)(nil),
		(*GatewayWrapper_AppDisconnected)(nil),
		(*GatewayWrapper_AlexaAuthStateRequest)(nil),
		(*GatewayWrapper_AlexaAuthStateResponse)(nil),
		(*GatewayWrapper_AlexaOptInRequest)(nil),
		(*GatewayWrapper_AlexaOptInResponse)(nil),
		(*GatewayWrapper_SetEyeColorRequest)(nil),
		(*GatewayWrapper_SetEyeColorResponse)(nil),
		(*GatewayWrapper_MasterVolumeRequest)(nil),
		(*GatewayWrapper_MasterVolumeResponse)(nil),
		(*GatewayWrapper_SetCameraSettingsRequest)(nil),
		(*GatewayWrapper_SetCameraSettingsResponse)(nil),
		(*GatewayWrapper_CameraConfigRequest)(nil),
		(*GatewayWrapper_CameraConfigResponse)(nil),
		(*GatewayWrapper_ExternalAudioStreamPrepare)(nil),
		(*GatewayWrapper_ExternalAudioStreamChunk)(nil),
		(*GatewayWrapper_ExternalAudioStreamCancel)(nil),
		(*GatewayWrapper_ExternalAudioStreamComplete)(nil),
		(*GatewayWrapper_ExternalAudioStreamResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_shared_proto_rawDesc), len(file_shared_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_proto_goTypes,
		DependencyIndexes: file_shared_proto_depIdxs,
		EnumInfos:         file_shared_proto_enumTypes,
		MessageInfos:      file_shared_proto_msgTypes,
	}.Build()
	File_shared_proto = out.File
	file_shared_proto_goTypes = nil
	file_shared_proto_depIdxs = nil
}
