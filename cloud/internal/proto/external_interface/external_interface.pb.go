// Copyright (c) 2018 Anki, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License in the file LICENSE.txt or at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// External interface for robot <-> app and robot <-> sdk communication

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: external_interface.proto

package Anki_Vector_external_interface

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// <p>The valid versions of the protocol.</p>
// <p>Protocol versions are updated when messages change significantly:
// new ones are added and removed, fields deprecated, etc.</p>
// <p>The goal is to support as many old versions as possible, only
// bumping the minimum when there is no way to handle a prior version.</p>
type ProtocolVersion int32

const (
	ProtocolVersion_PROTOCOL_VERSION_UNKNOWN ProtocolVersion = 0 // Required zero value for enums
	ProtocolVersion_PROTOCOL_VERSION_MINIMUM ProtocolVersion = 0 // Minimum supported version
	ProtocolVersion_PROTOCOL_VERSION_CURRENT ProtocolVersion = 5 // Current version (incremented on 2019.03.12 for streaming update status support.)
)

// Enum value maps for ProtocolVersion.
var (
	ProtocolVersion_name = map[int32]string{
		0: "PROTOCOL_VERSION_UNKNOWN",
		// Duplicate value: 0: "PROTOCOL_VERSION_MINIMUM",
		5: "PROTOCOL_VERSION_CURRENT",
	}
	ProtocolVersion_value = map[string]int32{
		"PROTOCOL_VERSION_UNKNOWN": 0,
		"PROTOCOL_VERSION_MINIMUM": 0,
		"PROTOCOL_VERSION_CURRENT": 5,
	}
)

func (x ProtocolVersion) Enum() *ProtocolVersion {
	p := new(ProtocolVersion)
	*p = x
	return p
}

func (x ProtocolVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtocolVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_external_interface_proto_enumTypes[0].Descriptor()
}

func (ProtocolVersion) Type() protoreflect.EnumType {
	return &file_external_interface_proto_enumTypes[0]
}

func (x ProtocolVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtocolVersion.Descriptor instead.
func (ProtocolVersion) EnumDescriptor() ([]byte, []int) {
	return file_external_interface_proto_rawDescGZIP(), []int{0}
}

var File_external_interface_proto protoreflect.FileDescriptor

const file_external_interface_proto_rawDesc = "" +
	"\n" +
	"\x18external_interface.proto\x12\x1eAnki.Vector.external_interface\x1a\x1cgoogle/api/annotations.proto\x1a\valexa.proto\x1a\x0ebehavior.proto\x1a\n" +
	"cube.proto\x1a\x0emessages.proto\x1a\rnav_map.proto\x1a\x0esettings.proto\x1a\fshared.proto*o\n" +
	"\x0fProtocolVersion\x12\x1c\n" +
	"\x18PROTOCOL_VERSION_UNKNOWN\x10\x00\x12\x1c\n" +
	"\x18PROTOCOL_VERSION_MINIMUM\x10\x00\x12\x1c\n" +
	"\x18PROTOCOL_VERSION_CURRENT\x10\x05\x1a\x02\x10\x012\x9ep\n" +
	"\x11ExternalInterface\x12\xa3\x01\n" +
	"\x0fProtocolVersion\x126.Anki.Vector.external_interface.ProtocolVersionRequest\x1a7.Anki.Vector.external_interface.ProtocolVersionResponse\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/v1/protocol_version\x12\xab\x01\n" +
	"\x11SDKInitialization\x128.Anki.Vector.external_interface.SDKInitializationRequest\x1a9.Anki.Vector.external_interface.SDKInitializationResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/sdk_initialization\x12x\n" +
	"\vDriveWheels\x122.Anki.Vector.external_interface.DriveWheelsRequest\x1a3.Anki.Vector.external_interface.DriveWheelsResponse\"\x00\x12\x8c\x01\n" +
	"\x14PlayAnimationTrigger\x12;.Anki.Vector.external_interface.PlayAnimationTriggerRequest\x1a5.Anki.Vector.external_interface.PlayAnimationResponse\"\x00\x12~\n" +
	"\rPlayAnimation\x124.Anki.Vector.external_interface.PlayAnimationRequest\x1a5.Anki.Vector.external_interface.PlayAnimationResponse\"\x00\x12\x9f\x01\n" +
	"\x0eListAnimations\x125.Anki.Vector.external_interface.ListAnimationsRequest\x1a6.Anki.Vector.external_interface.ListAnimationsResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/list_animations\x12\xbc\x01\n" +
	"\x15ListAnimationTriggers\x12<.Anki.Vector.external_interface.ListAnimationTriggersRequest\x1a=.Anki.Vector.external_interface.ListAnimationTriggersResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v1/list_animation_triggers\x12o\n" +
	"\bMoveHead\x12/.Anki.Vector.external_interface.MoveHeadRequest\x1a0.Anki.Vector.external_interface.MoveHeadResponse\"\x00\x12o\n" +
	"\bMoveLift\x12/.Anki.Vector.external_interface.MoveLiftRequest\x1a0.Anki.Vector.external_interface.MoveLiftResponse\"\x00\x12~\n" +
	"\rStopAllMotors\x124.Anki.Vector.external_interface.StopAllMotorsRequest\x1a5.Anki.Vector.external_interface.StopAllMotorsResponse\"\x00\x12\xb5\x01\n" +
	"\x13DisplayFaceImageRGB\x12:.Anki.Vector.external_interface.DisplayFaceImageRGBRequest\x1a;.Anki.Vector.external_interface.DisplayFaceImageRGBResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1/display_face_image_rgb\x12\x9d\x01\n" +
	"\vEventStream\x12,.Anki.Vector.external_interface.EventRequest\x1a-.Anki.Vector.external_interface.EventResponse\"/\x82\xd3\xe4\x93\x02):\x01*Z\x12\x12\x10/v1/event_stream\"\x10/v1/event_stream0\x01\x12\x9c\x01\n" +
	"\x1bExternalAudioStreamPlayback\x12:.Anki.Vector.external_interface.ExternalAudioStreamRequest\x1a;.Anki.Vector.external_interface.ExternalAudioStreamResponse\"\x00(\x010\x01\x12\x88\x01\n" +
	"\x0fBehaviorControl\x126.Anki.Vector.external_interface.BehaviorControlRequest\x1a7.Anki.Vector.external_interface.BehaviorControlResponse\"\x00(\x010\x01\x12\xb8\x01\n" +
	"\x14CancelFaceEnrollment\x12;.Anki.Vector.external_interface.CancelFaceEnrollmentRequest\x1a<.Anki.Vector.external_interface.CancelFaceEnrollmentResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1/cancel_face_enrollment\x12\xb8\x01\n" +
	"\x14RequestEnrolledNames\x12;.Anki.Vector.external_interface.RequestEnrolledNamesRequest\x1a<.Anki.Vector.external_interface.RequestEnrolledNamesResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1/request_enrolled_names\x12\xc2\x01\n" +
	"\x16UpdateEnrolledFaceByID\x12=.Anki.Vector.external_interface.UpdateEnrolledFaceByIDRequest\x1a>.Anki.Vector.external_interface.UpdateEnrolledFaceByIDResponse\")\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/v1/update_enrolled_face_by_id\x12\xbe\x01\n" +
	"\x15EraseEnrolledFaceByID\x12<.Anki.Vector.external_interface.EraseEnrolledFaceByIDRequest\x1a=.Anki.Vector.external_interface.EraseEnrolledFaceByIDResponse\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/v1/erase_enrolled_face_by_id\x12\xbd\x01\n" +
	"\x15EraseAllEnrolledFaces\x12<.Anki.Vector.external_interface.EraseAllEnrolledFacesRequest\x1a=.Anki.Vector.external_interface.EraseAllEnrolledFacesResponse\"'\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/v1/erase_all_enrolled_faces\x12\xa5\x01\n" +
	"\x0fSetFaceToEnroll\x126.Anki.Vector.external_interface.SetFaceToEnrollRequest\x1a7.Anki.Vector.external_interface.SetFaceToEnrollResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/set_face_to_enroll\x12\x8f\x01\n" +
	"\n" +
	"EnrollFace\x121.Anki.Vector.external_interface.EnrollFaceRequest\x1a2.Anki.Vector.external_interface.EnrollFaceResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/enroll_face\x12\xbc\x01\n" +
	"\x15EnableMarkerDetection\x12<.Anki.Vector.external_interface.EnableMarkerDetectionRequest\x1a=.Anki.Vector.external_interface.EnableMarkerDetectionResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v1/enable_marker_detection\x12\xb4\x01\n" +
	"\x13EnableFaceDetection\x12:.Anki.Vector.external_interface.EnableFaceDetectionRequest\x1a;.Anki.Vector.external_interface.EnableFaceDetectionResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/v1/enable_face_detection\x12\xbc\x01\n" +
	"\x15EnableMotionDetection\x12<.Anki.Vector.external_interface.EnableMotionDetectionRequest\x1a=.Anki.Vector.external_interface.EnableMotionDetectionResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v1/enable_motion_detection\x12\xa8\x01\n" +
	"\x10EnableMirrorMode\x127.Anki.Vector.external_interface.EnableMirrorModeRequest\x1a8.Anki.Vector.external_interface.EnableMirrorModeResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/enable_mirror_mode\x12\xb8\x01\n" +
	"\x14EnableImageStreaming\x12;.Anki.Vector.external_interface.EnableImageStreamingRequest\x1a<.Anki.Vector.external_interface.EnableImageStreamingResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1/enable_image_streaming\x12\xc5\x01\n" +
	"\x17IsImageStreamingEnabled\x12>.Anki.Vector.external_interface.IsImageStreamingEnabledRequest\x1a?.Anki.Vector.external_interface.IsImageStreamingEnabledResponse\")\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/v1/is_image_streaming_enabled\x12\xb6\x01\n" +
	"\x13CancelActionByIdTag\x12:.Anki.Vector.external_interface.CancelActionByIdTagRequest\x1a;.Anki.Vector.external_interface.CancelActionByIdTagResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v1/cancel_action_by_id_tag\x12\x9f\x01\n" +
	"\x0eCancelBehavior\x125.Anki.Vector.external_interface.CancelBehaviorRequest\x1a6.Anki.Vector.external_interface.CancelBehaviorResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/cancel_behavior\x12\x88\x01\n" +
	"\bGoToPose\x12/.Anki.Vector.external_interface.GoToPoseRequest\x1a0.Anki.Vector.external_interface.GoToPoseResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/go_to_pose\x12\x98\x01\n" +
	"\fDockWithCube\x123.Anki.Vector.external_interface.DockWithCubeRequest\x1a4.Anki.Vector.external_interface.DockWithCubeResponse\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*\"\x12/v1/dock_with_cube\x12\xa4\x01\n" +
	"\x0fDriveOffCharger\x126.Anki.Vector.external_interface.DriveOffChargerRequest\x1a7.Anki.Vector.external_interface.DriveOffChargerResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/v1/drive_off_charger\x12\xa0\x01\n" +
	"\x0eDriveOnCharger\x125.Anki.Vector.external_interface.DriveOnChargerRequest\x1a6.Anki.Vector.external_interface.DriveOnChargerResponse\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/v1/drive_on_charger\x12\x8b\x01\n" +
	"\tFindFaces\x120.Anki.Vector.external_interface.FindFacesRequest\x1a1.Anki.Vector.external_interface.FindFacesResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/find_faces\x12\xad\x01\n" +
	"\x11LookAroundInPlace\x128.Anki.Vector.external_interface.LookAroundInPlaceRequest\x1a9.Anki.Vector.external_interface.LookAroundInPlaceResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v1/look_around_in_place\x12\x8b\x01\n" +
	"\tRollBlock\x120.Anki.Vector.external_interface.RollBlockRequest\x1a1.Anki.Vector.external_interface.RollBlockResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/roll_block\x12\x8f\x01\n" +
	"\n" +
	"PhotosInfo\x121.Anki.Vector.external_interface.PhotosInfoRequest\x1a2.Anki.Vector.external_interface.PhotosInfoResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/photos_info\x12z\n" +
	"\x05Photo\x12,.Anki.Vector.external_interface.PhotoRequest\x1a-.Anki.Vector.external_interface.PhotoResponse\"\x14\x82\xd3\xe4\x93\x02\x0e:\x01*\"\t/v1/photo\x12\x8a\x01\n" +
	"\tThumbnail\x120.Anki.Vector.external_interface.ThumbnailRequest\x1a1.Anki.Vector.external_interface.ThumbnailResponse\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/v1/thumbnail\x12\x93\x01\n" +
	"\vDeletePhoto\x122.Anki.Vector.external_interface.DeletePhotoRequest\x1a3.Anki.Vector.external_interface.DeletePhotoResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/delete_photo\x12~\n" +
	"\rDriveStraight\x124.Anki.Vector.external_interface.DriveStraightRequest\x1a5.Anki.Vector.external_interface.DriveStraightResponse\"\x00\x12x\n" +
	"\vTurnInPlace\x122.Anki.Vector.external_interface.TurnInPlaceRequest\x1a3.Anki.Vector.external_interface.TurnInPlaceResponse\"\x00\x12{\n" +
	"\fSetHeadAngle\x123.Anki.Vector.external_interface.SetHeadAngleRequest\x1a4.Anki.Vector.external_interface.SetHeadAngleResponse\"\x00\x12~\n" +
	"\rSetLiftHeight\x124.Anki.Vector.external_interface.SetLiftHeightRequest\x1a5.Anki.Vector.external_interface.SetLiftHeightResponse\"\x00\x12\x84\x01\n" +
	"\x0fTurnTowardsFace\x126.Anki.Vector.external_interface.TurnTowardsFaceRequest\x1a7.Anki.Vector.external_interface.TurnTowardsFaceResponse\"\x00\x12u\n" +
	"\n" +
	"GoToObject\x121.Anki.Vector.external_interface.GoToObjectRequest\x1a2.Anki.Vector.external_interface.GoToObjectResponse\"\x00\x12u\n" +
	"\n" +
	"RollObject\x121.Anki.Vector.external_interface.RollObjectRequest\x1a2.Anki.Vector.external_interface.RollObjectResponse\"\x00\x12x\n" +
	"\vPopAWheelie\x122.Anki.Vector.external_interface.PopAWheelieRequest\x1a3.Anki.Vector.external_interface.PopAWheelieResponse\"\x00\x12{\n" +
	"\fPickupObject\x123.Anki.Vector.external_interface.PickupObjectRequest\x1a4.Anki.Vector.external_interface.PickupObjectResponse\"\x00\x12\x9c\x01\n" +
	"\x17PlaceObjectOnGroundHere\x12>.Anki.Vector.external_interface.PlaceObjectOnGroundHereRequest\x1a?.Anki.Vector.external_interface.PlaceObjectOnGroundHereResponse\"\x00\x12~\n" +
	"\x0fSetMasterVolume\x123.Anki.Vector.external_interface.MasterVolumeRequest\x1a4.Anki.Vector.external_interface.MasterVolumeResponse\"\x00\x12\xaf\x01\n" +
	"\x12UserAuthentication\x129.Anki.Vector.external_interface.UserAuthenticationRequest\x1a:.Anki.Vector.external_interface.UserAuthenticationResponse\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/v1/user_authentication\x12\x97\x01\n" +
	"\fBatteryState\x123.Anki.Vector.external_interface.BatteryStateRequest\x1a4.Anki.Vector.external_interface.BatteryStateResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/battery_state\x12\x97\x01\n" +
	"\fVersionState\x123.Anki.Vector.external_interface.VersionStateRequest\x1a4.Anki.Vector.external_interface.VersionStateResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/version_state\x12\x83\x01\n" +
	"\aSayText\x12..Anki.Vector.external_interface.SayTextRequest\x1a/.Anki.Vector.external_interface.SayTextResponse\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/v1/say_text\x12\x93\x01\n" +
	"\vConnectCube\x122.Anki.Vector.external_interface.ConnectCubeRequest\x1a3.Anki.Vector.external_interface.ConnectCubeResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/connect_cube\x12\x9f\x01\n" +
	"\x0eDisconnectCube\x125.Anki.Vector.external_interface.DisconnectCubeRequest\x1a6.Anki.Vector.external_interface.DisconnectCubeResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/disconnect_cube\x12\x9f\x01\n" +
	"\x0eCubesAvailable\x125.Anki.Vector.external_interface.CubesAvailableRequest\x1a6.Anki.Vector.external_interface.CubesAvailableResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/cubes_available\x12\xa4\x01\n" +
	"\x0fFlashCubeLights\x126.Anki.Vector.external_interface.FlashCubeLightsRequest\x1a7.Anki.Vector.external_interface.FlashCubeLightsResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/v1/flash_cube_lights\x12\xb4\x01\n" +
	"\x13ForgetPreferredCube\x12:.Anki.Vector.external_interface.ForgetPreferredCubeRequest\x1a;.Anki.Vector.external_interface.ForgetPreferredCubeResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/v1/forget_preferred_cube\x12\xa8\x01\n" +
	"\x10SetPreferredCube\x127.Anki.Vector.external_interface.SetPreferredCubeRequest\x1a8.Anki.Vector.external_interface.SetPreferredCubeResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/set_preferred_cube\x12\xb4\x01\n" +
	"\x13DeleteCustomObjects\x12:.Anki.Vector.external_interface.DeleteCustomObjectsRequest\x1a;.Anki.Vector.external_interface.DeleteCustomObjectsResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/v1/delete_custom_objects\x12\xc5\x01\n" +
	"\x17CreateFixedCustomObject\x12>.Anki.Vector.external_interface.CreateFixedCustomObjectRequest\x1a?.Anki.Vector.external_interface.CreateFixedCustomObjectResponse\")\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/v1/create_fixed_custom_object\x12\xb0\x01\n" +
	"\x12DefineCustomObject\x129.Anki.Vector.external_interface.DefineCustomObjectRequest\x1a:.Anki.Vector.external_interface.DefineCustomObjectResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v1/define_custom_object\x12~\n" +
	"\rSetCubeLights\x124.Anki.Vector.external_interface.SetCubeLightsRequest\x1a5.Anki.Vector.external_interface.SetCubeLightsResponse\"\x00\x12\x8d\x01\n" +
	"\tAudioFeed\x120.Anki.Vector.external_interface.AudioFeedRequest\x1a1.Anki.Vector.external_interface.AudioFeedResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/audio_feed0\x01\x12\x91\x01\n" +
	"\n" +
	"CameraFeed\x121.Anki.Vector.external_interface.CameraFeedRequest\x1a2.Anki.Vector.external_interface.CameraFeedResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/camera_feed0\x01\x12\xb0\x01\n" +
	"\x12CaptureSingleImage\x129.Anki.Vector.external_interface.CaptureSingleImageRequest\x1a:.Anki.Vector.external_interface.CaptureSingleImageResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v1/capture_single_image\x12\x9e\x01\n" +
	"\x0fGetCameraConfig\x123.Anki.Vector.external_interface.CameraConfigRequest\x1a4.Anki.Vector.external_interface.CameraConfigResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/v1/get_camera_config\x12\x94\x01\n" +
	"\vSetEyeColor\x122.Anki.Vector.external_interface.SetEyeColorRequest\x1a3.Anki.Vector.external_interface.SetEyeColorResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/set_eye_color\x12\x92\x01\n" +
	"\n" +
	"NavMapFeed\x121.Anki.Vector.external_interface.NavMapFeedRequest\x1a2.Anki.Vector.external_interface.NavMapFeedResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/nav_map_feed0\x01\x12\xac\x01\n" +
	"\x11SetCameraSettings\x128.Anki.Vector.external_interface.SetCameraSettingsRequest\x1a9.Anki.Vector.external_interface.SetCameraSettingsResponse\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/v1/set_camera_settings\x12\x8b\x01\n" +
	"\tAppIntent\x120.Anki.Vector.external_interface.AppIntentRequest\x1a1.Anki.Vector.external_interface.AppIntentResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/app_intent\x12\xaa\x01\n" +
	"\x12GetOnboardingState\x126.Anki.Vector.external_interface.OnboardingStateRequest\x1a7.Anki.Vector.external_interface.OnboardingStateResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v1/get_onboarding_state\x12\xac\x01\n" +
	"\x13SendOnboardingInput\x126.Anki.Vector.external_interface.OnboardingInputRequest\x1a7.Anki.Vector.external_interface.OnboardingInputResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/v1/send_onboarding_input\x12\xcb\x01\n" +
	"\x1aGetLatestAttentionTransfer\x12>.Anki.Vector.external_interface.LatestAttentionTransferRequest\x1a?.Anki.Vector.external_interface.LatestAttentionTransferResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/v1/get_latest_attention_transfer\x12\x8b\x01\n" +
	"\tPullJdocs\x120.Anki.Vector.external_interface.PullJdocsRequest\x1a1.Anki.Vector.external_interface.PullJdocsResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/pull_jdocs\x12\x9f\x01\n" +
	"\x0eUpdateSettings\x125.Anki.Vector.external_interface.UpdateSettingsRequest\x1a6.Anki.Vector.external_interface.UpdateSettingsResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/update_settings\x12\xbc\x01\n" +
	"\x15UpdateAccountSettings\x12<.Anki.Vector.external_interface.UpdateAccountSettingsRequest\x1a=.Anki.Vector.external_interface.UpdateAccountSettingsResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v1/update_account_settings\x12\xc0\x01\n" +
	"\x16UpdateUserEntitlements\x12=.Anki.Vector.external_interface.UpdateUserEntitlementsRequest\x1a>.Anki.Vector.external_interface.UpdateUserEntitlementsResponse\"'\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/v1/update_user_entitlements\x12\xac\x01\n" +
	"\x11StartUpdateEngine\x128.Anki.Vector.external_interface.CheckUpdateStatusRequest\x1a9.Anki.Vector.external_interface.CheckUpdateStatusResponse\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/v1/start_update_engine\x12\xac\x01\n" +
	"\x11CheckUpdateStatus\x128.Anki.Vector.external_interface.CheckUpdateStatusRequest\x1a9.Anki.Vector.external_interface.CheckUpdateStatusResponse\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/v1/check_update_status\x12\xa8\x01\n" +
	"\x10UpdateAndRestart\x127.Anki.Vector.external_interface.UpdateAndRestartRequest\x1a8.Anki.Vector.external_interface.UpdateAndRestartResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/update_and_restart\x12\xa4\x01\n" +
	"\x0fUploadDebugLogs\x126.Anki.Vector.external_interface.UploadDebugLogsRequest\x1a7.Anki.Vector.external_interface.UploadDebugLogsResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/v1/upload_debug_logs\x12\xa4\x01\n" +
	"\x14CheckCloudConnection\x121.Anki.Vector.external_interface.CheckCloudRequest\x1a2.Anki.Vector.external_interface.CheckCloudResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1/check_cloud_connection\x12\x96\x01\n" +
	"\x0eGetFeatureFlag\x122.Anki.Vector.external_interface.FeatureFlagRequest\x1a3.Anki.Vector.external_interface.FeatureFlagResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/feature_flag\x12\xa7\x01\n" +
	"\x12GetFeatureFlagList\x126.Anki.Vector.external_interface.FeatureFlagListRequest\x1a7.Anki.Vector.external_interface.FeatureFlagListResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/v1/feature_flag_list\x12\xa3\x01\n" +
	"\x11GetAlexaAuthState\x125.Anki.Vector.external_interface.AlexaAuthStateRequest\x1a6.Anki.Vector.external_interface.AlexaAuthStateResponse\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/v1/alexa_auth_state\x12\x90\x01\n" +
	"\n" +
	"AlexaOptIn\x121.Anki.Vector.external_interface.AlexaOptInRequest\x1a2.Anki.Vector.external_interface.AlexaOptInResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/alexa_opt_in\x12\xb2\x01\n" +
	"\x15AssumeBehaviorControl\x126.Anki.Vector.external_interface.BehaviorControlRequest\x1a7.Anki.Vector.external_interface.BehaviorControlResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v1/assume_behavior_control0\x01B Z\x1eAnki.Vector.external_interfaceb\x06proto3"

var (
	file_external_interface_proto_rawDescOnce sync.Once
	file_external_interface_proto_rawDescData []byte
)

func file_external_interface_proto_rawDescGZIP() []byte {
	file_external_interface_proto_rawDescOnce.Do(func() {
		file_external_interface_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_external_interface_proto_rawDesc), len(file_external_interface_proto_rawDesc)))
	})
	return file_external_interface_proto_rawDescData
}

var file_external_interface_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_external_interface_proto_goTypes = []any{
	(ProtocolVersion)(0),                    // 0: Anki.Vector.external_interface.ProtocolVersion
	(*ProtocolVersionRequest)(nil),          // 1: Anki.Vector.external_interface.ProtocolVersionRequest
	(*SDKInitializationRequest)(nil),        // 2: Anki.Vector.external_interface.SDKInitializationRequest
	(*DriveWheelsRequest)(nil),              // 3: Anki.Vector.external_interface.DriveWheelsRequest
	(*PlayAnimationTriggerRequest)(nil),     // 4: Anki.Vector.external_interface.PlayAnimationTriggerRequest
	(*PlayAnimationRequest)(nil),            // 5: Anki.Vector.external_interface.PlayAnimationRequest
	(*ListAnimationsRequest)(nil),           // 6: Anki.Vector.external_interface.ListAnimationsRequest
	(*ListAnimationTriggersRequest)(nil),    // 7: Anki.Vector.external_interface.ListAnimationTriggersRequest
	(*MoveHeadRequest)(nil),                 // 8: Anki.Vector.external_interface.MoveHeadRequest
	(*MoveLiftRequest)(nil),                 // 9: Anki.Vector.external_interface.MoveLiftRequest
	(*StopAllMotorsRequest)(nil),            // 10: Anki.Vector.external_interface.StopAllMotorsRequest
	(*DisplayFaceImageRGBRequest)(nil),      // 11: Anki.Vector.external_interface.DisplayFaceImageRGBRequest
	(*EventRequest)(nil),                    // 12: Anki.Vector.external_interface.EventRequest
	(*ExternalAudioStreamRequest)(nil),      // 13: Anki.Vector.external_interface.ExternalAudioStreamRequest
	(*BehaviorControlRequest)(nil),          // 14: Anki.Vector.external_interface.BehaviorControlRequest
	(*CancelFaceEnrollmentRequest)(nil),     // 15: Anki.Vector.external_interface.CancelFaceEnrollmentRequest
	(*RequestEnrolledNamesRequest)(nil),     // 16: Anki.Vector.external_interface.RequestEnrolledNamesRequest
	(*UpdateEnrolledFaceByIDRequest)(nil),   // 17: Anki.Vector.external_interface.UpdateEnrolledFaceByIDRequest
	(*EraseEnrolledFaceByIDRequest)(nil),    // 18: Anki.Vector.external_interface.EraseEnrolledFaceByIDRequest
	(*EraseAllEnrolledFacesRequest)(nil),    // 19: Anki.Vector.external_interface.EraseAllEnrolledFacesRequest
	(*SetFaceToEnrollRequest)(nil),          // 20: Anki.Vector.external_interface.SetFaceToEnrollRequest
	(*EnrollFaceRequest)(nil),               // 21: Anki.Vector.external_interface.EnrollFaceRequest
	(*EnableMarkerDetectionRequest)(nil),    // 22: Anki.Vector.external_interface.EnableMarkerDetectionRequest
	(*EnableFaceDetectionRequest)(nil),      // 23: Anki.Vector.external_interface.EnableFaceDetectionRequest
	(*EnableMotionDetectionRequest)(nil),    // 24: Anki.Vector.external_interface.EnableMotionDetectionRequest
	(*EnableMirrorModeRequest)(nil),         // 25: Anki.Vector.external_interface.EnableMirrorModeRequest
	(*EnableImageStreamingRequest)(nil),     // 26: Anki.Vector.external_interface.EnableImageStreamingRequest
	(*IsImageStreamingEnabledRequest)(nil),  // 27: Anki.Vector.external_interface.IsImageStreamingEnabledRequest
	(*CancelActionByIdTagRequest)(nil),      // 28: Anki.Vector.external_interface.CancelActionByIdTagRequest
	(*CancelBehaviorRequest)(nil),           // 29: Anki.Vector.external_interface.CancelBehaviorRequest
	(*GoToPoseRequest)(nil),                 // 30: Anki.Vector.external_interface.GoToPoseRequest
	(*DockWithCubeRequest)(nil),             // 31: Anki.Vector.external_interface.DockWithCubeRequest
	(*DriveOffChargerRequest)(nil),          // 32: Anki.Vector.external_interface.DriveOffChargerRequest
	(*DriveOnChargerRequest)(nil),           // 33: Anki.Vector.external_interface.DriveOnChargerRequest
	(*FindFacesRequest)(nil),                // 34: Anki.Vector.external_interface.FindFacesRequest
	(*LookAroundInPlaceRequest)(nil),        // 35: Anki.Vector.external_interface.LookAroundInPlaceRequest
	(*RollBlockRequest)(nil),                // 36: Anki.Vector.external_interface.RollBlockRequest
	(*PhotosInfoRequest)(nil),               // 37: Anki.Vector.external_interface.PhotosInfoRequest
	(*PhotoRequest)(nil),                    // 38: Anki.Vector.external_interface.PhotoRequest
	(*ThumbnailRequest)(nil),                // 39: Anki.Vector.external_interface.ThumbnailRequest
	(*DeletePhotoRequest)(nil),              // 40: Anki.Vector.external_interface.DeletePhotoRequest
	(*DriveStraightRequest)(nil),            // 41: Anki.Vector.external_interface.DriveStraightRequest
	(*TurnInPlaceRequest)(nil),              // 42: Anki.Vector.external_interface.TurnInPlaceRequest
	(*SetHeadAngleRequest)(nil),             // 43: Anki.Vector.external_interface.SetHeadAngleRequest
	(*SetLiftHeightRequest)(nil),            // 44: Anki.Vector.external_interface.SetLiftHeightRequest
	(*TurnTowardsFaceRequest)(nil),          // 45: Anki.Vector.external_interface.TurnTowardsFaceRequest
	(*GoToObjectRequest)(nil),               // 46: Anki.Vector.external_interface.GoToObjectRequest
	(*RollObjectRequest)(nil),               // 47: Anki.Vector.external_interface.RollObjectRequest
	(*PopAWheelieRequest)(nil),              // 48: Anki.Vector.external_interface.PopAWheelieRequest
	(*PickupObjectRequest)(nil),             // 49: Anki.Vector.external_interface.PickupObjectRequest
	(*PlaceObjectOnGroundHereRequest)(nil),  // 50: Anki.Vector.external_interface.PlaceObjectOnGroundHereRequest
	(*MasterVolumeRequest)(nil),             // 51: Anki.Vector.external_interface.MasterVolumeRequest
	(*UserAuthenticationRequest)(nil),       // 52: Anki.Vector.external_interface.UserAuthenticationRequest
	(*BatteryStateRequest)(nil),             // 53: Anki.Vector.external_interface.BatteryStateRequest
	(*VersionStateRequest)(nil),             // 54: Anki.Vector.external_interface.VersionStateRequest
	(*SayTextRequest)(nil),                  // 55: Anki.Vector.external_interface.SayTextRequest
	(*ConnectCubeRequest)(nil),              // 56: Anki.Vector.external_interface.ConnectCubeRequest
	(*DisconnectCubeRequest)(nil),           // 57: Anki.Vector.external_interface.DisconnectCubeRequest
	(*CubesAvailableRequest)(nil),           // 58: Anki.Vector.external_interface.CubesAvailableRequest
	(*FlashCubeLightsRequest)(nil),          // 59: Anki.Vector.external_interface.FlashCubeLightsRequest
	(*ForgetPreferredCubeRequest)(nil),      // 60: Anki.Vector.external_interface.ForgetPreferredCubeRequest
	(*SetPreferredCubeRequest)(nil),         // 61: Anki.Vector.external_interface.SetPreferredCubeRequest
	(*DeleteCustomObjectsRequest)(nil),      // 62: Anki.Vector.external_interface.DeleteCustomObjectsRequest
	(*CreateFixedCustomObjectRequest)(nil),  // 63: Anki.Vector.external_interface.CreateFixedCustomObjectRequest
	(*DefineCustomObjectRequest)(nil),       // 64: Anki.Vector.external_interface.DefineCustomObjectRequest
	(*SetCubeLightsRequest)(nil),            // 65: Anki.Vector.external_interface.SetCubeLightsRequest
	(*AudioFeedRequest)(nil),                // 66: Anki.Vector.external_interface.AudioFeedRequest
	(*CameraFeedRequest)(nil),               // 67: Anki.Vector.external_interface.CameraFeedRequest
	(*CaptureSingleImageRequest)(nil),       // 68: Anki.Vector.external_interface.CaptureSingleImageRequest
	(*CameraConfigRequest)(nil),             // 69: Anki.Vector.external_interface.CameraConfigRequest
	(*SetEyeColorRequest)(nil),              // 70: Anki.Vector.external_interface.SetEyeColorRequest
	(*NavMapFeedRequest)(nil),               // 71: Anki.Vector.external_interface.NavMapFeedRequest
	(*SetCameraSettingsRequest)(nil),        // 72: Anki.Vector.external_interface.SetCameraSettingsRequest
	(*AppIntentRequest)(nil),                // 73: Anki.Vector.external_interface.AppIntentRequest
	(*OnboardingStateRequest)(nil),          // 74: Anki.Vector.external_interface.OnboardingStateRequest
	(*OnboardingInputRequest)(nil),          // 75: Anki.Vector.external_interface.OnboardingInputRequest
	(*LatestAttentionTransferRequest)(nil),  // 76: Anki.Vector.external_interface.LatestAttentionTransferRequest
	(*PullJdocsRequest)(nil),                // 77: Anki.Vector.external_interface.PullJdocsRequest
	(*UpdateSettingsRequest)(nil),           // 78: Anki.Vector.external_interface.UpdateSettingsRequest
	(*UpdateAccountSettingsRequest)(nil),    // 79: Anki.Vector.external_interface.UpdateAccountSettingsRequest
	(*UpdateUserEntitlementsRequest)(nil),   // 80: Anki.Vector.external_interface.UpdateUserEntitlementsRequest
	(*CheckUpdateStatusRequest)(nil),        // 81: Anki.Vector.external_interface.CheckUpdateStatusRequest
	(*UpdateAndRestartRequest)(nil),         // 82: Anki.Vector.external_interface.UpdateAndRestartRequest
	(*UploadDebugLogsRequest)(nil),          // 83: Anki.Vector.external_interface.UploadDebugLogsRequest
	(*CheckCloudRequest)(nil),               // 84: Anki.Vector.external_interface.CheckCloudRequest
	(*FeatureFlagRequest)(nil),              // 85: Anki.Vector.external_interface.FeatureFlagRequest
	(*FeatureFlagListRequest)(nil),          // 86: Anki.Vector.external_interface.FeatureFlagListRequest
	(*AlexaAuthStateRequest)(nil),           // 87: Anki.Vector.external_interface.AlexaAuthStateRequest
	(*AlexaOptInRequest)(nil),               // 88: Anki.Vector.external_interface.AlexaOptInRequest
	(*ProtocolVersionResponse)(nil),         // 89: Anki.Vector.external_interface.ProtocolVersionResponse
	(*SDKInitializationResponse)(nil),       // 90: Anki.Vector.external_interface.SDKInitializationResponse
	(*DriveWheelsResponse)(nil),             // 91: Anki.Vector.external_interface.DriveWheelsResponse
	(*PlayAnimationResponse)(nil),           // 92: Anki.Vector.external_interface.PlayAnimationResponse
	(*ListAnimationsResponse)(nil),          // 93: Anki.Vector.external_interface.ListAnimationsResponse
	(*ListAnimationTriggersResponse)(nil),   // 94: Anki.Vector.external_interface.ListAnimationTriggersResponse
	(*MoveHeadResponse)(nil),                // 95: Anki.Vector.external_interface.MoveHeadResponse
	(*MoveLiftResponse)(nil),                // 96: Anki.Vector.external_interface.MoveLiftResponse
	(*StopAllMotorsResponse)(nil),           // 97: Anki.Vector.external_interface.StopAllMotorsResponse
	(*DisplayFaceImageRGBResponse)(nil),     // 98: Anki.Vector.external_interface.DisplayFaceImageRGBResponse
	(*EventResponse)(nil),                   // 99: Anki.Vector.external_interface.EventResponse
	(*ExternalAudioStreamResponse)(nil),     // 100: Anki.Vector.external_interface.ExternalAudioStreamResponse
	(*BehaviorControlResponse)(nil),         // 101: Anki.Vector.external_interface.BehaviorControlResponse
	(*CancelFaceEnrollmentResponse)(nil),    // 102: Anki.Vector.external_interface.CancelFaceEnrollmentResponse
	(*RequestEnrolledNamesResponse)(nil),    // 103: Anki.Vector.external_interface.RequestEnrolledNamesResponse
	(*UpdateEnrolledFaceByIDResponse)(nil),  // 104: Anki.Vector.external_interface.UpdateEnrolledFaceByIDResponse
	(*EraseEnrolledFaceByIDResponse)(nil),   // 105: Anki.Vector.external_interface.EraseEnrolledFaceByIDResponse
	(*EraseAllEnrolledFacesResponse)(nil),   // 106: Anki.Vector.external_interface.EraseAllEnrolledFacesResponse
	(*SetFaceToEnrollResponse)(nil),         // 107: Anki.Vector.external_interface.SetFaceToEnrollResponse
	(*EnrollFaceResponse)(nil),              // 108: Anki.Vector.external_interface.EnrollFaceResponse
	(*EnableMarkerDetectionResponse)(nil),   // 109: Anki.Vector.external_interface.EnableMarkerDetectionResponse
	(*EnableFaceDetectionResponse)(nil),     // 110: Anki.Vector.external_interface.EnableFaceDetectionResponse
	(*EnableMotionDetectionResponse)(nil),   // 111: Anki.Vector.external_interface.EnableMotionDetectionResponse
	(*EnableMirrorModeResponse)(nil),        // 112: Anki.Vector.external_interface.EnableMirrorModeResponse
	(*EnableImageStreamingResponse)(nil),    // 113: Anki.Vector.external_interface.EnableImageStreamingResponse
	(*IsImageStreamingEnabledResponse)(nil), // 114: Anki.Vector.external_interface.IsImageStreamingEnabledResponse
	(*CancelActionByIdTagResponse)(nil),     // 115: Anki.Vector.external_interface.CancelActionByIdTagResponse
	(*CancelBehaviorResponse)(nil),          // 116: Anki.Vector.external_interface.CancelBehaviorResponse
	(*GoToPoseResponse)(nil),                // 117: Anki.Vector.external_interface.GoToPoseResponse
	(*DockWithCubeResponse)(nil),            // 118: Anki.Vector.external_interface.DockWithCubeResponse
	(*DriveOffChargerResponse)(nil),         // 119: Anki.Vector.external_interface.DriveOffChargerResponse
	(*DriveOnChargerResponse)(nil),          // 120: Anki.Vector.external_interface.DriveOnChargerResponse
	(*FindFacesResponse)(nil),               // 121: Anki.Vector.external_interface.FindFacesResponse
	(*LookAroundInPlaceResponse)(nil),       // 122: Anki.Vector.external_interface.LookAroundInPlaceResponse
	(*RollBlockResponse)(nil),               // 123: Anki.Vector.external_interface.RollBlockResponse
	(*PhotosInfoResponse)(nil),              // 124: Anki.Vector.external_interface.PhotosInfoResponse
	(*PhotoResponse)(nil),                   // 125: Anki.Vector.external_interface.PhotoResponse
	(*ThumbnailResponse)(nil),               // 126: Anki.Vector.external_interface.ThumbnailResponse
	(*DeletePhotoResponse)(nil),             // 127: Anki.Vector.external_interface.DeletePhotoResponse
	(*DriveStraightResponse)(nil),           // 128: Anki.Vector.external_interface.DriveStraightResponse
	(*TurnInPlaceResponse)(nil),             // 129: Anki.Vector.external_interface.TurnInPlaceResponse
	(*SetHeadAngleResponse)(nil),            // 130: Anki.Vector.external_interface.SetHeadAngleResponse
	(*SetLiftHeightResponse)(nil),           // 131: Anki.Vector.external_interface.SetLiftHeightResponse
	(*TurnTowardsFaceResponse)(nil),         // 132: Anki.Vector.external_interface.TurnTowardsFaceResponse
	(*GoToObjectResponse)(nil),              // 133: Anki.Vector.external_interface.GoToObjectResponse
	(*RollObjectResponse)(nil),              // 134: Anki.Vector.external_interface.RollObjectResponse
	(*PopAWheelieResponse)(nil),             // 135: Anki.Vector.external_interface.PopAWheelieResponse
	(*PickupObjectResponse)(nil),            // 136: Anki.Vector.external_interface.PickupObjectResponse
	(*PlaceObjectOnGroundHereResponse)(nil), // 137: Anki.Vector.external_interface.PlaceObjectOnGroundHereResponse
	(*MasterVolumeResponse)(nil),            // 138: Anki.Vector.external_interface.MasterVolumeResponse
	(*UserAuthenticationResponse)(nil),      // 139: Anki.Vector.external_interface.UserAuthenticationResponse
	(*BatteryStateResponse)(nil),            // 140: Anki.Vector.external_interface.BatteryStateResponse
	(*VersionStateResponse)(nil),            // 141: Anki.Vector.external_interface.VersionStateResponse
	(*SayTextResponse)(nil),                 // 142: Anki.Vector.external_interface.SayTextResponse
	(*ConnectCubeResponse)(nil),             // 143: Anki.Vector.external_interface.ConnectCubeResponse
	(*DisconnectCubeResponse)(nil),          // 144: Anki.Vector.external_interface.DisconnectCubeResponse
	(*CubesAvailableResponse)(nil),          // 145: Anki.Vector.external_interface.CubesAvailableResponse
	(*FlashCubeLightsResponse)(nil),         // 146: Anki.Vector.external_interface.FlashCubeLightsResponse
	(*ForgetPreferredCubeResponse)(nil),     // 147: Anki.Vector.external_interface.ForgetPreferredCubeResponse
	(*SetPreferredCubeResponse)(nil),        // 148: Anki.Vector.external_interface.SetPreferredCubeResponse
	(*DeleteCustomObjectsResponse)(nil),     // 149: Anki.Vector.external_interface.DeleteCustomObjectsResponse
	(*CreateFixedCustomObjectResponse)(nil), // 150: Anki.Vector.external_interface.CreateFixedCustomObjectResponse
	(*DefineCustomObjectResponse)(nil),      // 151: Anki.Vector.external_interface.DefineCustomObjectResponse
	(*SetCubeLightsResponse)(nil),           // 152: Anki.Vector.external_interface.SetCubeLightsResponse
	(*AudioFeedResponse)(nil),               // 153: Anki.Vector.external_interface.AudioFeedResponse
	(*CameraFeedResponse)(nil),              // 154: Anki.Vector.external_interface.CameraFeedResponse
	(*CaptureSingleImageResponse)(nil),      // 155: Anki.Vector.external_interface.CaptureSingleImageResponse
	(*CameraConfigResponse)(nil),            // 156: Anki.Vector.external_interface.CameraConfigResponse
	(*SetEyeColorResponse)(nil),             // 157: Anki.Vector.external_interface.SetEyeColorResponse
	(*NavMapFeedResponse)(nil),              // 158: Anki.Vector.external_interface.NavMapFeedResponse
	(*SetCameraSettingsResponse)(nil),       // 159: Anki.Vector.external_interface.SetCameraSettingsResponse
	(*AppIntentResponse)(nil),               // 160: Anki.Vector.external_interface.AppIntentResponse
	(*OnboardingStateResponse)(nil),         // 161: Anki.Vector.external_interface.OnboardingStateResponse
	(*OnboardingInputResponse)(nil),         // 162: Anki.Vector.external_interface.OnboardingInputResponse
	(*LatestAttentionTransferResponse)(nil), // 163: Anki.Vector.external_interface.LatestAttentionTransferResponse
	(*PullJdocsResponse)(nil),               // 164: Anki.Vector.external_interface.PullJdocsResponse
	(*UpdateSettingsResponse)(nil),          // 165: Anki.Vector.external_interface.UpdateSettingsResponse
	(*UpdateAccountSettingsResponse)(nil),   // 166: Anki.Vector.external_interface.UpdateAccountSettingsResponse
	(*UpdateUserEntitlementsResponse)(nil),  // 167: Anki.Vector.external_interface.UpdateUserEntitlementsResponse
	(*CheckUpdateStatusResponse)(nil),       // 168: Anki.Vector.external_interface.CheckUpdateStatusResponse
	(*UpdateAndRestartResponse)(nil),        // 169: Anki.Vector.external_interface.UpdateAndRestartResponse
	(*UploadDebugLogsResponse)(nil),         // 170: Anki.Vector.external_interface.UploadDebugLogsResponse
	(*CheckCloudResponse)(nil),              // 171: Anki.Vector.external_interface.CheckCloudResponse
	(*FeatureFlagResponse)(nil),             // 172: Anki.Vector.external_interface.FeatureFlagResponse
	(*FeatureFlagListResponse)(nil),         // 173: Anki.Vector.external_interface.FeatureFlagListResponse
	(*AlexaAuthStateResponse)(nil),          // 174: Anki.Vector.external_interface.AlexaAuthStateResponse
	(*AlexaOptInResponse)(nil),              // 175: Anki.Vector.external_interface.AlexaOptInResponse
}
var file_external_interface_proto_depIdxs = []int32{
	1,   // 0: Anki.Vector.external_interface.ExternalInterface.ProtocolVersion:input_type -> Anki.Vector.external_interface.ProtocolVersionRequest
	2,   // 1: Anki.Vector.external_interface.ExternalInterface.SDKInitialization:input_type -> Anki.Vector.external_interface.SDKInitializationRequest
	3,   // 2: Anki.Vector.external_interface.ExternalInterface.DriveWheels:input_type -> Anki.Vector.external_interface.DriveWheelsRequest
	4,   // 3: Anki.Vector.external_interface.ExternalInterface.PlayAnimationTrigger:input_type -> Anki.Vector.external_interface.PlayAnimationTriggerRequest
	5,   // 4: Anki.Vector.external_interface.ExternalInterface.PlayAnimation:input_type -> Anki.Vector.external_interface.PlayAnimationRequest
	6,   // 5: Anki.Vector.external_interface.ExternalInterface.ListAnimations:input_type -> Anki.Vector.external_interface.ListAnimationsRequest
	7,   // 6: Anki.Vector.external_interface.ExternalInterface.ListAnimationTriggers:input_type -> Anki.Vector.external_interface.ListAnimationTriggersRequest
	8,   // 7: Anki.Vector.external_interface.ExternalInterface.MoveHead:input_type -> Anki.Vector.external_interface.MoveHeadRequest
	9,   // 8: Anki.Vector.external_interface.ExternalInterface.MoveLift:input_type -> Anki.Vector.external_interface.MoveLiftRequest
	10,  // 9: Anki.Vector.external_interface.ExternalInterface.StopAllMotors:input_type -> Anki.Vector.external_interface.StopAllMotorsRequest
	11,  // 10: Anki.Vector.external_interface.ExternalInterface.DisplayFaceImageRGB:input_type -> Anki.Vector.external_interface.DisplayFaceImageRGBRequest
	12,  // 11: Anki.Vector.external_interface.ExternalInterface.EventStream:input_type -> Anki.Vector.external_interface.EventRequest
	13,  // 12: Anki.Vector.external_interface.ExternalInterface.ExternalAudioStreamPlayback:input_type -> Anki.Vector.external_interface.ExternalAudioStreamRequest
	14,  // 13: Anki.Vector.external_interface.ExternalInterface.BehaviorControl:input_type -> Anki.Vector.external_interface.BehaviorControlRequest
	15,  // 14: Anki.Vector.external_interface.ExternalInterface.CancelFaceEnrollment:input_type -> Anki.Vector.external_interface.CancelFaceEnrollmentRequest
	16,  // 15: Anki.Vector.external_interface.ExternalInterface.RequestEnrolledNames:input_type -> Anki.Vector.external_interface.RequestEnrolledNamesRequest
	17,  // 16: Anki.Vector.external_interface.ExternalInterface.UpdateEnrolledFaceByID:input_type -> Anki.Vector.external_interface.UpdateEnrolledFaceByIDRequest
	18,  // 17: Anki.Vector.external_interface.ExternalInterface.EraseEnrolledFaceByID:input_type -> Anki.Vector.external_interface.EraseEnrolledFaceByIDRequest
	19,  // 18: Anki.Vector.external_interface.ExternalInterface.EraseAllEnrolledFaces:input_type -> Anki.Vector.external_interface.EraseAllEnrolledFacesRequest
	20,  // 19: Anki.Vector.external_interface.ExternalInterface.SetFaceToEnroll:input_type -> Anki.Vector.external_interface.SetFaceToEnrollRequest
	21,  // 20: Anki.Vector.external_interface.ExternalInterface.EnrollFace:input_type -> Anki.Vector.external_interface.EnrollFaceRequest
	22,  // 21: Anki.Vector.external_interface.ExternalInterface.EnableMarkerDetection:input_type -> Anki.Vector.external_interface.EnableMarkerDetectionRequest
	23,  // 22: Anki.Vector.external_interface.ExternalInterface.EnableFaceDetection:input_type -> Anki.Vector.external_interface.EnableFaceDetectionRequest
	24,  // 23: Anki.Vector.external_interface.ExternalInterface.EnableMotionDetection:input_type -> Anki.Vector.external_interface.EnableMotionDetectionRequest
	25,  // 24: Anki.Vector.external_interface.ExternalInterface.EnableMirrorMode:input_type -> Anki.Vector.external_interface.EnableMirrorModeRequest
	26,  // 25: Anki.Vector.external_interface.ExternalInterface.EnableImageStreaming:input_type -> Anki.Vector.external_interface.EnableImageStreamingRequest
	27,  // 26: Anki.Vector.external_interface.ExternalInterface.IsImageStreamingEnabled:input_type -> Anki.Vector.external_interface.IsImageStreamingEnabledRequest
	28,  // 27: Anki.Vector.external_interface.ExternalInterface.CancelActionByIdTag:input_type -> Anki.Vector.external_interface.CancelActionByIdTagRequest
	29,  // 28: Anki.Vector.external_interface.ExternalInterface.CancelBehavior:input_type -> Anki.Vector.external_interface.CancelBehaviorRequest
	30,  // 29: Anki.Vector.external_interface.ExternalInterface.GoToPose:input_type -> Anki.Vector.external_interface.GoToPoseRequest
	31,  // 30: Anki.Vector.external_interface.ExternalInterface.DockWithCube:input_type -> Anki.Vector.external_interface.DockWithCubeRequest
	32,  // 31: Anki.Vector.external_interface.ExternalInterface.DriveOffCharger:input_type -> Anki.Vector.external_interface.DriveOffChargerRequest
	33,  // 32: Anki.Vector.external_interface.ExternalInterface.DriveOnCharger:input_type -> Anki.Vector.external_interface.DriveOnChargerRequest
	34,  // 33: Anki.Vector.external_interface.ExternalInterface.FindFaces:input_type -> Anki.Vector.external_interface.FindFacesRequest
	35,  // 34: Anki.Vector.external_interface.ExternalInterface.LookAroundInPlace:input_type -> Anki.Vector.external_interface.LookAroundInPlaceRequest
	36,  // 35: Anki.Vector.external_interface.ExternalInterface.RollBlock:input_type -> Anki.Vector.external_interface.RollBlockRequest
	37,  // 36: Anki.Vector.external_interface.ExternalInterface.PhotosInfo:input_type -> Anki.Vector.external_interface.PhotosInfoRequest
	38,  // 37: Anki.Vector.external_interface.ExternalInterface.Photo:input_type -> Anki.Vector.external_interface.PhotoRequest
	39,  // 38: Anki.Vector.external_interface.ExternalInterface.Thumbnail:input_type -> Anki.Vector.external_interface.ThumbnailRequest
	40,  // 39: Anki.Vector.external_interface.ExternalInterface.DeletePhoto:input_type -> Anki.Vector.external_interface.DeletePhotoRequest
	41,  // 40: Anki.Vector.external_interface.ExternalInterface.DriveStraight:input_type -> Anki.Vector.external_interface.DriveStraightRequest
	42,  // 41: Anki.Vector.external_interface.ExternalInterface.TurnInPlace:input_type -> Anki.Vector.external_interface.TurnInPlaceRequest
	43,  // 42: Anki.Vector.external_interface.ExternalInterface.SetHeadAngle:input_type -> Anki.Vector.external_interface.SetHeadAngleRequest
	44,  // 43: Anki.Vector.external_interface.ExternalInterface.SetLiftHeight:input_type -> Anki.Vector.external_interface.SetLiftHeightRequest
	45,  // 44: Anki.Vector.external_interface.ExternalInterface.TurnTowardsFace:input_type -> Anki.Vector.external_interface.TurnTowardsFaceRequest
	46,  // 45: Anki.Vector.external_interface.ExternalInterface.GoToObject:input_type -> Anki.Vector.external_interface.GoToObjectRequest
	47,  // 46: Anki.Vector.external_interface.ExternalInterface.RollObject:input_type -> Anki.Vector.external_interface.RollObjectRequest
	48,  // 47: Anki.Vector.external_interface.ExternalInterface.PopAWheelie:input_type -> Anki.Vector.external_interface.PopAWheelieRequest
	49,  // 48: Anki.Vector.external_interface.ExternalInterface.PickupObject:input_type -> Anki.Vector.external_interface.PickupObjectRequest
	50,  // 49: Anki.Vector.external_interface.ExternalInterface.PlaceObjectOnGroundHere:input_type -> Anki.Vector.external_interface.PlaceObjectOnGroundHereRequest
	51,  // 50: Anki.Vector.external_interface.ExternalInterface.SetMasterVolume:input_type -> Anki.Vector.external_interface.MasterVolumeRequest
	52,  // 51: Anki.Vector.external_interface.ExternalInterface.UserAuthentication:input_type -> Anki.Vector.external_interface.UserAuthenticationRequest
	53,  // 52: Anki.Vector.external_interface.ExternalInterface.BatteryState:input_type -> Anki.Vector.external_interface.BatteryStateRequest
	54,  // 53: Anki.Vector.external_interface.ExternalInterface.VersionState:input_type -> Anki.Vector.external_interface.VersionStateRequest
	55,  // 54: Anki.Vector.external_interface.ExternalInterface.SayText:input_type -> Anki.Vector.external_interface.SayTextRequest
	56,  // 55: Anki.Vector.external_interface.ExternalInterface.ConnectCube:input_type -> Anki.Vector.external_interface.ConnectCubeRequest
	57,  // 56: Anki.Vector.external_interface.ExternalInterface.DisconnectCube:input_type -> Anki.Vector.external_interface.DisconnectCubeRequest
	58,  // 57: Anki.Vector.external_interface.ExternalInterface.CubesAvailable:input_type -> Anki.Vector.external_interface.CubesAvailableRequest
	59,  // 58: Anki.Vector.external_interface.ExternalInterface.FlashCubeLights:input_type -> Anki.Vector.external_interface.FlashCubeLightsRequest
	60,  // 59: Anki.Vector.external_interface.ExternalInterface.ForgetPreferredCube:input_type -> Anki.Vector.external_interface.ForgetPreferredCubeRequest
	61,  // 60: Anki.Vector.external_interface.ExternalInterface.SetPreferredCube:input_type -> Anki.Vector.external_interface.SetPreferredCubeRequest
	62,  // 61: Anki.Vector.external_interface.ExternalInterface.DeleteCustomObjects:input_type -> Anki.Vector.external_interface.DeleteCustomObjectsRequest
	63,  // 62: Anki.Vector.external_interface.ExternalInterface.CreateFixedCustomObject:input_type -> Anki.Vector.external_interface.CreateFixedCustomObjectRequest
	64,  // 63: Anki.Vector.external_interface.ExternalInterface.DefineCustomObject:input_type -> Anki.Vector.external_interface.DefineCustomObjectRequest
	65,  // 64: Anki.Vector.external_interface.ExternalInterface.SetCubeLights:input_type -> Anki.Vector.external_interface.SetCubeLightsRequest
	66,  // 65: Anki.Vector.external_interface.ExternalInterface.AudioFeed:input_type -> Anki.Vector.external_interface.AudioFeedRequest
	67,  // 66: Anki.Vector.external_interface.ExternalInterface.CameraFeed:input_type -> Anki.Vector.external_interface.CameraFeedRequest
	68,  // 67: Anki.Vector.external_interface.ExternalInterface.CaptureSingleImage:input_type -> Anki.Vector.external_interface.CaptureSingleImageRequest
	69,  // 68: Anki.Vector.external_interface.ExternalInterface.GetCameraConfig:input_type -> Anki.Vector.external_interface.CameraConfigRequest
	70,  // 69: Anki.Vector.external_interface.ExternalInterface.SetEyeColor:input_type -> Anki.Vector.external_interface.SetEyeColorRequest
	71,  // 70: Anki.Vector.external_interface.ExternalInterface.NavMapFeed:input_type -> Anki.Vector.external_interface.NavMapFeedRequest
	72,  // 71: Anki.Vector.external_interface.ExternalInterface.SetCameraSettings:input_type -> Anki.Vector.external_interface.SetCameraSettingsRequest
	73,  // 72: Anki.Vector.external_interface.ExternalInterface.AppIntent:input_type -> Anki.Vector.external_interface.AppIntentRequest
	74,  // 73: Anki.Vector.external_interface.ExternalInterface.GetOnboardingState:input_type -> Anki.Vector.external_interface.OnboardingStateRequest
	75,  // 74: Anki.Vector.external_interface.ExternalInterface.SendOnboardingInput:input_type -> Anki.Vector.external_interface.OnboardingInputRequest
	76,  // 75: Anki.Vector.external_interface.ExternalInterface.GetLatestAttentionTransfer:input_type -> Anki.Vector.external_interface.LatestAttentionTransferRequest
	77,  // 76: Anki.Vector.external_interface.ExternalInterface.PullJdocs:input_type -> Anki.Vector.external_interface.PullJdocsRequest
	78,  // 77: Anki.Vector.external_interface.ExternalInterface.UpdateSettings:input_type -> Anki.Vector.external_interface.UpdateSettingsRequest
	79,  // 78: Anki.Vector.external_interface.ExternalInterface.UpdateAccountSettings:input_type -> Anki.Vector.external_interface.UpdateAccountSettingsRequest
	80,  // 79: Anki.Vector.external_interface.ExternalInterface.UpdateUserEntitlements:input_type -> Anki.Vector.external_interface.UpdateUserEntitlementsRequest
	81,  // 80: Anki.Vector.external_interface.ExternalInterface.StartUpdateEngine:input_type -> Anki.Vector.external_interface.CheckUpdateStatusRequest
	81,  // 81: Anki.Vector.external_interface.ExternalInterface.CheckUpdateStatus:input_type -> Anki.Vector.external_interface.CheckUpdateStatusRequest
	82,  // 82: Anki.Vector.external_interface.ExternalInterface.UpdateAndRestart:input_type -> Anki.Vector.external_interface.UpdateAndRestartRequest
	83,  // 83: Anki.Vector.external_interface.ExternalInterface.UploadDebugLogs:input_type -> Anki.Vector.external_interface.UploadDebugLogsRequest
	84,  // 84: Anki.Vector.external_interface.ExternalInterface.CheckCloudConnection:input_type -> Anki.Vector.external_interface.CheckCloudRequest
	85,  // 85: Anki.Vector.external_interface.ExternalInterface.GetFeatureFlag:input_type -> Anki.Vector.external_interface.FeatureFlagRequest
	86,  // 86: Anki.Vector.external_interface.ExternalInterface.GetFeatureFlagList:input_type -> Anki.Vector.external_interface.FeatureFlagListRequest
	87,  // 87: Anki.Vector.external_interface.ExternalInterface.GetAlexaAuthState:input_type -> Anki.Vector.external_interface.AlexaAuthStateRequest
	88,  // 88: Anki.Vector.external_interface.ExternalInterface.AlexaOptIn:input_type -> Anki.Vector.external_interface.AlexaOptInRequest
	14,  // 89: Anki.Vector.external_interface.ExternalInterface.AssumeBehaviorControl:input_type -> Anki.Vector.external_interface.BehaviorControlRequest
	89,  // 90: Anki.Vector.external_interface.ExternalInterface.ProtocolVersion:output_type -> Anki.Vector.external_interface.ProtocolVersionResponse
	90,  // 91: Anki.Vector.external_interface.ExternalInterface.SDKInitialization:output_type -> Anki.Vector.external_interface.SDKInitializationResponse
	91,  // 92: Anki.Vector.external_interface.ExternalInterface.DriveWheels:output_type -> Anki.Vector.external_interface.DriveWheelsResponse
	92,  // 93: Anki.Vector.external_interface.ExternalInterface.PlayAnimationTrigger:output_type -> Anki.Vector.external_interface.PlayAnimationResponse
	92,  // 94: Anki.Vector.external_interface.ExternalInterface.PlayAnimation:output_type -> Anki.Vector.external_interface.PlayAnimationResponse
	93,  // 95: Anki.Vector.external_interface.ExternalInterface.ListAnimations:output_type -> Anki.Vector.external_interface.ListAnimationsResponse
	94,  // 96: Anki.Vector.external_interface.ExternalInterface.ListAnimationTriggers:output_type -> Anki.Vector.external_interface.ListAnimationTriggersResponse
	95,  // 97: Anki.Vector.external_interface.ExternalInterface.MoveHead:output_type -> Anki.Vector.external_interface.MoveHeadResponse
	96,  // 98: Anki.Vector.external_interface.ExternalInterface.MoveLift:output_type -> Anki.Vector.external_interface.MoveLiftResponse
	97,  // 99: Anki.Vector.external_interface.ExternalInterface.StopAllMotors:output_type -> Anki.Vector.external_interface.StopAllMotorsResponse
	98,  // 100: Anki.Vector.external_interface.ExternalInterface.DisplayFaceImageRGB:output_type -> Anki.Vector.external_interface.DisplayFaceImageRGBResponse
	99,  // 101: Anki.Vector.external_interface.ExternalInterface.EventStream:output_type -> Anki.Vector.external_interface.EventResponse
	100, // 102: Anki.Vector.external_interface.ExternalInterface.ExternalAudioStreamPlayback:output_type -> Anki.Vector.external_interface.ExternalAudioStreamResponse
	101, // 103: Anki.Vector.external_interface.ExternalInterface.BehaviorControl:output_type -> Anki.Vector.external_interface.BehaviorControlResponse
	102, // 104: Anki.Vector.external_interface.ExternalInterface.CancelFaceEnrollment:output_type -> Anki.Vector.external_interface.CancelFaceEnrollmentResponse
	103, // 105: Anki.Vector.external_interface.ExternalInterface.RequestEnrolledNames:output_type -> Anki.Vector.external_interface.RequestEnrolledNamesResponse
	104, // 106: Anki.Vector.external_interface.ExternalInterface.UpdateEnrolledFaceByID:output_type -> Anki.Vector.external_interface.UpdateEnrolledFaceByIDResponse
	105, // 107: Anki.Vector.external_interface.ExternalInterface.EraseEnrolledFaceByID:output_type -> Anki.Vector.external_interface.EraseEnrolledFaceByIDResponse
	106, // 108: Anki.Vector.external_interface.ExternalInterface.EraseAllEnrolledFaces:output_type -> Anki.Vector.external_interface.EraseAllEnrolledFacesResponse
	107, // 109: Anki.Vector.external_interface.ExternalInterface.SetFaceToEnroll:output_type -> Anki.Vector.external_interface.SetFaceToEnrollResponse
	108, // 110: Anki.Vector.external_interface.ExternalInterface.EnrollFace:output_type -> Anki.Vector.external_interface.EnrollFaceResponse
	109, // 111: Anki.Vector.external_interface.ExternalInterface.EnableMarkerDetection:output_type -> Anki.Vector.external_interface.EnableMarkerDetectionResponse
	110, // 112: Anki.Vector.external_interface.ExternalInterface.EnableFaceDetection:output_type -> Anki.Vector.external_interface.EnableFaceDetectionResponse
	111, // 113: Anki.Vector.external_interface.ExternalInterface.EnableMotionDetection:output_type -> Anki.Vector.external_interface.EnableMotionDetectionResponse
	112, // 114: Anki.Vector.external_interface.ExternalInterface.EnableMirrorMode:output_type -> Anki.Vector.external_interface.EnableMirrorModeResponse
	113, // 115: Anki.Vector.external_interface.ExternalInterface.EnableImageStreaming:output_type -> Anki.Vector.external_interface.EnableImageStreamingResponse
	114, // 116: Anki.Vector.external_interface.ExternalInterface.IsImageStreamingEnabled:output_type -> Anki.Vector.external_interface.IsImageStreamingEnabledResponse
	115, // 117: Anki.Vector.external_interface.ExternalInterface.CancelActionByIdTag:output_type -> Anki.Vector.external_interface.CancelActionByIdTagResponse
	116, // 118: Anki.Vector.external_interface.ExternalInterface.CancelBehavior:output_type -> Anki.Vector.external_interface.CancelBehaviorResponse
	117, // 119: Anki.Vector.external_interface.ExternalInterface.GoToPose:output_type -> Anki.Vector.external_interface.GoToPoseResponse
	118, // 120: Anki.Vector.external_interface.ExternalInterface.DockWithCube:output_type -> Anki.Vector.external_interface.DockWithCubeResponse
	119, // 121: Anki.Vector.external_interface.ExternalInterface.DriveOffCharger:output_type -> Anki.Vector.external_interface.DriveOffChargerResponse
	120, // 122: Anki.Vector.external_interface.ExternalInterface.DriveOnCharger:output_type -> Anki.Vector.external_interface.DriveOnChargerResponse
	121, // 123: Anki.Vector.external_interface.ExternalInterface.FindFaces:output_type -> Anki.Vector.external_interface.FindFacesResponse
	122, // 124: Anki.Vector.external_interface.ExternalInterface.LookAroundInPlace:output_type -> Anki.Vector.external_interface.LookAroundInPlaceResponse
	123, // 125: Anki.Vector.external_interface.ExternalInterface.RollBlock:output_type -> Anki.Vector.external_interface.RollBlockResponse
	124, // 126: Anki.Vector.external_interface.ExternalInterface.PhotosInfo:output_type -> Anki.Vector.external_interface.PhotosInfoResponse
	125, // 127: Anki.Vector.external_interface.ExternalInterface.Photo:output_type -> Anki.Vector.external_interface.PhotoResponse
	126, // 128: Anki.Vector.external_interface.ExternalInterface.Thumbnail:output_type -> Anki.Vector.external_interface.ThumbnailResponse
	127, // 129: Anki.Vector.external_interface.ExternalInterface.DeletePhoto:output_type -> Anki.Vector.external_interface.DeletePhotoResponse
	128, // 130: Anki.Vector.external_interface.ExternalInterface.DriveStraight:output_type -> Anki.Vector.external_interface.DriveStraightResponse
	129, // 131: Anki.Vector.external_interface.ExternalInterface.TurnInPlace:output_type -> Anki.Vector.external_interface.TurnInPlaceResponse
	130, // 132: Anki.Vector.external_interface.ExternalInterface.SetHeadAngle:output_type -> Anki.Vector.external_interface.SetHeadAngleResponse
	131, // 133: Anki.Vector.external_interface.ExternalInterface.SetLiftHeight:output_type -> Anki.Vector.external_interface.SetLiftHeightResponse
	132, // 134: Anki.Vector.external_interface.ExternalInterface.TurnTowardsFace:output_type -> Anki.Vector.external_interface.TurnTowardsFaceResponse
	133, // 135: Anki.Vector.external_interface.ExternalInterface.GoToObject:output_type -> Anki.Vector.external_interface.GoToObjectResponse
	134, // 136: Anki.Vector.external_interface.ExternalInterface.RollObject:output_type -> Anki.Vector.external_interface.RollObjectResponse
	135, // 137: Anki.Vector.external_interface.ExternalInterface.PopAWheelie:output_type -> Anki.Vector.external_interface.PopAWheelieResponse
	136, // 138: Anki.Vector.external_interface.ExternalInterface.PickupObject:output_type -> Anki.Vector.external_interface.PickupObjectResponse
	137, // 139: Anki.Vector.external_interface.ExternalInterface.PlaceObjectOnGroundHere:output_type -> Anki.Vector.external_interface.PlaceObjectOnGroundHereResponse
	138, // 140: Anki.Vector.external_interface.ExternalInterface.SetMasterVolume:output_type -> Anki.Vector.external_interface.MasterVolumeResponse
	139, // 141: Anki.Vector.external_interface.ExternalInterface.UserAuthentication:output_type -> Anki.Vector.external_interface.UserAuthenticationResponse
	140, // 142: Anki.Vector.external_interface.ExternalInterface.BatteryState:output_type -> Anki.Vector.external_interface.BatteryStateResponse
	141, // 143: Anki.Vector.external_interface.ExternalInterface.VersionState:output_type -> Anki.Vector.external_interface.VersionStateResponse
	142, // 144: Anki.Vector.external_interface.ExternalInterface.SayText:output_type -> Anki.Vector.external_interface.SayTextResponse
	143, // 145: Anki.Vector.external_interface.ExternalInterface.ConnectCube:output_type -> Anki.Vector.external_interface.ConnectCubeResponse
	144, // 146: Anki.Vector.external_interface.ExternalInterface.DisconnectCube:output_type -> Anki.Vector.external_interface.DisconnectCubeResponse
	145, // 147: Anki.Vector.external_interface.ExternalInterface.CubesAvailable:output_type -> Anki.Vector.external_interface.CubesAvailableResponse
	146, // 148: Anki.Vector.external_interface.ExternalInterface.FlashCubeLights:output_type -> Anki.Vector.external_interface.FlashCubeLightsResponse
	147, // 149: Anki.Vector.external_interface.ExternalInterface.ForgetPreferredCube:output_type -> Anki.Vector.external_interface.ForgetPreferredCubeResponse
	148, // 150: Anki.Vector.external_interface.ExternalInterface.SetPreferredCube:output_type -> Anki.Vector.external_interface.SetPreferredCubeResponse
	149, // 151: Anki.Vector.external_interface.ExternalInterface.DeleteCustomObjects:output_type -> Anki.Vector.external_interface.DeleteCustomObjectsResponse
	150, // 152: Anki.Vector.external_interface.ExternalInterface.CreateFixedCustomObject:output_type -> Anki.Vector.external_interface.CreateFixedCustomObjectResponse
	151, // 153: Anki.Vector.external_interface.ExternalInterface.DefineCustomObject:output_type -> Anki.Vector.external_interface.DefineCustomObjectResponse
	152, // 154: Anki.Vector.external_interface.ExternalInterface.SetCubeLights:output_type -> Anki.Vector.external_interface.SetCubeLightsResponse
	153, // 155: Anki.Vector.external_interface.ExternalInterface.AudioFeed:output_type -> Anki.Vector.external_interface.AudioFeedResponse
	154, // 156: Anki.Vector.external_interface.ExternalInterface.CameraFeed:output_type -> Anki.Vector.external_interface.CameraFeedResponse
	155, // 157: Anki.Vector.external_interface.ExternalInterface.CaptureSingleImage:output_type -> Anki.Vector.external_interface.CaptureSingleImageResponse
	156, // 158: Anki.Vector.external_interface.ExternalInterface.GetCameraConfig:output_type -> Anki.Vector.external_interface.CameraConfigResponse
	157, // 159: Anki.Vector.external_interface.ExternalInterface.SetEyeColor:output_type -> Anki.Vector.external_interface.SetEyeColorResponse
	158, // 160: Anki.Vector.external_interface.ExternalInterface.NavMapFeed:output_type -> Anki.Vector.external_interface.NavMapFeedResponse
	159, // 161: Anki.Vector.external_interface.ExternalInterface.SetCameraSettings:output_type -> Anki.Vector.external_interface.SetCameraSettingsResponse
	160, // 162: Anki.Vector.external_interface.ExternalInterface.AppIntent:output_type -> Anki.Vector.external_interface.AppIntentResponse
	161, // 163: Anki.Vector.external_interface.ExternalInterface.GetOnboardingState:output_type -> Anki.Vector.external_interface.OnboardingStateResponse
	162, // 164: Anki.Vector.external_interface.ExternalInterface.SendOnboardingInput:output_type -> Anki.Vector.external_interface.OnboardingInputResponse
	163, // 165: Anki.Vector.external_interface.ExternalInterface.GetLatestAttentionTransfer:output_type -> Anki.Vector.external_interface.LatestAttentionTransferResponse
	164, // 166: Anki.Vector.external_interface.ExternalInterface.PullJdocs:output_type -> Anki.Vector.external_interface.PullJdocsResponse
	165, // 167: Anki.Vector.external_interface.ExternalInterface.UpdateSettings:output_type -> Anki.Vector.external_interface.UpdateSettingsResponse
	166, // 168: Anki.Vector.external_interface.ExternalInterface.UpdateAccountSettings:output_type -> Anki.Vector.external_interface.UpdateAccountSettingsResponse
	167, // 169: Anki.Vector.external_interface.ExternalInterface.UpdateUserEntitlements:output_type -> Anki.Vector.external_interface.UpdateUserEntitlementsResponse
	168, // 170: Anki.Vector.external_interface.ExternalInterface.StartUpdateEngine:output_type -> Anki.Vector.external_interface.CheckUpdateStatusResponse
	168, // 171: Anki.Vector.external_interface.ExternalInterface.CheckUpdateStatus:output_type -> Anki.Vector.external_interface.CheckUpdateStatusResponse
	169, // 172: Anki.Vector.external_interface.ExternalInterface.UpdateAndRestart:output_type -> Anki.Vector.external_interface.UpdateAndRestartResponse
	170, // 173: Anki.Vector.external_interface.ExternalInterface.UploadDebugLogs:output_type -> Anki.Vector.external_interface.UploadDebugLogsResponse
	171, // 174: Anki.Vector.external_interface.ExternalInterface.CheckCloudConnection:output_type -> Anki.Vector.external_interface.CheckCloudResponse
	172, // 175: Anki.Vector.external_interface.ExternalInterface.GetFeatureFlag:output_type -> Anki.Vector.external_interface.FeatureFlagResponse
	173, // 176: Anki.Vector.external_interface.ExternalInterface.GetFeatureFlagList:output_type -> Anki.Vector.external_interface.FeatureFlagListResponse
	174, // 177: Anki.Vector.external_interface.ExternalInterface.GetAlexaAuthState:output_type -> Anki.Vector.external_interface.AlexaAuthStateResponse
	175, // 178: Anki.Vector.external_interface.ExternalInterface.AlexaOptIn:output_type -> Anki.Vector.external_interface.AlexaOptInResponse
	101, // 179: Anki.Vector.external_interface.ExternalInterface.AssumeBehaviorControl:output_type -> Anki.Vector.external_interface.BehaviorControlResponse
	90,  // [90:180] is the sub-list for method output_type
	0,   // [0:90] is the sub-list for method input_type
	0,   // [0:0] is the sub-list for extension type_name
	0,   // [0:0] is the sub-list for extension extendee
	0,   // [0:0] is the sub-list for field type_name
}

func init() { file_external_interface_proto_init() }
func file_external_interface_proto_init() {
	if File_external_interface_proto != nil {
		return
	}
	file_alexa_proto_init()
	file_behavior_proto_init()
	file_cube_proto_init()
	file_messages_proto_init()
	file_nav_map_proto_init()
	file_settings_proto_init()
	file_shared_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_external_interface_proto_rawDesc), len(file_external_interface_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_external_interface_proto_goTypes,
		DependencyIndexes: file_external_interface_proto_depIdxs,
		EnumInfos:         file_external_interface_proto_enumTypes,
	}.Build()
	File_external_interface_proto = out.File
	file_external_interface_proto_goTypes = nil
	file_external_interface_proto_depIdxs = nil
}
