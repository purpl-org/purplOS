// File: backapackAnimationTriggers
// Author: Kevin M. Karol
// Created: 6/21/18
// Copyright: Anki, inc. 2018


namespace Anki {
namespace Vector {

// note: if you add a new animation trigger that is deemed to be a "behavior light", please add it to the
//       the list of "behavior lights" in BackpackLightComponent::IsBehaviorLightActive()
//       this is our workaround to give priority of these behavior state lights over some critical backpack lights
//       eg. active feature lights take precedence over charging and notification lights
enum int_32 BackpackAnimationTrigger
{
  // Please keep alphabetical

  AlexaNotification,
  Charging,
  DanceToTheBeat,
  Idle_09,
  LowBattery,
  MeetVictor,
  Muted,
  Off,
  Offline,
  Offline_Off,
  Petting,
  SpinnerBlueCelebration,
  SpinnerBlueHoldTarget,
  SpinnerBlueSelectTarget,
  SpinnerGreenCelebration,
  SpinnerGreenHoldTarget,
  SpinnerGreenSelectTarget,
  SpinnerPurpleCelebration,
  SpinnerPurpleHoldTarget,
  SpinnerPurpleSelectTarget,
  SpinnerRedCelebration,
  SpinnerRedHoldTarget,
  SpinnerRedSelectTarget,
  SpinnerYellowCelebration,
  SpinnerYellowHoldTarget,
  SpinnerYellowSelectTarget,
  Streaming,
  WorkingOnIt,

  Count
}

// CppLite doesn't generate EnumToString so create our own
enum_concept string EnumToString[BackpackAnimationTrigger] {
  AlexaNotification         = verbatim "AlexaNotification",
  Charging                  = verbatim "Charging",
  DanceToTheBeat            = verbatim "DanceToTheBeat",
  Idle_09                   = verbatim "Idle_09",
  LowBattery                = verbatim "LowBattery",
  MeetVictor                = verbatim "MeetVictor",
  Muted                     = verbatim "Muted",
  Off                       = verbatim "Off",
  Offline                   = verbatim "Offline",
  Offline_Off               = verbatim "Offline_Off",
  Petting                   = verbatim "Petting",
  SpinnerBlueCelebration    = verbatim "SpinnerBlueCelebration",
  SpinnerBlueHoldTarget     = verbatim "SpinnerBlueHoldTarget",
  SpinnerBlueSelectTarget   = verbatim "SpinnerBlueSelectTarget",
  SpinnerGreenCelebration   = verbatim "SpinnerGreenCelebration",
  SpinnerGreenHoldTarget    = verbatim "SpinnerGreenHoldTarget",
  SpinnerGreenSelectTarget  = verbatim "SpinnerGreenSelectTarget",
  SpinnerPurpleCelebration  = verbatim "SpinnerPurpleCelebration",
  SpinnerPurpleHoldTarget   = verbatim "SpinnerPurpleHoldTarget",
  SpinnerPurpleSelectTarget = verbatim "SpinnerPurpleSelectTarget",
  SpinnerRedCelebration     = verbatim "SpinnerRedCelebration",
  SpinnerRedHoldTarget      = verbatim "SpinnerRedHoldTarget",
  SpinnerRedSelectTarget    = verbatim "SpinnerRedSelectTarget",
  SpinnerYellowCelebration  = verbatim "SpinnerYellowCelebration",
  SpinnerYellowHoldTarget   = verbatim "SpinnerYellowHoldTarget",
  SpinnerYellowSelectTarget = verbatim "SpinnerYellowSelectTarget",
  Streaming                 = verbatim "Streaming",
  WorkingOnIt               = verbatim "WorkingOnIt",

  Count                     = verbatim "Count"
}

} // end namespace Vector
} // end namespace Anki
